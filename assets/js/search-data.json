{
  
    
        "post0": {
            "title": "Making A Book Recommendation System",
            "content": "from fastai.collab import * from fastai.tabular.all import * . Introduction . . Tip: Did you know you can run these tutorials interactively? Simply press the Colab badge on the top. . We are going to use Collaborative Filtering to create a book recommendation system. Recommender Systems based on collaborative make recommendations based on what similar users liked. So if I have read Inferno by Dan Brown and liked it (which I did), the system will look for books also liked by people who liked Inferno and recommend them to me. . It uses a concept called latent factors. What are latent factors you may ask? Let us understand them using an example. . Let us take two books. Inferno by Dan Brown and To Kill A MockingBird by Harper Lee. Those are two very different books. Let us consider three aspects to classify this books: classics (whether the book is a classic or not), action-oriented and new-gen (modern-times setting). . We will give a score ranging from 1 to -1 to all these three aspects of our books, 1 meaning it scores high on that aspect and -1 for a low score. . So, for example, To Kill a MockingBird is a classic, it is not so much action-oriented and also not so much new-gen. So its scores would look as follows: . mocking_bird = np.array([0.9, -0.85, -0.9]) . For Inferno, which is not so much a classic, is action-oriented and is new-gen, we would have the following representation: . inferno = np.array([-0.9, 0.7, 0.9]) . Now, let us hypothesize a reader who doesn&#39;t enjoy classics that much, doesn&#39;t mind action books and really prefers new-gen books (this user actually represents my liking). . reader = np.array([-0.5, 0.2, 0.9]) . To see which book we need to recommend our not-so-much hypothetical reader, we will need to perform dot product between the book factors and the user factors. Dot product simply means multiply each consecutive items and add the results. . (reader*mocking_bird).sum() . -1.4300000000000002 . (reader*inferno).sum() . 1.4 . Based on the results, we would want to recommend Inferno to our user and not To Kill A MockingBird since he wouldn&#39;t enjoy the latter that much. . The magic part about Collaborative Filtering and the reason we called our factors latent is that; we never tell our model anything about what factors to consider or how high or low a book or user scores on each factors. The model learns all that by itself. We simply feed it books rated by users and using that information, it figures out a way to score each factor. As I said, pretty magical. . Let us see that in action. . Luckily, there is already a good dataset on books and ratings by users called GoodBooks10k available from this repo in github. As the name suggests, it contains ratings of 10,000 books and 6 million ratings. . We can download and extract the data using the following convinient functions: . path = Path(&#39;data&#39;) if not path.exists(): path.mkdir() untar_data(&#39;https://github.com/zygmuntz/goodbooks-10k/releases/download/v1.0/goodbooks-10k.zip&#39;, dest=path) . We can inspect what has been downloaded: . path.ls(file_type=&#39;text&#39;) . (#5) [Path(&#39;README.md&#39;),Path(&#39;tags.csv&#39;),Path(&#39;books.csv&#39;),Path(&#39;book_tags.csv&#39;),Path(&#39;ratings.csv&#39;)] . We are interested in the rating.csv file, since that is where the actual ratings are. We can load it up in a pandas dataframe: . ratings = pd.read_csv(path/&#39;ratings.csv&#39;) ratings . user_id book_id rating . 0 1 | 258 | 5 | . 1 2 | 4081 | 4 | . 2 2 | 260 | 5 | . 3 2 | 9296 | 5 | . 4 2 | 2318 | 3 | . ... ... | ... | ... | . 5976474 49925 | 510 | 5 | . 5976475 49925 | 528 | 4 | . 5976476 49925 | 722 | 4 | . 5976477 49925 | 949 | 5 | . 5976478 49925 | 1023 | 4 | . 5976479 rows × 3 columns . We have a user_id column that represents each user, book_id to represent the books and the rating column is the rating given to a book by a particular user. It ranges from 0 to 5. . Subset of the Dataset . We don&#39;t want to work on the full dataset right away since it would take a long time to model and this would limit the number of experiments we can carry out. . Instead, first we will work with only the first 100, 000 ratings. . ratings = ratings.iloc[:100000] . We check for any missing value and drop them if they exists: . ratings.isnull().values.any() . False . Another issue is with the book_id. The model as is would work even if we used book_id but for visual purposes, we&#39;d rather have the book title to look at, since that is more informative to us (not the model). . So we will have to load in the books.csv file and merge it with our ratings DataFrame. . books = pd.read_csv(path/&#39;books.csv&#39;) . books.columns . Index([&#39;book_id&#39;, &#39;goodreads_book_id&#39;, &#39;best_book_id&#39;, &#39;work_id&#39;, &#39;books_count&#39;, &#39;isbn&#39;, &#39;isbn13&#39;, &#39;authors&#39;, &#39;original_publication_year&#39;, &#39;original_title&#39;, &#39;title&#39;, &#39;language_code&#39;, &#39;average_rating&#39;, &#39;ratings_count&#39;, &#39;work_ratings_count&#39;, &#39;work_text_reviews_count&#39;, &#39;ratings_1&#39;, &#39;ratings_2&#39;, &#39;ratings_3&#39;, &#39;ratings_4&#39;, &#39;ratings_5&#39;, &#39;image_url&#39;, &#39;small_image_url&#39;], dtype=&#39;object&#39;) . We drop some columns which we don&#39;t require: . books.drop([&#39;best_book_id&#39;, &#39;work_id&#39;, &#39;title&#39;,&#39;books_count&#39;, &#39;language_code&#39;, &#39;isbn13&#39;, &#39;isbn&#39;,&#39;ratings_count&#39;, &#39;work_ratings_count&#39;, &#39;work_text_reviews_count&#39;, &#39;ratings_1&#39;, &#39;ratings_2&#39;, &#39;ratings_3&#39;, &#39;ratings_4&#39;, &#39;ratings_5&#39;,&#39;image_url&#39;, &#39;small_image_url&#39;], axis=1, inplace=True) books.head() . book_id goodreads_book_id authors original_publication_year original_title average_rating . 0 1 | 2767052 | Suzanne Collins | 2008.0 | The Hunger Games | 4.34 | . 1 2 | 3 | J.K. Rowling, Mary GrandPré | 1997.0 | Harry Potter and the Philosopher&#39;s Stone | 4.44 | . 2 3 | 41865 | Stephenie Meyer | 2005.0 | Twilight | 3.57 | . 3 4 | 2657 | Harper Lee | 1960.0 | To Kill a Mockingbird | 4.25 | . 4 5 | 4671 | F. Scott Fitzgerald | 1925.0 | The Great Gatsby | 3.89 | . Drop any missing values: . books.isnull().values.any() . True . books.dropna(inplace=True) . And finally merge it to one DataFrame: . ratings = ratings.merge(books) ratings.head() . user_id book_id rating goodreads_book_id authors original_publication_year original_title average_rating . 0 1 | 258 | 5 | 1232 | Carlos Ruiz Zafón, Lucia Graves | 2001 | La sombra del viento | 4.24 | . 1 11 | 258 | 3 | 1232 | Carlos Ruiz Zafón, Lucia Graves | 2001 | La sombra del viento | 4.24 | . 2 143 | 258 | 4 | 1232 | Carlos Ruiz Zafón, Lucia Graves | 2001 | La sombra del viento | 4.24 | . 3 242 | 258 | 5 | 1232 | Carlos Ruiz Zafón, Lucia Graves | 2001 | La sombra del viento | 4.24 | . 4 325 | 258 | 4 | 1232 | Carlos Ruiz Zafón, Lucia Graves | 2001 | La sombra del viento | 4.24 | . Creating the DataLoaders . Since that looks okay, we can go ahead and create our DataLoaders object that we will feed to the model. A DataLoaders is simply a convinient object that holds our training and validation data and will pass in the data to our model in mini-batches. . We can look up the documentation of a function by calling the doc function. . doc(CollabDataLoaders.from_df) . CollabDataLoaders.from_df[source] . CollabDataLoaders.from_df(ratings, valid_pct=0.2, user_name=None, item_name=None, rating_name=None, seed=None, path=&#39;.&#39;, bs=64, val_bs=None, shuffle_train=True, device=None) . Create a DataLoaders suitable for collaborative filtering from ratings. . Show in docs . The above tells us what we will need to pass in the function in order to create our DataLoaders. Specifically we will need to pass in : . The DataFrame we are creating from (ratings) | Size of the Validation split (20%) | The column that represents our user (user_id) | The column that represents our item (original_title) | The column that represents our rating (rating) | . dls = CollabDataLoaders.from_df(ratings=ratings, valid_pct=0.2, user_name=&#39;user_id&#39;, item_name=&#39;original_title&#39;, rating_name=&#39;rating&#39;) . We can look at one batch of data: . dls.show_batch() . user_id original_title rating . 0 791 | Sphere | 3 | . 1 543 | Metamorphoses | 5 | . 2 1835 | 1491: New Revelations of the Americas Before Columbus | 4 | . 3 2688 | Good Omens: The Nice and Accurate Prophecies of Agnes Nutter, Witch | 5 | . 4 264 | Jonathan Livingston Seagull | 5 | . 5 2074 | The Curious Incident of the Dog in the Night-Time | 4 | . 6 2136 | The Lovely Bones | 4 | . 7 1089 | Franny and Zooey | 5 | . 8 2334 | Great Expectations | 4 | . 9 750 | The History of the Hobbit, Part One: Mr. Baggins | 2 | . And we can also check the classes created in our DataLoaders . dls.classes . {&#39;original_title&#39;: [&#39;#na#&#39;, &#39; &#39;, &#39; Animal Farm &amp; 1984&#39;, &#39; Burned (Burned, #1)&#39;, &#39; Carter Beats the Devil&#39;, &#39; De Imitatione Christi&#39;, &#39; Faust. Der Tragödie erster und zweiter Teil &#39;, &#39; Feeling Good: The New Mood Therapy&#39;, &#39; Innocent Traitor&#39;, &#39; The Fellowship of the Ring&#39;, &#39; The Sea of Trolls&#39;, &#39; The Tale of Despereaux&#39;, &#39; Игрок &#39;, &#39; الرحيق المختوم: بحث في السيرة النبوية على صاحبها أفضل الصلاة والسلام &#39;, &#39; سمفونی مردگان&#39;, &#39; めくらやなぎと、眠る女 [Mekurayanagi to, nemuru onna]&#39;, &#39; 国境の南、太陽の西 [Kokkyō no minami, taiyō no nishi]&#39;, &#39;&#34;...And Ladies of the Club&#34;&#39;, &#39;&#34;D&#34; is for Deadbeat &#39;, &#39;&#34;M&#34; is for Malice&#39;, &#39;&#34;N&#34; is for Noose&#39;, &#39;&#34;O&#34; is for Outlaw&#39;, &#39;&#34;P&#34; is for Peril&#39;, &#39;&#34;Q&#34; is for Quarry&#39;, &#34;&#39;Tis: A Memoir&#34;, &#39;... Then He Ate My Boy Entracers&#39;, &#34;...and that&#39;s when it fell off in my hand&#34;, &#39;1,000 Places to See Before You Die&#39;, &#39;100 Selected Poems by e. e. Cummings&#39;, &#39;1491: New Revelations of the Americas Before Columbus&#39;, &#39;1776&#39;, &#39;1st To Die&#39;, &#39;2001: A Space Odyssey&#39;, &#39;2010: Odyssey Two&#39;, &#39;2061: Odyssey Three&#39;, &#39;2nd Chance&#39;, &#39;30 Days of Night&#39;, &#39;300&#39;, &#39;3001: The Final Odyssey&#39;, &#39;31 Songs&#39;, &#39;3rd Degree&#39;, &#39;4.50 From Paddington&#39;, &#39;44 Scotland Street&#39;, &#34;4th of July (Women&#39;s Murder Club, #4)&#34;, &#39;5 cm&#39;, &#39;84, Charing Cross Road&#39;, &#39;90 Minutes in Heaven&#39;, &#39;A Bad Case of Stripes&#39;, &#39;A Bargain for Frances&#39;, &#39;A Beautiful Mind&#39;, &#39;A Bend in the River&#39;, &#39;A Bend in the Road&#39;, &#39;A Breath of Snow and Ashes&#39;, &#39;A Brief History of Time: From the Big Bang to Black Holes&#39;, &#39;A Briefer History of Time&#39;, &#39;A Bruxa de Portobello&#39;, &#39;A Canticle for Leibowitz&#39;, &#39;A Caress of Twilight (Merry Gentry, #2)&#39;, &#39;A Caribbean Mystery&#39;, &#39;A Case of Need&#39;, &#39;A Certain Slant of Light&#39;, &#39;A Charlie Brown Christmas &#39;, &#39;A Child Called &#34;It&#34;: One Child &#39;s Courage to Survive&#39;, &#34;A Child&#39;s Garden of Verses&#34;, &#39;A Christmas Carol&#39;, &#39;A Civil Action&#39;, &#39;A Civil Campaign&#39;, &#39;A Clash of Kings&#39;, &#39;A Clockwork Orange&#39;, &#39;A Color of His Own&#39;, &#39;A Complicated Kindness&#39;, &#39;A Coney Island of the Mind: Poems&#39;, &#39;A Confederacy of Dunces&#39;, &#34;A Connecticut Yankee in King Arthur&#39;s Court&#34;, &#34;A Cook&#39;s Tour: Global Adventures in Extreme Cuisines&#34;, &#39;A Countess Below Stairs&#39;, &#39;A Crown of Swords&#39;, &#39;A Cry in the Night&#39;, &#39;A Dangerous Fortune&#39;, &#39;A Dangerous Path&#39;, &#39;A Darkness More Than Night&#39;, &#39;A Darkness at Sethanon &#39;, &#39;A Death In Vienna&#39;, &#39;A Death in the Family&#39;, &#39;A Deepness in the Sky&#39;, &#39;A Dirty Job&#39;, &#39;A Distant Mirror: The Calamitous 14th Century&#39;, &#39;A Drink Before the War&#39;, &#39;A Faint Cold Fear&#39;, &#39;A Farewell to Arms&#39;, &#39;A Feast for Crows&#39;, &#39;A Fine Balance&#39;, &#39;A Fire Upon The Deep&#39;, &#39;A Fistful of Charms&#39;, &#39;A Game of Thrones&#39;, &#39;A Girl Named Zippy: Growing up Small in Mooreland, Indiana &#39;, &#39;A Girl of the Limberlost&#39;, &#39;A Good Man Is Hard to Find, and Other Stories&#39;, &#39;A Good Yarn&#39;, &#39;A Great Deliverance&#39;, &#39;A Great and Terrible Beauty&#39;, &#39;A Grief Observed&#39;, &#39;A Handful of Dust&#39;, &#39;A Hat Full of Sky&#39;, &#39;A Heartbreaking Work of Staggering Genius&#39;, &#39;A History of God: The 4,000-Year Quest of Judaism, Christianity, and Islam&#39;, &#39;A History of Western Philosophy And Its Connection with Political and Social Circumstances from the Earliest Times to the Present Day&#39;, &#39;A History of the World in 6 Glasses&#39;, &#39;A Home at the End of the World&#39;, &#39;A House for Mr. Biswas&#39;, &#39;A Hunger Like No Other&#39;, &#39;A Kingdom of Dreams &#39;, &#39;A Kiss of Shadows (Merry Gentry, #1)&#39;, &#39;A Knight in Shining Armor&#39;, &#39;A Knight of the Word &#39;, &#39;A Lesson Before Dying&#39;, &#39;A Lick of Frost&#39;, &#39;A Light in the Attic&#39;, &#39;A Light in the Window (The Mitford Years, #2)&#39;, &#39;A Little Princess&#39;, &#39;A Long Way Down&#39;, &#39;A Long Way From Chicago&#39;, &#39;A Long Way Gone. Memoirs of a Boy Soldier&#39;, &#39;A Man Named Dave: A Story of Triumph and Forgiveness&#39;, &#39;A Man Without a Country&#39;, &#39;A Man in Full&#39;, &#39;A Mango-Shaped Space&#39;, &#39;A Map of the World&#39;, &#39;A Matter of Honor&#39;, &#34;A Midsummer Night&#39;s Dream&#34;, &#39;A Million Little Pieces&#39;, &#39;A Modest Proposal and Other Satirical Works&#39;, &#39;A Monstrous Regiment of Women&#39;, &#39;A Morbid Taste for Bones&#39;, &#39;A Moveable Feast&#39;, &#39;A Murder is Announced&#39;, &#34;A New Earth: Awakening to Your Life&#39;s Purpose&#34;, &#39;A Northern Light&#39;, &#39;A Painted House&#39;, &#39;A Passage to India&#39;, &#34;A People&#39;s History of the United States: 1492 to Present &#34;, &#39;A Perfect Spy&#39;, &#39;A Piece of Cake: A Memoir&#39;, &#39;A Place Called Freedom&#39;, &#39;A Pocket Full of Rye&#39;, &#39;A Pocket for Corduroy&#39;, &#39;A Portrait of the Artist as a Young Man&#39;, &#39;A Prayer for Owen Meany&#39;, &#39;A Princess of Mars&#39;, &#39;A Raisin in the Sun&#39;, &#39;A Ring of Endless Light (Austin Family, #4)&#39;, &#39;A River Runs Through It and Other Stories&#39;, &#34;A Room of One&#39;s Own&#34;, &#39;A Room with a View&#39;, &#39;A Rose for Emily&#39;, &#39;A Sand County Almanac&#39;, &#39;A Scanner Darkly &#39;, &#39;A Separate Peace&#39;, &#39;A Separate Reality&#39;, &#39;A Severe Mercy&#39;, &#39;A Short History of Nearly Everything&#39;, &#39;A Short History of Tractors in Ukrainian&#39;, &#39;A Simple Plan&#39;, &#39;A Single Shard&#39;, &#39;A Son of the Circus&#39;, &#39;A Spell for Chameleon&#39;, &#39;A Spot of Bother&#39;, &#39;A Storm of Swords&#39;, &#39;A Stranger Is Watching&#39;, &#39;A Stranger in the Mirror&#39;, &#39;A Streetcar Named Desire&#39;, &#39;A Stroke of Midnight (Merry Gentry, #4)&#39;, &#39;A Study in Scarlet&#39;, &#39;A Suitable Boy&#39;, &#34;A Supposedly Fun Thing I&#39;ll Never Do Again: Essays and Arguments&#34;, &#39;A Swiftly Tilting Planet&#39;, &#39;A Tale of Two Cities&#39;, &#39;A Theory of Justice&#39;, &#39;A Thousand Acres&#39;, &#39;A Thousand Splendid Suns&#39;, &#39;A Time to Kill&#39;, &#39;A Town Like Alice&#39;, &#39;A Tree Grows In Brooklyn &#39;, &#39;A Twist in the Tale&#39;, &#39;A Virtuous Woman &#39;, &#39;A Voice in the Wind&#39;, &#39;A Walk Across America&#39;, &#39;A Walk in the Woods&#39;, &#39;A Walk to Remember&#39;, &#39;A Wedding in December&#39;, &#39;A Whole New Mind: Why Right-Brainers Will Rule the Future&#39;, &#39;A Widow for One Year&#39;, &#39;A Wind in the Door&#39;, &#39;A Wizard of Earthsea&#39;, &#39;A Woman of Substance &#39;, &#39;A Wrinkle in Time&#39;, &#39;A Year in Provence&#39;, &#39;A Year in the Merde&#39;, &#39;A Yellow Raft in Blue Water: A Novel&#39;, &#39;A is for Alibi&#39;, &#39;ABNKKBSNPLAKo?! (Mga Kwentong Chalk ni Bob Ong)&#39;, &#39;Abarat&#39;, &#39;Abhorsen&#39;, &#39;About a Boy&#39;, &#39;Absalom, Absalom!&#39;, &#39;Absent in the Spring &#39;, &#39;Absolute Power&#39;, &#39;Absolution Gap&#39;, &#39;Absurdistan&#39;, &#39;Accelerando&#39;, &#39;Across the Nightingale Floor &#39;, &#39;Act of Treason&#39;, &#39;Adam Bede&#39;, &#39;Addicted&#39;, &#39;Adrift: Seventy-Six Days Lost at Sea&#39;, &#39;Aesopica&#39;, &#39;Affinity&#39;, &#39;After the Funeral &#39;, &#39;Against a Dark Background&#39;, &#39;Agents of Light and Darkness&#39;, &#39;Agnes Grey&#39;, &#39;Agnes and the Hitman&#39;, &#34;Ain&#39;t She Sweet?&#34;, &#39;Airframe&#39;, &#39;Airport&#39;, &#39;Akira 1&#39;, &#39;Al Capone Does My Shirts&#39;, &#39;Alanna: The First Adventure&#39;, &#39;Alas, Babylon&#39;, &#39;Alexander Hamilton&#39;, &#39;Alexander and the Terrible, Horrible, No Good, Very Bad Day&#39;, &#39;Alias Grace&#39;, &#34;Alice&#39;s Adventures in Wonderland&#34;, &#39;Alive: The Story of the Andes Survivors&#39;, &#39;All Around the Town&#39;, &#39;All But My Life&#39;, &#39;All Creatures Great And Small&#39;, &#39;All Families Are Psychotic&#39;, &#39;All He Ever Wanted&#39;, &#39;All I Really Need To Know I Learned in Kindergarten&#39;, &#39;All I Want Is Everything&#39;, &#39;All My Sons&#39;, &#34;All Over But the Shoutin&#39;&#34;, &#39;All Souls: A Family Story from Southie&#39;, &#39;All That Remains&#39;, &#39;All Things Bright and Beautiful&#39;, &#39;All Together Dead&#39;, &#34;All Tomorrow&#39;s Parties&#34;, &#39;All the King’s Men&#39;, &#34;All the President&#39;s Men&#34;, &#39;All the Pretty Horses&#39;, &#39;All the Weyrs of Pern&#39;, &#39;All-American Girl&#39;, &#39;All-Star Superman (Volume 1)&#39;, &#39;All-of-a-Kind Family&#39;, &#39;Almost French: Love and a New Life in Paris&#39;, &#39;Almost Heaven&#39;, &#39;Along Came a Spider&#39;, &#39;Also sprach Zarathustra&#39;, &#39;Altered Carbon&#39;, &#39;Alvin Journeyman (Tales of Alvin Maker #4)&#39;, &#39;Alvin Maker: Seventh Son&#39;, &#39;Amazing Grace&#39;, &#39;Amazonia&#39;, &#39;Amelia Bedelia&#39;, &#39;Amelia Bedelia and the Surprise Shower&#39;, &#34;America (The Book): A Citizen&#39;s Guide to Democracy Inaction&#34;, &#39;American Born Chinese&#39;, &#39;American Gods&#39;, &#39;American Pastoral&#39;, &#39;American Psycho&#39;, &#39;American Sphinx: The Character of Thomas Jefferson&#39;, &#39;American Tabloid&#39;, &#39;Amerika&#39;, &#39;Among the Barons&#39;, &#39;Among the Betrayed&#39;, &#39;Among the Brave (Shadow Children, #5)&#39;, &#39;Among the Enemy (Shadow Children, #6)&#39;, &#39;Among the Hidden &#39;, &#39;Among the Impostors (Shadow Children, #2)&#39;, &#39;Amphigorey&#39;, &#39;Amsterdam&#39;, &#39;Amusing Ourselves to Death: Public Discourse in the Age of Show Business&#39;, &#39;Amy &amp; Isabelle&#39;, &#39;An Abundance of Katherines&#39;, &#39;An Acceptable Time (Time Quintet, #5)&#39;, &#39;An American Tragedy &#39;, &#39;An Anthropologist on Mars: Seven Paradoxical Tales&#39;, &#39;An Army at Dawn: The War in Africa, 1942-1943&#39;, &#39;An Artist of the Floating World&#39;, &#39;An Autobiography or The Story of My Experiments with Truth&#39;, &#39;An Echo in the Darkness (Mark of the Lion, #2)&#39;, &#39;An Enquiry concerning Human Understanding&#39;, &#39;An Essay Concerning Human Understanding&#39;, &#39;An Excellent conceited Tragedie of Romeo and Juliet&#39;, &#39;An Ideal Husband&#39;, &#39;An Inquiry into the Nature and Causes of the Wealth of Nations &#39;, &#39;An Instance of the Fingerpost&#39;, &#39;An Itchy Day&#39;, &#39;An Old-Fashioned Girl&#39;, &#39;An Unquiet Mind: A Memoir of Moods and Madness&#39;, &#39;Anansi Boys&#39;, &#39;Anastasia Krupnik&#39;, &#39;Anatomy for the Artist&#39;, &#39;And the Band Played On: Politics, People, and the AIDS Epidemic&#39;, &#39;And to Think That I Saw It on Mulberry Street&#39;, &#39;Andy Goldsworthy: A Collaboration with Nature&#39;, &#34;Angela&#39;s Ashes: A Memoir&#34;, &#39;Angels&#39;, &#39;Angels &amp; Demons &#39;, &#39;Angels Fall&#39;, &#39;Angels Flight&#39;, &#39;Angels in America: A Gay Fantasia on National Themes&#39;, &#39;Angels in America: A Gay Fantasia on National Themes: Millennium Approaches (Part One)&#39;, &#39;Angle of Repose&#39;, &#39;Angry Housewives Eating Bon Bons&#39;, &#39;Angus, Thongs and Full-Frontal Snogging&#39;, &#34;Anil&#39;s Ghost&#34;, &#39;Animal Dreams&#39;, &#39;Animal Farm: A Fairy Story&#39;, &#39;Animal, Vegetable, Miracle: A Year of Food Life&#39;, &#39;Animalia&#39;, &#39;Anne Frank : The Biography&#39;, &#39;Anne Frank Remembered&#39;, &#39;Anne Frank: Beyond the Diary - A Photographic Remembrance&#39;, &#34;Anne Rice&#39;s The Tale of the Body Thief (Graphic Novel)&#34;, &#39;Anne of Avonlea&#39;, &#39;Anne of Green Gables&#39;, &#39;Anne of Ingleside&#39;, &#39;Anne of Windy Poplars&#39;, &#39;Anne of the Island&#39;, &#39;Annie on My Mind&#39;, &#39;Another Bullshit Night in Suck City: A Memoir&#39;, &#39;Another Fine Myth&#39;, &#39;Another Roadside Attraction&#39;, &#39;Ansichten eines Clowns&#39;, &#39;Anthem&#39;, &#39;Antigone&#39;, &#39;Antrax&#39;, &#39;Anybody Out There?&#39;, &#39;Anyone But You &#39;, &#39;Apathy and Other Small Victories&#39;, &#39;Apollyon: The Destroyer Is Unleashed&#39;, &#39;Appelsinpiken&#39;, &#39;Appointment in Samarra&#39;, &#39;Appointment with Death&#39;, &#39;April 1865: The Month That Saved America (P.S.)&#39;, &#39;Arcadia&#39;, &#39;Are You My Mother?&#39;, &#34;Are You There God? It&#39;s Me, Margaret&#34;, &#34;Are You There, Vodka? It&#39;s Me, Chelsea&#34;, &#39;Ariel&#39;, &#34;Armageddon&#39;s Children&#34;, &#39;Armageddon: The Cosmic Battle of the Ages&#39;, &#34;Arrow&#39;s Fall&#34;, &#34;Arrow&#39;s Flight (Heralds of Valdemar, #2)&#34;, &#39;Arrows of the Queen (Heralds of Valdemar #1)&#39;, &#39;Arsenic and Old Lace&#39;, &#39;Art in Theory, 1900-2000: An Anthology of Changing Ideas&#39;, &#39;Art of Seduction&#39;, &#39;Artemis Fowl&#39;, &#39;Arthur &amp; George&#39;, &#39;As I Lay Dying&#39;, &#39;As Intermitências da Morte&#39;, &#39;As Sure as the Dawn (Mark of the Lion, #3)&#39;, &#39;As The Crow Flies&#39;, &#39;As Valkírias&#39;, &#39;As You Like It&#39;, &#39;Ashes to Ashes&#39;, &#39;Ask and It Is Given: Learning to Manifest Your Desires&#39;, &#39;Ask the dust &#39;, &#34;Assassin&#39;s Apprentice&#34;, &#34;Assassin&#39;s Quest&#34;, &#39;Assassination Vacation&#39;, &#39;Assassins : Assignment: Jerusalem, Target: Antichrist&#39;, &#39;Assata: An Autobiography&#39;, &#39;Astonishing X-Men, Volume 1: Gifted&#39;, &#39;Astérix le Gaulois&#39;, &#34;At Bertram&#39;s Hotel&#34;, &#39;At First Sight&#39;, &#39;At Home in Mitford (Mitford Years #1)&#39;, &#39;At the Mountains of Madness&#39;, &#39;Atlantis Found&#39;, &#39;Atlas Shrugged&#39;, &#39;Atonement&#39;, &#39;Attack of the Deranged Mutant Killer Monster Snow Goons: A Calvin and Hobbes Collection&#39;, &#39;Aura&#39;, &#39;Austenland&#39;, &#39;Austerlitz&#39;, &#39;Autobiography of a Face&#39;, &#39;Avalon High&#39;, &#39;Awaken the Giant Within: How to Take Immediate Control of Your Mental, Emotional, Physical and Financial Destiny!&#39;, &#39;Ayat-ayat Cinta&#39;, &#39;Aztec&#39;, &#39;B is for Burglar&#39;, &#39;BLEACH―ブリーチ― u30001&#39;, &#39;BLEACH―ブリーチ― u30003&#39;, &#39;Baba ve Piç&#39;, &#39;Babbitt&#39;, &#39;Baby Proof&#39;, &#39;Babyville&#39;, &#39;Back Roads&#39;, &#39;Back Spin&#39;, &#39;Back When We Were Grownups&#39;, &#39;Back on Blossom Street&#39;, &#39;Bad Luck and Trouble&#39;, &#39;Bag of Bones&#39;, &#39;Bagombo Snuff Box&#39;, &#39;Ball Four&#39;, &#39;Ballet Shoes&#39;, &#39;Balzac et la Petite Tailleuse chinoise&#39;, &#34;Band of Brothers: E Company, 506th Regiment, 101st Airborne from Normandy to Hitler&#39;s Eagle&#39;s Nest&#34;, &#39;Barbarians at the Gate: The Fall of RJR Nabisco&#39;, &#39;Bare Bones&#39;, &#39;Barefoot&#39;, &#39;Barefoot Contessa Family Style: Easy Ideas and Recipes That Make Everyone Feel Like Family&#39;, &#34;Barefoot Contessa at Home: Everyday Recipes You&#39;ll Make Over and Over Again&#34;, &#39;Barefoot in Paris&#39;, &#39;Barnyard Dance&#39;, &#39;Barrel Fever: Stories and Essays&#39;, &#39;Bartleby, the Scrivener: A Story of Wall Street&#39;, &#39;Bastard Out of Carolina&#39;, &#39;Batman (Volume 2): Hush&#39;, &#39;Batman Hush #1&#39;, &#39;Batman: Arkham Asylum - A Serious House on Serious Earth&#39;, &#39;Batman: Batman and Son&#39;, &#39;Batman: Dark Victory&#39;, &#39;Batman: The Dark Knight Returns&#39;, &#39;Batman: The Dark Knight Strikes Again&#39;, &#39;Batman: The Killing Joke &#39;, &#39;Batman: The Long Halloween&#39;, &#39;Batman: Year One&#39;, &#39;Battle Cry of Freedom&#39;, &#39;Battleaxe (The Axis Trilogy #1)&#39;, &#39;Battlefield Earth: A Saga of the Year 3000&#39;, &#39;Battlefield of the Mind: Winning the Battle in Your Mind&#39;, &#39;Baudolino&#39;, &#39;Be Here Now&#39;, &#39;Beach Music&#39;, &#39;Beach Road&#39;, &#39;Bearing an Hourglass&#39;, &#39;Beauty and the Beast&#39;, &#39;Beauty and the Beast (Little Golden Book)&#39;, &#34;Beauty&#39;s Punishment&#34;, &#34;Beauty&#39;s Release (Sleeping Beauty, #3)&#34;, &#39;Beauty: A Retelling of the Story of Beauty and the Beast&#39;, &#34;Because I&#39;m Worth It&#34;, &#39;Because of Winn-Dixie&#39;, &#39;Bee Season&#39;, &#39;Beezus and Ramona&#39;, &#39;Behind the Scenes at the Museum&#39;, &#39;Being a Green Mother (Incarnations of Immortality, #5)&#39;, &#39;Bel Canto&#39;, &#39;Bel-Ami&#39;, &#39;Belgarath the Sorcerer&#39;, &#39;Believing Christ: The Parable of the Bicycle and Other Good News&#39;, &#39;Belinda&#39;, &#39;Belly Laughs: The Naked Truth About Pregnancy and Childbirth&#39;, &#39;Beloved&#39;, &#39;Ben-Hur: A Tale of the Christ&#39;, &#39;Benim Adım Kırmızı&#39;, &#39;Benjamin Franklin: An American Life&#39;, &#39;Beowulf&#39;, &#39;Bergdorf Blondes&#39;, &#39;Berlin: The Downfall 1945&#39;, &#39;Bet Me&#39;, &#39;Betrayal in Death&#39;, &#39;Betsy-Tacy&#39;, &#39;Better Homes &amp; Gardens New Cook Book&#39;, &#39;Better Than Life&#39;, &#34;Better: A Surgeon&#39;s Notes on Performance&#34;, &#39;Between Sisters&#39;, &#39;Between a Rock and a Hard Place&#39;, &#39;Between, Georgia&#39;, &#39;Beyond Band of Brothers: The War Memoirs of Major Dick Winters&#39;, &#39;Beyond the Highland Mist&#39;, &#39;Big Bang: The Origin of the Universe&#39;, &#39;Big Cherry Holler (Big Stone Gap, Book 2)&#39;, &#39;Big Fish: A Novel of Mythic Proportions&#39;, &#39;Big Stone Gap&#39;, &#39;Big Sur&#39;, &#39;Big Trouble&#39;, &#39;Billions and Billions: Thoughts on Life and Death at the Brink of the Millennium&#39;, &#39;Billy Budd, Sailor&#39;, &#39;Bird by Bird: Some Instructions on Writing and Life&#39;, &#39;Birdman&#39;, &#39;Birds of America: Stories&#39;, &#39;Birds of a Feather&#39;, &#39;Birdsong&#39;, &#39;Birthright&#39;, &#39;Bitten&#39;, &#39;Bitter is the New Black : Confessions of a Condescending, Egomaniacal, Self-Centered Smartass, Or, Why You Should Never Carry A Prada Bag to the Unemployment Office&#39;, &#39;Black 1. The Birth of Evil&#39;, &#39;Black Beauty&#39;, &#39;Black Boy: A Record of Youth and Childhood&#39;, &#39;Black Cherry Blues&#39;, &#39;Black Elk Speaks&#39;, &#39;Black Hawk Down&#39;, &#39;Black Hole&#39;, &#39;Black Holes and Baby Universes and Other Essays&#39;, &#39;Black House &#39;, &#39;Black Like Me&#39;, &#39;Black Notice&#39;, &#39;Black Powder War&#39;, &#39;Black Rose&#39;, &#39;Black Sun Rising&#39;, &#39;Black Swan Green&#39;, &#39;Black and Blue&#39;, &#39;Blackberry Wine&#39;, &#39;Blackwood Farm&#39;, &#39;Blankets&#39;, &#39;Blaze&#39;, &#39;Bleachers&#39;, &#39;Bleach―ブリーチ― 15&#39;, &#39;Bleak House&#39;, &#39;Bless Me, Ultima&#39;, &#39;Blessings&#39;, &#39;Blindsight&#39;, &#39;Blindsighted&#39;, &#39;Blink&#39;, &#39;Blink: The Power of Thinking Without Thinking&#39;, &#39;Blood Bound&#39;, &#39;Blood Canticle&#39;, &#39;Blood Memory&#39;, &#39;Blood Meridian: Or the Evening Redness in the West&#39;, &#39;Blood Rites&#39;, &#39;Blood Work&#39;, &#39;Blood and Chocolate&#39;, &#39;Blood and Gold: The Vampire Marius&#39;, &#39;Blood of the Fold&#39;, &#39;Bloodline&#39;, &#39;Bloodsucking Fiends&#39;, &#39;Bloody Bones&#39;, &#39;Blow Fly&#39;, &#39;Blubber&#39;, &#39;Blue Bloods&#39;, &#39;Blue Dahlia&#39;, &#39;Blue Highways: A Journey into America&#39;, &#39;Blue Like Jazz: Nonreligious Thoughts on Christian Spirituality&#39;, &#39;Blue Mars &#39;, &#39;Blue Moon (Anita Blake, Vampire Hunter, #8)&#39;, &#39;Blue Noon (Midnighters, #3)&#39;, &#39;Blue Ocean Strategy: How to Create Uncontested Market Space and Make Competition Irrelevant&#39;, &#39;Blue Shoes and Happiness &#39;, &#39;Blue Smoke&#39;, &#39;Bluebeard&#39;, &#39;Blueberries for Sal&#39;, &#39;Body Double&#39;, &#39;Body Surfing&#39;, &#39;Body of Evidence &#39;, &#39;Bokhandleren i Kabul&#39;, &#39;Bone: The Complete Cartoon Epic in One Volume&#39;, &#39;Bones to Ashes&#39;, &#39;Bonjour tristesse&#39;, &#39;Book of Shadows&#39;, &#39;Book of a Thousand Days&#39;, &#39;Book of the Dead&#39;, &#39;Bookends&#39;, &#39;Books of Blood: Volume One&#39;, &#39;Books of Blood: Volumes 1-3&#39;, &#39;Born Free: A Lioness of Two Worlds&#39;, &#39;Born in Death (In Death, #23)&#39;, &#39;Born in Fire &#39;, &#39;Born in Ice&#39;, &#39;Born in Shame&#39;, &#39;Born on a Blue Day: Inside the Extraordinary Mind of an Autistic Savant&#39;, &#39;Boundaries&#39;, &#39;Boy Meets Boy&#39;, &#39;Boy Meets Girl&#39;, &#39;Boy Meets Girl: Say Hello to Courtship&#39;, &#34;Boy&#39;s Life&#34;, &#39;Boy: Tales of Childhood&#39;, &#39;Brain Droppings&#39;, &#39;Brandvägg&#39;, &#39;Brave New World&#39;, &#39;Brave New World Revisited &#39;, &#39;Brave New World/Brave New World Revisited&#39;, &#39;Braveheart&#39;, &#39;Bread and Jam for Frances&#39;, &#39;Break No Bones&#39;, &#34;Breakfast at Tiffany&#39;s&#34;, &#39;Breakfast of Champions&#39;, &#39;Breaking Dawn&#39;, &#39;Breaking Free&#39;, &#39;Breaking the Spell: Religion as a Natural Phenomenon&#39;, &#39;Breath, Eyes, Memory &#39;, &#39;Breathing Lessons&#39;, &#34;Brian&#39;s Winter&#34;, &#34;Briar&#39;s Book&#34;, &#39;Brick Lane&#39;, &#39;Brida&#39;, &#39;Brideshead Revisited: The Sacred and Profane Memories of Captain Charles Ryder&#39;, &#39;Bridge of Sighs&#39;, &#39;Bridge to Terabithia&#39;, &#39;Bridget Jones: The Edge of Reason&#39;, &#39;Brief Interviews with Hideous Men&#39;, &#39;Briefe an einen jungen Dichter&#39;, &#34;Bright Lights, Big Ass: A Self-Indulgent, Surly, Ex-Sorority Girl&#39;s Guide to Why it Often Sucks in the City, or Who are These Idiots and Why Do They All Live Next Door to Me?&#34;, &#39;Bright Lights, Big City&#39;, &#39;Brighton Rock&#39;, &#39;Brilliance of the Moon &#39;, &#39;Brimstone&#39;, &#39;Bringing Down the House: The Inside Story of Six M.I.T. Students Who Took Vegas for Millions&#39;, &#39;Brokeback Mountain&#39;, &#39;Broken&#39;, &#39;Broken Angels&#39;, &#39;Broken Prey&#39;, &#39;Broken for You&#39;, &#39;Brother Odd&#39;, &#39;Brown Bear, Brown Bear, What Do You See?&#39;, &#34;Brunelleschi&#39;s Dome: How a Renaissance Genius Reinvented Architecture&#34;, &#39;Bröderna Lejonhjärta&#39;, &#39;Brüder Grimm: Kinder- und Hausmärchen&#39;, &#39;Bud, Not Buddy&#39;, &#39;Buddenbrooks: Verfall einer Familie&#39;, &#39;Built to Last: Successful Habits of Visionary Companies&#39;, &#39;Bumi Manusia&#39;, &#39;Bunnicula: A Rabbit-Tale of Mystery&#39;, &#39;Burmese Days&#39;, &#39;Burning Chrome and Other Stories&#39;, &#39;Burning For Revenge&#39;, &#39;Burnt Offerings (Anita Blake, Vampire Hunter, #7)&#39;, &#39;Bury My Heart at Wounded Knee: An Indian History of the American West&#39;, &#39;By the Light of the Moon&#39;, &#39;By the Shores of Silver Lake&#39;, &#39;By the Sword&#39;, &#39;C is for Corpse&#39;, &#39;Cabal&#39;, &#39;Caddie Woodlawn&#39;, &#39;Call Me by Your Name&#39;, &#39;Calling Doctor Amelia Bedelia (I Can Read Book 2)&#39;, &#39;Calvin and Hobbes&#39;, &#39;Can You Keep a Secret?&#39;, &#34;Can&#39;t Wait to Get to Heaven&#34;, &#39;Candide&#39;, &#39;Cane River&#39;, &#39;Cannery Row &#39;, &#39;Caps for sale: a tale of a peddler, some monkeys and their monkey business&#39;, &#34;Captain Corelli&#39;s Mandolin&#34;, &#39;Captain Underpants and the Attack of the Talking Toilets&#39;, &#39;Captain Underpants and the Perilous Plot of Professor Poopypants (Captain Underpants)&#39;, &#39;Captains Courageous&#39;, &#39;Captains and the Kings&#39;, &#39;Cards on the Table&#39;, &#39;Care of the Soul : A Guide for Cultivating Depth and Sacredness in Everyday Life&#39;, &#39;Carolina Moon&#39;, &#39;Carpe Jugulum&#39;, &#39;Carrie&#39;, &#39;Carrion Comfort&#39;, &#39;Carry On, Jeeves&#39;, &#39;Carry On, Mr. Bowditch&#39;, &#39;Case Histories&#39;, &#39;Cash: The Autobiography of Johnny Cash&#39;, &#34;Cashflow Quadrant: Rich Dad&#39;s Guide to Financial Freedom&#34;, &#39;Casino Royale&#39;, &#39;Castle Roogna&#39;, &#39;Castle in the Air&#39;, &#39;Castle of Wizardry&#39;, &#39;Cat &amp; Mouse&#39;, &#39;Cat Among the Pigeons&#39;, &#39;Cat on a Hot Tin Roof&#39;, &#34;Cat&#39;s Cradle&#34;, &#34;Cat&#39;s Eye&#34;, &#39;Catch Me If You Can&#39;, &#39;Catch-22&#39;, &#39;Catering to Nobody&#39;, &#39;Cathedral&#39;, &#39;Catherine, Called Birdy&#39;, &#39;Cause of Death&#39;, &#39;Celebration of Discipline: The Path to Spiritual Growth&#39;, &#39;Cell&#39;, &#39;Centaur Aisle (Xanth, #4)&#39;, &#39;Centennial&#39;, &#39;Ceremony&#39;, &#39;Ceremony in Death&#39;, &#39;Certain Prey&#39;, &#39;Cerulean Sins (Anita Blake, Vampire Hunter, #11)&#39;, &#39;Chainfire (Sword of Truth, #9)&#39;, &#39;Chaos: Making a New Science&#39;, &#39;Chapterhouse: Dune&#39;, &#39;Charlie Bone and the Castle of Mirrors (The Children of the Red King, # 4)&#39;, &#39;Charlie Bone and the Hidden King (The Children of the Red King, # 5)&#39;, &#39;Charlie Bone and the Invisible Boy (The Children of the Red King, # 3)&#39;, &#39;Charlie Bone and the Time Twister &#39;, &#39;Charlie and the Chocolate Factory&#39;, &#39;Charlie and the Great Glass Elevator: The Further Adventures of Charlie Bucket and Willy Wonka, Chocolate-Maker Extraordinaire&#39;, &#34;Charlotte&#39;s Web&#34;, &#39;Charmed Life &#39;, &#39;Chasing Vermeer&#39;, &#39;Chasing the Dime&#39;, &#39;Chasm City&#39;, &#39;Che Guevara: A Revolutionary Life&#39;, &#39;Cheaper by the Dozen&#39;, &#39;Chesapeake&#39;, &#39;Chesapeake Blue (Chesapeake Bay Saga, #4)&#39;, &#39;Chicka Chicka Boom Boom&#39;, &#39;Chicken Soup for the Soul&#39;, &#39;Chicken Soup for the Teenage Soul (Chicken Soup for the Soul)&#39;, &#39;Chicken Soup with Rice: A Book of Months&#39;, &#39;Child of God&#39;, &#39;Child of the Prophecy &#39;, &#34;Childhood&#39;s End&#34;, &#39;Children of Dune&#39;, &#39;Children of God&#39;, &#39;Children of the Mind&#39;, &#39;Chill Factor&#39;, &#39;Chinese Cinderella: The True Story of an Unwanted Daughter&#39;, &#39;Chocolat&#39;, &#39;Choke&#39;, &#39;Chosen Prey&#39;, &#39;Christ the Lord: Out of Egypt&#39;, &#39;Christine&#39;, &#39;Christy&#39;, &#39;Chromosome 6&#39;, &#39;Chronicles: Volume One&#39;, &#39;Chuck Klosterman IV: A Decade of Curious People and Dangerous Ideas&#39;, &#39;Cien años de soledad&#39;, &#39;Cien sonetos de amor&#39;, &#39;Cinderella&#39;, &#39;Cinq semaines en ballon&#39;, &#39;Circle of Friends&#39;, &#39;Circus of the Damned (Anita Blake, Vampire Hunter, #3)&#39;, &#39;Cirque Du Freak (Cirque du Freak, #1) &#39;, &#39;Cities of the Plain &#39;, &#39;Citizen Soldiers: The U. S. Army from the Normandy Beaches to the Bulge to the Surrender of Germany&#39;, &#39;City of Bones&#39;, &#39;City of Glass&#39;, &#39;City of Golden Shadow&#39;, &#39;City of Masks&#39;, &#39;Civil Disobedience and Reading&#39;, &#39;Civil War: A Marvel Comics Event&#39;, &#39;CivilWarLand in Bad Decline&#39;, &#39;Claimed By Shadow&#39;, &#39;Clear and Present Danger&#39;, &#39;Clementine (Clementine, #1)&#39;, &#39;Click, Clack, Moo: Cows That Type&#39;, &#34;Clive Barker&#39;s The Great and Secret Show: Volume 1 (Clive Barker&#39;s the Great and Secret Show)&#34;, &#39;Close Range: Wyoming Stories&#39;, &#39;Cloud Atlas&#39;, &#39;Clouds of Witness&#39;, &#39;Cloudstreet&#39;, &#39;Cloudy with a Chance of Meatballs&#39;, &#39;Club Dead&#39;, &#39;Cocktails for Three&#39;, &#39;Cod: A Biography of the Fish that Changed the World&#39;, &#39;Code to Zero&#39;, &#39;Codependent No More: How to Stop Controlling Others and Start Caring for Yourself&#39;, &#39;Cold Comfort Farm&#39;, &#39;Cold Fire&#39;, &#39;Cold Mountain&#39;, &#39;Cold Sassy Tree&#39;, &#39;Collapse: How Societies Chose to Fail or Succeed&#39;, &#39;Collected Poems 1909-1962&#39;, &#39;Collected Works&#39;, &#39;Color: A Natural History of the Palette&#39;, &#39;Coma&#39;, &#39;Come Back, Amelia Bedelia&#39;, &#39;Comfort Me with Apples: More Adventures at the Table&#39;, &#39;Coming Home&#39;, &#39;Common Sense&#39;, &#39;Como agua para chocolate&#39;, &#39;Competitive Strategy: Techniques for Analyzing Industries and Competitors&#39;, &#39;Complete Harry Potter Boxed Set&#39;, &#39;Complete Works of Lewis Carroll&#39;, &#34;Complications: A Surgeon&#39;s Notes on an Imperfect Science&#34;, &#39;Confederates in the Attic: Dispatches from the Unfinished Civil War&#39;, &#39;Confessiones Sancti Patris nostri Augustini&#39;, &#39;Confessions of a Shopaholic&#39;, &#39;Confessions of an Economic Hit Man&#39;, &#39;Confessions of an Ugly Stepsister&#39;, &#39;Confessor (Sword of Truth, #11)&#39;, &#39;Congo&#39;, &#39;Consent to Kill&#39;, &#39;Consider Phlebas&#39;, &#39;Consider the Lobster&#39;, &#39;Conspiracy in Death&#39;, &#39;Contact&#39;, &#39;Conversations With God. An Uncommon Dialogue. Book 2&#39;, &#39;Conversations with God, An Uncommon Dialogue: Living in the World with Honesty, Courage, and Love, Book 1&#39;, &#39;Conversations with God, an uncommon dialogue, book 3&#39;, &#39;Copper Sun&#39;, &#39;Coraline&#39;, &#39;Corduroy&#39;, &#39;Cosmopolis&#39;, &#39;Cosmos&#39;, &#39;Count Zero&#39;, &#39;Cover Her Face&#39;, &#39;Coyote Blue&#39;, &#39;Cradle to Cradle: Remaking the Way We Make Things&#39;, &#39;Crank (Crank, #1)&#39;, &#39;Crash&#39;, &#39;Crazy For You&#39;, &#39;Creation in Death &#39;, &#39;Creative Visualization: Use the Power of Your Imagination to Create What You Want in Your Life&#39;, &#39;Creepshow&#39;, &#39;Crisis on Infinite Earths&#39;, &#39;Crispin: The Cross of Lead&#39;, &#39;Crocodile on the Sandbank&#39;, &#39;Crooked House&#39;, &#39;Cross&#39;, &#39;Cross Bones&#39;, &#39;Crossing to Safety&#39;, &#39;Crossroads of Twilight&#39;, &#39;Crow Lake&#39;, &#39;Crown Duel &#39;, &#39;Crucial Conversations: Tools for Talking When Stakes are High&#39;, &#39;Cruel &amp; Unusual&#39;, &#39;Crush&#39;, &#39;Cry to Heaven&#39;, &#39;Cry, The Beloved Country&#39;, &#39;Cryptonomicon&#39;, &#39;Crystal Singer&#39;, &#39;Crónica de una muerte anunciada&#39;, &#39;Cuentos completos&#39;, &#39;Cuentos de Eva Luna&#39;, &#39;Cujo&#39;, &#39;Cunt: A Declaration of Independence&#39;, &#39;Curious George&#39;, &#39;Curious George Goes to the Hospital&#39;, &#39;Curious George Rides a Bike&#39;, &#39;Curious George Visits the Library&#39;, &#39;Curtain: Poirot’s Last Case&#39;, &#39;Cut&#39;, &#39;Cycle of the Werewolf&#39;, &#39;Cyrano de Bergerac&#39;, &#39;D-Day June 6, 1944: The Climactic Battle of WWII&#39;, &#34;Daddy&#39;s Little Girl&#34;, &#39;Daddy-Long-Legs &#39;, &#39;Daisy Fay and the Miracle Man&#39;, &#39;Daisy Miller&#39;, &#34;Daja&#39;s Book&#34;, &#39;Dance Upon The Air&#39;, &#39;Dance of Death&#39;, &#39;Dance of the Gods&#39;, &#39;Dancing in my nuddy-pants!&#39;, &#39;Dandelion Wine&#39;, &#39;Danger in the Shadows&#39;, &#39;Daniel Deronda&#39;, &#39;Danny and the Dinosaur&#39;, &#39;Danny: The Champion of the World&#39;, &#39;Danse Macabre&#39;, &#39;Danse Macabre (Anita Blake, Vampire Hunter, #14)&#39;, &#39;Daring to Dream&#39;, &#39;Dark Angel&#39;, &#39;Dark Demon (Carpathians, #16)&#39;, &#39;Dark Desire&#39;, &#39;Dark Destiny (Carpathians, #13)&#39;, &#39;Dark Gold (Dark #3)&#39;, &#39;Dark Guardian&#39;, &#39;Dark Lover&#39;, &#39;Dark Prince&#39;, &#39;Dark Reunion&#39;, &#39;Dark Rivers of the Heart&#39;, &#39;Dark Side of the Moon&#39;, &#39;Dark Star Safari &#39;, &#39;Dark challenge&#39;, &#39;Darkest Fear&#39;, &#39;Darkest Hour&#39;, &#39;Darkfall&#39;, &#39;Darkly Dreaming Dexter&#39;, &#39;Darkness&#39;, &#39;Darkness Visible: A Memoir of Madness&#39;, &#39;Darkness, Be My Friend&#39;, &#39;Darkness, Take My Hand&#39;, &#34;Darwin&#39;s Dangerous Idea: Evolution and the Meanings of Life&#34;, &#39;Das Drama des begabten Kindes und die Suche nach dem wahren Selbst: eine Um- und Fortschreibung&#39;, &#39;Das Glasperlenspiel&#39;, &#39;Das Parfum. Die Geschichte eines Mörders&#39;, &#39;Das Schloß&#39;, &#39;Das Unbehagen in der Kultur&#39;, &#39;Daughter of the Blood&#39;, &#39;Daughter of the Empire&#39;, &#39;Daughter of the Forest&#39;, &#39;David Copperfield&#39;, &#39;Dawn&#39;, &#39;Dawn &#39;, &#39;Days of Magic, Nights of War&#39;, &#39;Days with Frog and Toad&#39;, &#39;De amor y de sombra&#39;, &#39;De la Terre à la Lune&#39;, &#39;De la démocratie en Amérique&#39;, &#39;De vita Caesarum &#39;, &#39;Dead Beat&#39;, &#39;Dead Poets Society &#39;, &#39;Dead Until Dark&#39;, &#39;Dead Witch Walking&#39;, &#39;Dead as a Doornail &#39;, &#39;Dead to the World&#39;, &#39;Deadeye Dick&#39;, &#39;Deadhouse Gates&#39;, &#39;Deadly Décisions&#39;, &#39;Deal Breaker&#39;, &#39;Dealing with Dragons&#39;, &#34;Dean Koontz&#39;s Frankenstein: City of Night &#34;, &#34;Dean Koontz&#39;s Frankenstein: Prodigal Son&#34;, &#39;Dear John&#39;, &#39;Dear Mr. Henshaw&#39;, &#39;Dear Theo: The Letters of Vincent Van Gogh&#39;, &#39;Dearly Devoted Dexter&#39;, &#39;Death Comes for the Archbishop&#39;, &#39;Death Masks&#39;, &#39;Death at La Fenice&#39;, &#39;Death du Jour&#39;, &#39;Death in the Clouds&#39;, &#39;Death of a Salesman&#39;, &#39;Death on the Nile&#39;, &#39;Death: the High Cost of Living&#39;, &#39;Debt of Bones (The Sword of Truth, #0.5)&#39;, &#39;Debt of Honor&#39;, &#39;Deception Point&#39;, &#39;Deep Six&#39;, &#39;Deerskin&#39;, &#39;Definitely Dead (Sookie Stackhouse, #6)&#39;, &#39;Del amor y otros demonios&#39;, &#39;Deliverance&#39;, &#39;Delta of Venus&#39;, &#39;Demian: Die Geschichte einer Jugend&#39;, &#39;Demon Lord of Karanda&#39;, &#39;Demon Thief&#39;, &#39;Den Lille Pige med Svovlstikkerne&#39;, &#39;Den femte kvinnan&#39;, &#39;Den lille havfrue&#39;, &#39;Den vita lejoninnan&#39;, &#39;Der Antichrist&#39;, &#39;Der Prozeß&#39;, &#39;Der Schweizerische Robinson&#39;, &#39;Der Steppenwolf: Erzählung&#39;, &#39;Der Tod in Venedig&#39;, &#39;Der Vorleser&#39;, &#39;Der Zauberberg&#39;, &#39;Desert Solitaire&#39;, &#39;Desiring God: Meditations of a Christian Hedonist&#39;, &#39;Desolation Angels&#39;, &#39;Desperation&#39;, &#39;Developing the Leader Within You&#39;, &#39;Devil in a Blue Dress&#39;, &#39;Diagnostic and Statistical Manual of Mental Disorders DSM-IV-TR (Text Revision)&#39;, &#39;Diamonds are Forever&#39;, &#39;Diarios de motocicleta: notas de viaje por América Latina&#39;, &#39;Diary&#39;, &#39;Dibs in Search of Self: Personality Development in Play Therapy&#39;, &#34;Dicey&#39;s Song (Tillerman Family, #2)&#34;, &#34;Die 13½ Leben des Käpt&#39;n Blaubär &#34;, &#39;Die Blechtrommel&#39;, &#39;Die Leiden des jungen Werthers&#39;, &#39;Die Traumdeutung&#39;, &#39;Die Trying (Jack Reacher, #2)&#39;, &#39;Die Verwandlung&#39;, &#39;Die Verwandlung und andere Erzählungen&#39;, &#39;Die fröhliche Wissenschaft&#39;, &#39;Die unendliche Geschichte&#39;, &#39;Dies the Fire &#39;, &#39;Different Seasons&#39;, &#39;Digging to America&#39;, &#39;Digital Fortress&#39;, &#39;Dime Store Magic&#39;, &#39;Dinner at the Homesick Restaurant&#39;, &#39;Dinosaurs Before Dark&#39;, &#34;Dirk Gently&#39;s Holistic Detective Agency&#34;, &#39;Disappearing Acts&#39;, &#39;Disclosure&#39;, &#39;Discours de la Méthode suivi de Méditations Métaphysiques&#39;, &#39;Disgrace&#39;, &#39;Dispatches&#39;, &#39;Distant Shores&#39;, &#39;Divided in Death (In Death, #18)&#39;, &#39;Divine Secrets of the Ya-Ya Sisterhood&#39;, &#39;Do Androids Dream of Electric Sheep?&#39;, &#39;Doce cuentos peregrinos&#39;, &#39;Doctors&#39;, &#39;Dolores Claiborne&#39;, &#39;Dom Casmurro&#39;, &#39;Domes of Fire&#39;, &#39;Don Quijote de La Mancha&#39;, &#34;Don&#39;t Let the Pigeon Drive the Bus&#34;, &#34;Don&#39;t Let the Pigeon Stay Up Late!&#34;, &#34;Don&#39;t Let&#39;s Go to the Dogs Tonight: An African Childhood&#34;, &#34;Don&#39;t Make Me Think! A common sense approach to web usability&#34;, &#34;Don&#39;t Panic: The Official Hitchhikers Guide to the Galaxy Companion&#34;, &#34;Don&#39;t Sweat the Small Stuff&#34;, &#34;Don&#39;t Waste Your Life&#34;, &#39;Doomsday Book&#39;, &#39;Double Act&#39;, &#39;Double Fudge&#39;, &#39;Double Indemnity&#39;, &#39;Double Star&#39;, &#39;Double Whammy&#39;, &#39;Doubt: A Parable&#39;, &#39;Down Under&#39;, &#39;Down and Out in Paris and London&#39;, &#39;Dr. No&#39;, &#39;Drachenreiter&#39;, &#39;Dracula&#39;, &#39;Dragon Prince&#39;, &#39;Dragon Tears&#39;, &#39;Dragon Wing (The Death Gate Cycle, #1)&#39;, &#39;Dragondrums (Pern: Harper Hall, #3)&#39;, &#39;Dragonflight&#39;, &#39;Dragonfly in Amber&#39;, &#39;Dragonlance Chronicles: Dragons of Autumn Twilight/Dragons of Winter Night/Dragons of Spring Dawning (Collectors Edition)&#39;, &#39;Dragonquest&#39;, &#39;Dragons of Autumn Twilight&#39;, &#39;Dragons of Spring Dawning&#39;, &#39;Dragons of Summer Flame&#39;, &#39;Dragonsdawn (Pern: Dragonriders of Pern, #6)&#39;, &#39;Dragonsinger&#39;, &#39;Dragonsong &#39;, &#39;Drawing on the Right Side of the Brain&#39;, &#39;Dream Man&#39;, &#39;Dream a Little Dream&#39;, &#39;Dreamcatcher&#39;, &#39;Dreamland &#39;, &#39;Dreams from My Father&#39;, &#39;Drei Kameraden&#39;, &#39;Dress Your Family in Corduroy and Denim&#39;, &#39;Drinking: A Love Story&#39;, &#39;Drop City&#39;, &#39;Drop Shot&#39;, &#39;Drown&#39;, &#39;Drowned Wednesday&#39;, &#39;Drowning Ruth&#39;, &#39;Drums of Autumn (Outlander, #4)&#39;, &#39;Drums, Girls &amp; Dangerous Pie&#39;, &#39;Dry: A Memoir&#39;, &#39;Du contrat social: ou Principes du droit politique&#39;, &#39;Du côté de chez Swann&#39;, &#39;Dubliners&#39;, &#39;Duck On A Bike&#39;, &#34;Dude, Where&#39;s My Country?&#34;, &#39;Dune&#39;, &#39;Dune Messiah &#39;, &#39;Dune: House Atreides&#39;, &#39;Dune: House Corrino&#39;, &#39;Dune: House Harkonnen&#39;, &#39;Dune: The Butlerian Jihad&#39;, &#39;Dune: The Machine Crusade &#39;, &#39;Déjà Dead&#39;, &#39;E Is for Evidence&#39;, &#39;E.E. Cummings: Complete Poems 1904-1962&#39;, &#39;Each Peach Pear Plum&#39;, &#39;Earth Abides&#39;, &#39;East&#39;, &#39;East of Eden &#39;, &#39;Eat That Frog!: 21 Great Ways to Stop Procrastinating and Get More Done in Less Time&#39;, &#34;Eat, pray, love: one woman&#39;s search for everything across Italy, India and Indonesia&#34;, &#39;Eaters of the Dead&#39;, &#39;Eats, Shoots and Leaves&#39;, &#39;Echo Park&#39;, &#39;Eclipse&#39;, &#39;Economics in One Lesson&#39;, &#39;Edensor&#39;, &#39;Eiger Dreams: Ventures Among Men and Mountains&#39;, &#39;Eight Cousins&#39;, &#39;Eine kurze Weltgeschichte für junge Leser: Von der Urzeit bis zur Gegenwart&#39;, &#34;Einstein&#39;s Dreams&#34;, &#39;Einstein. His Life and Universe&#39;, &#39;El Aleph&#39;, &#39;El Zorro&#39;, &#39;El amor en los tiempos del cólera&#39;, &#39;El club Dumas&#39;, &#39;El coronel no tiene quien le escriba&#39;, &#39;El coronel no tiene quién le escriba&#39;, &#39;El general en su laberinto&#39;, &#39;El otoño del patriarca&#39;, &#39;El túnel&#39;, &#39;Elantris&#39;, &#39;Eldest&#39;, &#39;Elephants Can Remember&#39;, &#39;Eleven on Top&#39;, &#39;Elizabeth: The Struggle for the Throne&#39;, &#39;Ella Enchanted&#39;, &#39;Ella Minnow Pea: A Novel in Letters&#39;, &#39;Ellen Foster&#39;, &#39;Eloise&#39;, &#39;Elric of Melniboné&#39;, &#39;Elsewhere&#39;, &#39;Elven Star (The Death Gate Cycle, #2)&#39;, &#39;Emily Climbs&#39;, &#39;Emily of New Moon&#39;, &#39;Emma&#39;, &#39;Emotional Intelligence&#39;, &#39;Emperor Mage (Immortals, #3)&#39;, &#39;Empire Falls&#39;, &#39;Empire of the Sun&#39;, &#39;Empress Orchid&#39;, &#39;Empress of the World&#39;, &#39;En attendant Godot&#39;, &#34;Enchanters&#39; End Game&#34;, &#39;Enchantment&#39;, &#39;Encyclopedia Brown, Boy Detective (Encyclopedia Brown, #1)&#39;, &#34;Ender&#39;s Game&#34;, &#34;Ender&#39;s Shadow&#34;, &#34;Endurance: Shackleton&#39;s incredible voyage&#34;, &#39;Enduring Love&#39;, &#39;Endymion&#39;, &#39;Enemy of God&#39;, &#39;Enna Burning&#39;, &#39;Ensaio Sobre a Cegueira&#39;, &#39;Ensaio Sobre a Lucidez&#39;, &#34;Ensemble, c&#39;est tout&#34;, &#39;Envy&#39;, &#39;Eon&#39;, &#39;Equal Rites&#39;, &#39;Equus : a play&#39;, &#39;Eragon&#39;, &#39;Eragon &amp; Eldest (Inheritance, #1-2)&#39;, &#39;Erections, Ejaculations, Exhibitions and General Tales of Ordinary Madness&#39;, &#39;Eric&#39;, &#39;Erinnerungen, Träume, Gedanken von C.G. Jung&#39;, &#39;Esio Trot&#39;, &#39;Esperanza Rising&#39;, &#39;Essays in Love&#39;, &#39;Essential Rumi&#39;, &#39;Et dukkehjem&#39;, &#39;Ethan Frome&#39;, &#39;Ethica: Ordine geometrico demonstrata&#39;, &#39;Eugénie Grandet&#39;, &#39;Euthyphro, Apology, Crito, Meno, Phaedo&#39;, &#39;Eva Luna&#39;, &#39;Even Cowgirls Get the Blues&#39;, &#39;Even Now&#39;, &#39;Evening Class&#39;, &#39;Eventyr og historier&#39;, &#39;Ever After&#39;, &#39;Evergreen&#39;, &#34;Every Boy&#39;s Got One (Boy, #3)&#34;, &#39;Every Which Way But Dead&#39;, &#39;Everyday Italian: 125 Simple and Delicious Recipes&#39;, &#39;Everyman&#39;, &#39;Everyone Worth Knowing&#39;, &#39;Everything Is Illuminated&#39;, &#39;Everything that Rises Must Converge&#39;, &#34;Everything&#39;s Eventual: 14 Dark Tales&#34;, &#39;Evil Under the Sun&#39;, &#39;Excalibur&#39;, &#39;Excession&#39;, &#39;Executive Orders&#39;, &#39;Executive Power&#39;, &#39;Exile &#39;, &#39;Exit to Eden&#39;, &#39;Exodus&#39;, &#39;Extras&#39;, &#39;Extremely Loud and Incredibly Close&#39;, &#39;Eye of the World (The Wheel of Time, #1-1)&#39;, &#39;Eyes of Prey&#39;, &#39;Eyes of the Dragon&#39;, &#39;F is for Fugitive&#39;, &#39;Fablehaven&#39;, &#39;Fables, Volume 1: Legends in Exile&#39;, &#39;Fables, Volume 2: Animal Farm&#39;, &#39;Fables, Volume 3: Storybook Love&#39;, &#39;Fables, Volume 4: March of the Wooden Soldiers&#39;, &#39;Fables, Volume 5: The Mean Seasons&#39;, &#39;Fables, Volume 6: Homelands&#39;, &#39;Fables, Volume 7: Arabian Nights (and Days)&#39;, &#39;Fables, Volume 8: Wolves&#39;, &#39;Fables, Volume 9: Sons of Empire&#39;, &#39;Face the Fire (Three Sisters Island, #3)&#39;, &#39;Facing Your Giants: The God Who Made a Miracle Out of David Stands Ready to Make One Out of You&#39;, &#39;Factotum&#39;, &#39;Fade Away&#39;, &#39;Faeries&#39;, &#39;Fahrenheit 451&#39;, &#39;Faith of the Fallen (Sword of Truth, #6)&#39;, &#39;Faithless&#39;, &#39;Faking It &#39;, &#39;Fall on Your Knees&#39;, &#39;Fallen Hearts (Casteel, #3)&#39;, &#39;Falling Angels&#39;, &#39;Falling Free&#39;, &#39;Falling Leaves: The Memoir of an Unwanted Chinese Daughter&#39;, &#39;Falling Man&#39;, &#39;Falling Up&#39;, &#39;False Impression&#39;, &#39;False Memory&#39;, &#39;Fame&#39;, &#39;Family Matters&#39;, &#39;Fancy Nancy&#39;, &#39;Fantastic Beasts and Where to Find Them&#39;, &#39;Fantastic Mr Fox&#39;, &#39;Fantastic Voyage&#39;, &#39;Fantasy Lover&#39;, &#39;Far from the Madding Crowd&#39;, &#39;Farewell, My Lovely&#39;, &#39;Fargo Rock City: A Heavy Metal Odyssey in Rural North Dakota&#39;, &#39;Farmer Boy&#39;, &#39;Fast Food Nation : The Dark Side of the All-American Meal &#39;, &#39;Fatal Vision&#39;, &#39;Fatal Voyage&#39;, &#39;Fatherland&#39;, &#39;Faust. Eine Tragödie&#39;, &#39;Fear Nothing &#39;, &#39;Fear and Loathing in Las Vegas: A Savage Journey to the Heart of the American Dream&#39;, &#34;Fear and Loathing on the Campaign Trail &#39;72&#34;, &#39;Fear of Flying&#39;, &#39;Feed&#39;, &#39;Feet of Clay&#39;, &#39;Fences (The Century Cycle #6)&#39;, &#34;Fermat&#39;s Enigma: The Epic Quest to Solve the World&#39;s Greatest Mathematical Problem&#34;, &#39;Fever 1793&#39;, &#39;Fever Pitch&#39;, &#39;Fevre Dream&#39;, &#39;Ficciones&#39;, &#39;Field of Dishonor&#39;, &#39;Fierce Invalids Home From Hot Climates&#39;, &#39;Fifth Business&#39;, &#39;Fight Club&#39;, &#39;Filosofi Kopi: Kumpulan Cerita dan Prosa Satu Dekade&#39;, &#39;Filth&#39;, &#39;Finding Cassie Crazy&#39;, &#39;Finding the Dream&#39;, &#39;Fine Things&#39;, &#39;Fingersmith&#39;, &#39;Fire Sea&#39;, &#39;Fire and Ice&#39;, &#34;Firestar&#39;s Quest&#34;, &#39;Firestarter&#39;, &#39;First Among Equals&#39;, &#39;First Among Sequels &#39;, &#39;First King of Shannara&#39;, &#34;First Rider&#39;s Call&#34;, &#39;First Term at Malory Towers&#39;, &#39;First Test&#39;, &#39;First They Killed My Father: A Daughter of Cambodia Remembers &#39;, &#39;First Things First: To Live, to Love, to Learn, to Leave a Legacy&#39;, &#34;First, Break All the Rules: What the World&#39;s Greatest Managers Do Differently &#34;, &#39;Five Children and It &#39;, &#39;Five Go Adventuring Again&#39;, &#34;Five Go to Smuggler&#39;s Top&#34;, &#39;Five Little Peppers and How They Grew&#39;, &#39;Five Little Pigs&#39;, &#39;Five Point Someone: What Not to Do at IIT&#39;, &#39;Five Quarters of the Orange&#39;, &#39;Five Run Away Together&#39;, &#39;Five on a Treasure Island &#39;, &#39;Flag in Exile&#39;, &#39;Flags of Our Fathers&#39;, &#39;Flat Stanley&#39;, &#39;Flatland: A Romance of Many Dimensions&#39;, &#39;Fledgling&#39;, &#39;Flight of the Intruder&#39;, &#39;Flight: A Novel&#39;, &#39;Flipped&#39;, &#39;Flood Tide (Dirk Pitt, #14)&#39;, &#39;Flotsam&#39;, &#39;Flow My Tears, the Policeman Said&#39;, &#39;Flow: The Psychology of Optimal Experience&#39;, &#39;Flowers for Algernon&#39;, &#39;Flowers in the Attic&#39;, &#39;Fluke: Or, I Know Why the Winged Whale Sings&#39;, &#39;Flush&#39;, &#39;Flyboys: A True Story of Courage&#39;, &#39;Flyte&#39;, &#39;Flyy Girl&#39;, &#39;Follow the River&#39;, &#39;Fool Moon &#39;, &#34;Fool&#39;s Errand&#34;, &#34;Fool&#39;s Fate&#34;, &#39;Fooled by Randomness: The Hidden Role of Chance in Life and in the Markets&#39;, &#39;Footfall&#39;, &#39;For Colored Girls Who Have Considered Suicide When the Rainbow Is Enuf &#39;, &#39;For Love of Evil&#39;, &#39;For One More Day&#39;, &#39;For Whom the Bell Tolls&#39;, &#39;For Women Only: What You Need to Know about the Inner Lives of Men&#39;, &#39;For a Few Demons More &#39;, &#39;Forest Mage&#39;, &#39;Forest of Secrets&#39;, &#39;Forever . . .&#39;, &#39;Forever Amber&#39;, &#39;Forever Odd&#39;, &#39;Forever Peace &#39;, &#39;Forever in Blue: The Fourth Summer of the Sisterhood&#39;, &#39;Forrest Gump&#39;, &#34;Fortune&#39;s Rocks&#34;, &#39;Forward the Foundation&#39;, &#39;Foundation&#39;, &#39;Foundation and Earth&#39;, &#39;Foundation and Empire&#39;, &#34;Foundation&#39;s Edge&#34;, &#39;Founding Brothers: The Revolutionary Generation&#39;, &#39;Four Blind Mice&#39;, &#39;Four Blondes&#39;, &#39;Four Past Midnight&#39;, &#39;Four to Score &#39;, &#39;Fox in Socks&#39;, &#39;Fragile Things: Short Fictions and Wonders&#39;, &#39;Frankenstein; or, The Modern Prometheus&#39;, &#39;Franny and Zooey&#39;, &#34;Franz Kafka&#39;s The Castle&#34;, &#39;Freak the Mighty&#39;, &#39;Freakonomics: A Rogue Economist Explores the Hidden Side of Everything&#39;, &#39;Freckle Juice&#39;, &#39;Frederick&#39;, &#39;Freight Train (Caldecott Collection)&#39;, &#34;French Women Don&#39;t Get Fat&#34;, &#39;Fresh Wind, Fresh Fire&#39;, &#39;Frida. A Biography of Frida Kahlo&#39;, &#39;Friday&#39;, &#39;Friday Night Lights: A Town, a Team, and a Dream&#39;, &#39;Fried Green Tomatoes at the Whistle Stop Cafe&#39;, &#39;Frindle&#39;, &#39;Frog And Toad Book Set: Frog And Toad Are Friends; Frog And Toad Together; Days With Frog And Toad; Frog And Toad All Year&#39;, &#39;Frog and Toad All Year&#39;, &#39;Frog and Toad Are Friends&#39;, &#39;Frog and Toad Together&#39;, &#39;From Beirut to Jerusalem&#39;, &#39;From Hell&#39;, &#39;From Here to Eternity&#39;, &#34;From Potter&#39;s Field&#34;, &#39;From Russia, with Love&#39;, &#39;From a Buick 8&#39;, &#39;From the Corner of His Eye&#39;, &#39;From the Mixed-Up Files of Mrs. Basil E. Frankweiler&#39;, &#39;Frygt og Bæven&#39;, &#39;Frøken Smillas fornemmelse for sne&#39;, &#39;Fudge-a-Mania&#39;, &#39;Fugitive Pieces&#39;, &#39;Full House&#39;, &#39;Full Moon Rising&#39;, &#39;Full Tilt&#39;, &#39;Funny in Farsi: A Memoir of Growing Up Iranian in America&#39;, &#39;Furies of Calderon &#39;, &#39;G is for Gumshoe&#39;, &#34;Galileo&#39;s Daughter&#34;, &#39;Galápagos&#39;, &#39;Games People Play&#39;, &#34;Gap Creek : The Story Of A Marriage (Oprah&#39;s Book Club)&#34;, &#39;Garden Spells&#39;, &#39;Garden of Shadows&#39;, &#39;Gardens of the Moon&#39;, &#39;Garlic and Sapphires: The Secret Life of a Critic in Disguise&#39;, &#39;Gates of Fire: An Epic Novel of the Battle of Thermopylae&#39;, &#39;Gateway&#39;, &#39;Gathering Blue&#39;, &#39;Gaudy Night&#39;, &#39;Gawayn and þe Grene Knyȝt&#39;, &#39;Geek Love&#39;, &#39;Geisha: A Life&#39;, &#39;Gemeinsames Leben&#39;, &#39;Generation X: Tales for an Accelerated Culture&#39;, &#39;Genghis Khan and the Making of the Modern World&#39;, &#39;Genius: The Life and Science of Richard Feynman&#39;, &#39;Genome: The Autobiography of a Species in 23 Chapters&#39;, &#39;Gentle Rogue&#39;, &#34;George&#39;s Marvellous Medicine&#34;, &#34;Gerald&#39;s Game&#34;, &#39;Germinal&#39;, &#39;Get Shorty&#39;, &#39;Getting Over It&#39;, &#39;Getting Stoned with Savages: A Trip Through the Islands of Fiji and Vanuatu&#39;, &#39;Getting Things Done: How To Achieve Stress-free Productivity&#39;, &#39;Getting to Yes: Negotiating agreement without giving in&#39;, &#34;Ghost Soldiers: The Epic Account of World War II&#39;s Greatest Rescue Mission&#34;, &#39;Ghost Story&#39;, &#39;Ghost Wars: The Secret History of the CIA, Afghanistan, and Bin Laden, from the Soviet Invasion to September 10, 2001&#39;, &#39;Ghost World&#39;, &#39;Ghosts of Onyx&#39;, &#39;Ghostwritten&#39;, &#34;Giada&#39;s Family Dinners&#34;, &#39;Gift from the Sea&#39;, &#39;Gilead&#39;, &#34;Giovanni&#39;s Room&#34;, &#39;Girl in Hyacinth Blue&#39;, &#39;Girl with Curious Hair&#39;, &#39;Girl with a Pearl Earring&#39;, &#39;Girl, Interrupted&#39;, &#39;Girlfriend in a Coma&#39;, &#39;Girls Night In&#39;, &#39;Girls in Love&#39;, &#39;Girls in Pants: The Third Summer of the Sisterhood&#39;, &#39;Glamorama&#39;, &#39;Glengarry Glen Ross&#39;, &#39;Glorious Appearing: The End of Days&#39;, &#39;Glory in Death&#39;, &#39;Glue&#39;, &#39;Go Ask Alice&#39;, &#39;Go Tell It on the Mountain&#39;, &#39;Go, Dog. Go!&#39;, &#39;God Bless You, Dr. Kevorkian&#39;, &#39;God Bless You, Mr Rosewater or Pearls before Swine&#39;, &#39;God Emperor of Dune&#39;, &#39;God is Not Great: How Religion Poisons Everything&#39;, &#34;God&#39;s Smuggler&#34;, &#39;Gods and Generals&#39;, &#39;Gods in Alabama&#39;, &#39;Going After Cacciato&#39;, &#39;Going Postal&#39;, &#39;Going Solo&#39;, &#39;Goldfinger&#39;, &#39;Gone&#39;, &#39;Gone for Good&#39;, &#39;Gone with the Wind&#39;, &#39;Gone, Baby, Gone&#39;, &#39;Good Faeries, Bad Faeries&#39;, &#39;Good Grief&#39;, &#39;Good Night, Mr. Tom&#39;, &#39;Good Omens: The Nice and Accurate Prophecies of Agnes Nutter, Witch&#39;, &#39;Good Wives&#39;, &#39;Good in Bed&#39;, &#34;Good to Great: Why Some Companies Make the Leap... and Others Don&#39;t&#34;, &#39;Goodbye, Columbus and Five Short Stories&#39;, &#39;Goodnight Nobody&#39;, &#39;Gorillas in the Mist&#39;, &#39;Gorky Park&#39;, &#39;Gossip Girl&#39;, &#39;Grace [Eventually]: Thoughts on Faith&#39;, &#39;Grass for His Pillow &#39;, &#39;Grave Peril&#39;, &#39;Grave Secrets&#39;, &#39;Grave Surprise&#39;, &#34;Gravity&#39;s Rainbow&#34;, &#39;Great Expectations&#39;, &#39;Green Eggs and Ham&#39;, &#39;Green Mars&#39;, &#39;Green Rider&#39;, &#39;Greenwitch&#39;, &#39;Gregor and the Curse of the Warmbloods&#39;, &#39;Gregor and the Marks of Secret&#39;, &#39;Gregor and the Prophecy of Bane&#39;, &#39;Gregor the Overlander&#39;, &#39;Grendel&#39;, &#39;Griffin &amp; Sabine: An Extraordinary Correspondence&#39;, &#39;Grim Tuesday&#39;, &#39;Grimms Märchen&#39;, &#39;Grundlegung zur Metaphysik der Sitten&#39;, &#39;Guardians of the West&#39;, &#39;Guards! Guards!&#39;, &#39;Guess How Much I Love You&#39;, &#39;Guilty Pleasures&#39;, &#39;Guilty as Sin (Deer Lake #2)&#39;, &#39;Gulliver’s Travels&#39;, &#39;Guns, Germs, and Steel: The Fates of Human Societies&#39;, &#39;Gödel, Escher, Bach: An Eternal Golden Braid&#39;, &#39;H is for Homicide&#39;, &#39;H.M.S. Surprise &#39;, &#39;Half Asleep in Frog Pajamas&#39;, &#39;Half Magic&#39;, &#39;Half of a Yellow Sun&#39;, &#34;Hallowe&#39;en Party&#34;, &#39;Ham on Rye&#39;, &#39;Hammer of the Gods&#39;, &#39;Hand, Hand, Fingers, Thumb&#39;, &#39;Hannibal&#39;, &#39;Hannibal Rising&#39;, &#39;Hard Eight&#39;, &#39;Hard Times: For These Times&#39;, &#39;Harlequin&#39;, &#39;Harold and the Purple Crayon&#39;, &#39;Haroun and the Sea of Stories&#39;, &#39;Harriet the Spy&#39;, &#39;Harry Potter Boxed Set Books 1-4&#39;, &#39;Harry Potter Collection (Harry Potter, #1-6)&#39;, &#39;Harry Potter and the Chamber of Secrets&#39;, &#39;Harry Potter and the Deathly Hallows&#39;, &#39;Harry Potter and the Goblet of Fire&#39;, &#39;Harry Potter and the Half-Blood Prince&#39;, &#39;Harry Potter and the Order of the Phoenix&#39;, &#34;Harry Potter and the Philosopher&#39;s Stone&#34;, &#39;Harry Potter and the Prisoner of Azkaban&#39;, &#39;Harvest &#39;, &#39;Harvesting the Heart&#39;, &#39;Hatchet&#39;, &#39;Hateship, Friendship, Courtship, Loveship, Marriage&#39;, &#39;Haunted&#39;, &#39;Haunted: A Novel of Stories&#39;, &#39;Have Space Suit - Will Travel&#39;, &#34;Having Our Say: The Delany Sisters&#39; First 100 Years&#34;, &#39;Having a Mary Heart in a Martha World: Finding Intimacy With God in the Busyness of Life&#39;, &#39;Hawaii&#39;, &#39;Hawksong&#39;, &#34;He&#39;s Just Not That Into You: The No-Excuses Truth to Understanding Guys&#34;, &#39;Healthy Sleep Habits, Happy Child&#39;, &#39;Heart of Darkness&#39;, &#39;Heart of the Sea&#39;, &#39;Heart-Shaped Box&#39;, &#39;Hearts in Atlantis&#39;, &#39;Heat&#39;, &#39;Heaven&#39;, &#39;Heaven and Earth (Three Sisters Island, #2)&#39;, &#39;Heaven, Texas&#39;, &#39;Heavier Than Heaven: A Biography of Kurt Cobain&#39;, &#39;Hedda Gabler&#39;, &#39;Heidi&#39;, &#39;Heir to the Empire&#39;, &#39;Heir to the Shadows&#39;, &#39;Hell House&#39;, &#34;Hell&#39;s Angels&#34;, &#39;Hellboy: Seed of Destruction&#39;, &#39;Hellboy: The Chained Coffin and Others&#39;, &#39;Hellboy: Wake the Devil&#39;, &#39;Hello, Mrs. Piggle-Wiggle&#39;, &#39;Helter Skelter: The True Story of The Manson Murders&#39;, &#39;Henderson the Rain King&#39;, &#39;Henry Huggins&#39;, &#34;Hercule Poirot&#39;s Christmas&#34;, &#39;Here be Dragons&#39;, &#39;Here on Earth &#39;, &#39;Heretic&#39;, &#39;Heretics of Dune&#39;, &#39;Herr der Diebe&#39;, &#39;Herzog&#39;, &#39;Het Achterhuis: Dagboekbrieven 14 juni 1942 - 1 augustus 1944&#39;, &#39;Hey Nostradamus!&#39;, &#39;Hidden Riches&#39;, &#39;Hide and Seek&#39;, &#39;Hideaway&#39;, &#39;High Druid of Shannara, vol. 1: Jarka Ruus&#39;, &#39;High Fidelity&#39;, &#39;High Five&#39;, &#39;High Noon&#39;, &#39;Hija de la fortuna&#39;, &#34;Hinds&#39; Feet on High Places&#34;, &#39;Hiroshima&#39;, &#39;His Dark Materials&#39;, &#39;His Excellency: George Washington&#39;, &#34;His Majesty&#39;s Dragon&#34;, &#39;Hissy Fit&#39;, &#34;Histoire d&#39;O&#34;, &#39;Histoire de Babar, le petit éléphant&#39;, &#34;Histoire de l&#39;oeil&#34;, &#39;Histoire de la sexualité 1. La Volonté de savoir&#39;, &#39;Hocus Pocus&#39;, &#39;Hogfather&#39;, &#39;Holding the Dream&#39;, &#39;Holes&#39;, &#39;Holiday in Death&#39;, &#39;Holidays on Ice&#39;, &#39;Hollywood&#39;, &#39;Holy Bible English Standard Version&#39;, &#39;Holy Bible: New International Version&#39;, &#39;Holy Cow: An Indian Adventure&#39;, &#39;Homage to Catalonia&#39;, &#39;Homecoming (Tillerman Family, #1)&#39;, &#39;Homeland&#39;, &#39;Homer Price&#39;, &#39;Homicidal Psycho Jungle Cat: A Calvin and Hobbes Collection&#39;, &#39;Homicide: A Year on the Killing Streets&#39;, &#39;Homo faber: Ein Bericht&#39;, &#39;Honeymoon&#39;, &#39;Honor Among Enemies&#39;, &#39;Honour Among Thieves&#39;, &#39;Hoot&#39;, &#39;Hop on Pop&#39;, &#39;Hope Was Here&#39;, &#39;Hornet Flight&#39;, &#34;Hornet&#39;s Nest&#34;, &#39;Horton Hatches the Egg&#39;, &#39;Horton Hears a Who!&#39;, &#39;Horus Rising&#39;, &#39;Hot Six&#39;, &#39;Hot Water Music&#39;, &#39;Hotel du Lac&#39;, &#39;Hour Game&#39;, &#39;House&#39;, &#39;House of Chains&#39;, &#39;House of Leaves&#39;, &#39;House of M&#39;, &#39;House of Sand and Fog&#39;, &#39;Housekeeping&#39;, &#39;How Do Dinosaurs Say Goodnight?&#39;, &#39;How Green Was My Valley&#39;, &#39;How I Became a Pirate&#39;, &#39;How I Live Now&#39;, &#39;How Should We Then Live? The Rise and Decline of Western Thought and Culture&#39;, &#39;How Soccer Explains the World: An Unlikely Theory of Globalization&#39;, &#39;How We Are Hungry&#39;, &#39;How the Garcia Girls Lost Their Accents &#39;, &#39;How the Grinch Stole Christmas!&#39;, &#34;How the Irish Saved Civilization: The Untold Story of Ireland&#39;s Heroic Role from the Fall of Rome to the Rise of Medieval Europe &#34;, &#39;How the Mind Works&#39;, &#39;How to Be Good&#39;, &#39;How to Be Popular&#39;, &#39;How to Cook Everything: Simple Recipes for Great Food&#39;, &#39;How to Eat Fried Worms&#39;, &#39;How to Make Love Like a Porn Star: A Cautionary Tale&#39;, &#39;How to Stop Worrying and Start Living&#39;, &#39;How to Talk So Teens Will Listen and Listen So Teens Will Talk&#39;, &#39;How to Talk to a Widower&#39;, &#39;How to Win Friends and Influence People&#39;, &#39;Howards End&#39;, &#39;Howl and Other Poems &#39;, &#34;Howl&#39;s Moving Castle&#34;, &#39;Huis clos&#39;, &#39;Hundarna i Riga&#39;, &#39;Hunters of Dune&#39;, &#39;Hyperion&#39;, &#39;Hyperspace: A Scientific Odyssey Through Parallel Universes, Time Warps, and the Tenth Dimension&#39;, &#39;I Am America (And So Can You!)&#39;, &#39;I Am Legend &#39;, &#39;I Am Legend and Other Stories&#39;, &#39;I Am Not Myself These Days&#39;, &#39;I Am the Cheese&#39;, &#39;I Can Read with My Eyes Shut!&#39;, &#39;I Capture the Castle&#39;, &#34;I Do (But I Don&#39;t)&#34;, &#34;I Don&#39;t Know How She Does It&#34;, &#39;I Feel Bad About My Neck: And Other Thoughts on Being a Woman&#39;, &#39;I Have Lived A Thousand Years: Growing Up In The Holocaust&#39;, &#39;I Heard That Song Before&#39;, &#39;I Hope They Serve Beer in Hell&#39;, &#39;I Kissed Dating Goodbye: New Attitude Toward Romance and Relationship&#39;, &#39;I Know This Much Is True &#39;, &#39;I Know Why the Caged Bird Sings&#39;, &#39;I Like You: Hospitality Under the Influence&#39;, &#39;I Never Promised You a Rose Garden&#39;, &#39;I Was So Mad (Look-Look)&#39;, &#39;I is for Innocent&#39;, &#34;I&#39;ll Be Seeing You&#34;, &#34;I&#39;m Just Here for the Food: Food + Heat = Cooking&#34;, &#34;I&#39;m OK-You&#39;re OK&#34;, &#34;I&#39;m with the Band: Confessions of a Groupie&#34;, &#39;I, Claudius&#39;, &#39;I, Elizabeth&#39;, &#39;I, Robot&#39;, &#39;Ice Hunt&#39;, &#39;Ice Station Zebra&#39;, &#39;Iceberg&#39;, &#39;Icy Sparks&#39;, &#39;Identity Crisis&#39;, &#39;Idoru&#39;, &#39;If Chins Could Kill: Confessions of a B Movie Actor&#39;, &#39;If Life Is a Bowl of Cherries—What Am I Doing in the Pits?&#39;, &#39;If There Be Thorns&#39;, &#39;If Tomorrow Comes&#39;, &#39;If You Give a Mouse a Cookie&#39;, &#39;If You Give a Pig a Pancake &#39;, &#34;If You Want to Walk on Water, You&#39;ve Got to Get Out of the Boat&#34;, &#39;Il Gattopardo&#39;, &#39;Il Principe&#39;, &#39;Il barone rampante&#39;, &#39;Il decamerone&#39;, &#39;Il nome della rosa&#39;, &#39;Il pendolo di Foucault&#39;, &#39;Ilium&#39;, &#39;Illusions: The Adventures of a Reluctant Messiah&#39;, &#39;Ilse Witch &#39;, &#39;Im Westen nichts Neues&#39;, &#39;Imajica&#39;, &#39;Imitation in Death&#39;, &#39;Immortal in Death &#39;, &#39;Imperium&#39;, &#39;Impulse&#39;, &#39;In Cold Blood&#39;, &#39;In Her Shoes&#39;, &#39;In Our Time&#39;, &#39;In Search of Excellence&#39;, &#34;In Search of Schrödinger&#39;s Cat : Quantum Physics And Reality&#34;, &#39;In This Mountain (Mitford)&#39;, &#39;In Watermelon Sugar&#39;, &#39;In der Strafkolonie&#39;, &#39;In the Company of Cheerful Ladies&#39;, &#39;In the Company of the Courtesan&#39;, &#39;In the Hand of the Goddess&#39;, &#39;In the Heart of the Sea: The Tragedy of the Whaleship Essex&#39;, &#39;In the Lake of the Woods&#39;, &#39;In the Night Kitchen&#39;, &#39;In the Skin of a Lion&#39;, &#39;In the Time of the Butterflies&#39;, &#39;In the Woods&#39;, &#39;Inca Gold&#39;, &#39;Incidents in the Life of a Slave Girl Written by Herself&#39;, &#39;Incubus Dreams (Anita Blake, Vampire Hunter, #12)&#39;, &#39;Indelible&#39;, &#39;Independence Day&#39;, &#39;Industrial Magic&#39;, &#39;Inferno&#39;, &#39;Infidel&#39;, &#39;Infinite Jest&#39;, &#39;Infinity Welcomes Careful Drivers&#39;, &#39;Influence: The Psychology of Persuasion&#39;, &#39;Inherit the Wind&#39;, &#39;Inner Harbor (Chesapeake Bay Saga #3)&#39;, &#39;Innocent in Death (In Death, #24)&#39;, &#39;Inside the Human Body&#39;, &#39;Insomnia&#39;, &#39;Intensity&#39;, &#39;Interesting Times&#39;, &#39;Interpreter of Maladies&#39;, &#39;Interview with the Vampire&#39;, &#39;Into Thin Air: A Personal Account of the Mt. Everest Disaster&#39;, &#39;Into the Labyrinth&#39;, &#39;Into the Wild&#39;, &#39;Inversions&#39;, &#39;Invisible Man&#39;, &#39;Invisible Monsters&#39;, &#39;Invisible Prey&#39;, &#39;Inés del alma mía&#39;, &#39;Iron Man: Extremis&#39;, &#34;Ironside: A Modern Faery&#39;s Tale&#34;, &#39;Ironweed&#39;, &#34;Isaac&#39;s Storm: A Man, a Time, and the Deadliest Hurricane in History&#34;, &#39;Ishmael: An Adventure of the Mind and Spirit&#39;, &#39;Island&#39;, &#39;Island of the Blue Dolphins&#39;, &#39;Island of the Sequined Love Nun&#39;, &#39;Islands in the Stream&#39;, &#39;It&#39;, &#39;It Had to Be You&#39;, &#34;It&#39;s Kind of a Funny Story&#34;, &#34;It&#39;s Not About the Bike: My Journey Back to Life&#34;, &#34;It&#39;s OK, I&#39;m Wearing Really Big Knickers! (Confessions of Georgia Nicolson, #2)&#34;, &#34;It&#39;s a Magical World: A Calvin and Hobbes Collection&#34;, &#39;Ivanhoe&#39;, &#39;J is for Judgment (Kinsey Millhone #10)&#39;, &#39;JPod&#39;, &#39;Jack &amp; Jill&#39;, &#39;Jack: Straight from the Gut&#39;, &#39;Jackdaws&#39;, &#39;Jacob&#39;, &#39;Jacob Have I Loved&#39;, &#39;Jailbird&#39;, &#39;Jamaica Inn&#39;, &#39;Jamberry&#39;, &#39;James and the Giant Peach&#39;, &#39;Jane Eyre&#39;, &#39;Jaws&#39;, &#39;Jazz&#39;, &#39;Jedi Search (Star Wars: The Jedi Academy Trilogy, #1)&#39;, &#39;Jemima J&#39;, &#39;Jennifer Government&#39;, &#39;Jenseits von Gut und Böse: Vorspiel einer Philosophie der Zukunft&#39;, &#39;Jeremy Fink and the Meaning of Life&#39;, &#39;Jesus Land : A Memoir&#39;, &#39;Jesus the Christ: A Study of the Messiah and His Mission according to Holy Scriptures both Ancient and Modern&#39;, &#34;Jesus&#39; Son: Stories&#34;, &#34;Jewel (Oprah&#39;s Book Club) &#34;, &#39;Jewels of the Sun&#39;, &#39;Jimmy Corrigan: The Smartest Kid on Earth&#39;, &#39;Jingo&#39;, &#39;Jitterbug Perfume&#39;, &#39;Jo &#39;s Boys, and How They Turned Out: A Sequel to &#34;Little Men&#34;&#39;, &#39;Job: A Comedy of Justice&#39;, &#39;Joey Pigza Swallowed the Key (Joey Pigza Books)&#39;, &#39;John Adams&#39;, &#39;John Keats : The Complete Poems&#39;, &#39;Johnny Got His Gun&#39;, &#39;Johnny Mnemonic&#39;, &#39;Johnny Tremain&#39;, &#39;Jonathan Livingston Seagull&#39;, &#39;Jonathan Strange &amp; Mr Norrell&#39;, &#39;Judas Unchained&#39;, &#39;Jude the Obscure&#39;, &#39;Judge &amp; Jury&#39;, &#39;Judgment in Death&#39;, &#39;Judy Moody&#39;, &#39;Julie &amp; Julia: 365 Days, 524 Recipes, 1 Tiny Apartment Kitchen&#39;, &#39;Julie of the Wolves&#39;, &#39;Jumanji&#39;, &#39;Junie B. Jones and the Stupid Smelly Bus&#39;, &#39;Junk&#39;, &#39;Junky&#39;, &#39;Jurassic Park&#39;, &#39;Just Ella&#39;, &#39;Just Go to Bed&#39;, &#39;Just Listen&#39;, &#39;Just Me and My Dad (Look-Look)&#39;, &#39;Just One Look&#39;, &#39;Just So Stories for Little Children&#39;, &#39;Just a Mess (Look-Look)&#39;, &#39;Just for You&#39;, &#39;K is for Killer&#39;, &#39;Kabalmysteriet&#39;, &#39;Kabul Beauty School: An American Woman Goes Behind the Veil&#39;, &#34;Kaffir Boy: An Autobiography--The True Story of a Black Youth&#39;s Coming of Age in Apartheid South Africa&#34;, &#39;Kambing Jantan: Sebuah Catatan Harian Pelajar Bodoh &#39;, &#39;Kane and Abel&#39;, &#39;Kar&#39;, &#39;Katherine&#39;, &#39;Keep the Aspidistra Flying&#39;, &#39;Keeping Faith&#39;, &#39;Keeping You a Secret&#39;, &#39;Keeping the Moon&#39;, &#39;Key of Knowledge&#39;, &#39;Key of Light (Key Trilogy, #1)&#39;, &#39;Key of Valor (Key Trilogy, #3)&#39;, &#39;Keys to Drawing&#39;, &#39;Kidnapped&#39;, &#39;Killers of the Dawn (Cirque Du Freak, #9)&#39;, &#39;Killing Floor&#39;, &#34;Killing Pablo: The Hunt for the World&#39;s Greatest Outlaw&#34;, &#39;Killing Yourself to Live: 85% of a True Story&#39;, &#39;Kim&#39;, &#39;Kindred&#39;, &#34;King Leopold&#39;s Ghost&#34;, &#39;King Rat&#39;, &#34;King Solomon&#39;s Mines&#34;, &#39;King of the Murgos&#39;, &#39;Kingdom Come&#39;, &#39;Kiss an Angel &#39;, &#39;Kiss of Crimson &#39;, &#39;Kiss of Midnight&#39;, &#39;Kiss the Girls&#39;, &#39;Kisscut&#39;, &#39;Kitchen Confidential: Adventures in the Culinary Underbelly&#39;, &#34;Kitten&#39;s First Full Moon&#34;, &#39;Kitty and the Midnight Hour&#39;, &#39;Knife of Dreams&#39;, &#39;Kniha smíchu a zapomnění&#39;, &#39;Knocked out by my nunga-nungas&#39;, &#39;Knots &amp; Crosses&#39;, &#39;Knowing God&#39;, &#39;Kon-Tiki Ekspedisjonen&#39;, &#39;Krakatoa: The Day the World Exploded: August 27, 1883 &#39;, &#34;Kristy&#39;s Great Idea&#34;, &#39;Kritik der reinen Vernunft&#39;, &#39;Krondor: The Betrayal&#39;, &#34;Kurt Vonnegut&#39;s Cat Cradle&#34;, &#34;Kushiel&#39;s Avatar&#34;, &#34;Kushiel&#39;s Chosen&#34;, &#34;Kushiel&#39;s Dart&#34;, &#34;Kushiel&#39;s Justice&#34;, &#34;Kushiel&#39;s Scion&#34;, &#39;L is for Lawless&#39;, &#34;L&#39;Amant&#34;, &#34;L&#39;Existentialisme est un humanisme &#34;, &#34;L&#39;identité&#34;, &#34;L&#39;ignorance&#34;, &#34;L&#39;isola del giorno prima&#34;, &#34;L&#39;Éducation sentimentale&#34;, &#34;L&#39;être et le néant&#34;, &#34;L&#39;île mystérieuse&#34;, &#39;L.A. Confidential&#39;, &#39;La Chute&#39;, &#39;La Dame aux camélias&#39;, &#39;La Divina Commedia&#39;, &#39;La Nausée&#39;, &#39;La Prisonnière&#39;, &#39;La Société du Spectacle&#39;, &#39;La casa de Bernarda Alba&#39;, &#39;La casa de los espíritus&#39;, &#39;La chambre claire. Note sur la photographie&#39;, &#39;La ciudad de las bestias&#39;, &#39;La fiesta del chivo&#39;, &#39;La increíble y triste historia de la cándida Eréndira y de su abuela desalmada&#39;, &#39;La lenteur&#39;, &#39;La peste&#39;, &#39;La planète des singes&#39;, &#39;La sombra del viento&#39;, &#39;La tabla de Flandes&#39;, &#39;La vida del Lazarillo de Tormes y sus fortunas y adversidades &#39;, &#39;La vie de Gargantua et de Pantagruel&#39;, &#39;Labyrinth&#39;, &#39;Labyrinths&#39;, &#39;Ladder of Years&#39;, &#34;Lady Audley&#39;s Secret&#34;, &#34;Lady Chatterley&#39;s Lover&#34;, &#34;Lady Cottington&#39;s Pressed Fairy Book&#34;, &#39;Lady Friday&#39;, &#39;Lady Knight &#39;, &#34;Lady Windermere&#39;s Fan&#34;, &#39;Lady of Avalon&#39;, &#34;Lamb: The Gospel According to Biff, Christ&#39;s Childhood Pal&#34;, &#39;Lasher&#39;, &#39;Laskar Pelangi&#39;, &#39;Last Chance Saloon&#39;, &#39;Last Chance to See&#39;, &#39;Last Exit to Brooklyn&#39;, &#39;Last Man Standing&#39;, &#39;Last Orders&#39;, &#39;Le Comte de Monte-Cristo&#39;, &#34;Le Fantôme de l&#39;Opéra&#34;, &#34;Le Morte d&#39;Arthur&#34;, &#39;Le Mur&#39;, &#39;Le Mythe de Sisyphe&#39;, &#39;Le Petit Nicolas&#39;, &#39;Le Petit Prince&#39;, &#39;Le Père Goriot&#39;, &#39;Le Roi Babar&#39;, &#39;Le Rouge et le Noir&#39;, &#39;Le Scaphandre et le Papillon&#39;, &#39;Le Tartuffe, ou L’Imposteur&#39;, &#39;Le Vicomte de Bragelonne, ou Dix ans plus tard&#39;, &#34;Le Vite de&#39; più eccellenti pittori, scultori, e architettori da Cimabue insino a&#39; tempi nostri&#34;, &#39;Le avventure di Pinocchio&#39;, &#39;Le città invisibili&#39;, &#39;Le cosmicomiche&#39;, &#34;Le deuxième sexe: I. Les faits et les mythes, II. L&#39;expérience vécue&#34;, &#39;Le secret de la Licorne&#39;, &#39;Le tour du monde en quatre-vingts jours&#39;, &#39;Leadership and Self Deception: Getting Out of the Box&#39;, &#39;Lean Mean Thirteen&#39;, &#39;Learned Optimism: How to Change Your Mind and Your Life&#39;, &#39;Leaves of Grass&#39;, &#34;Left Behind: A Novel of the Earth&#39;s Last Days&#34;, &#39;Left to Tell: Discovering God Amidst the Rwandan Holocaust&#39;, &#39;Legally Blonde&#39;, &#39;Legend &#39;, &#39;Lemony Snicket: The Unauthorized Autobiography&#39;, &#34;Leota&#39;s Garden&#34;, &#39;Les Damnés de la terre&#39;, &#39;Les Fleurs du mal&#39;, &#39;Les Liaisons dangereuses&#39;, &#39;Les Misérables&#39;, &#39;Les Particules élémentaires&#39;, &#39;Les Trois Mousquetaires&#39;, &#39;Less Than Zero&#39;, &#39;Let Me Call You Sweetheart&#39;, &#39;Letter to a Christian Nation&#39;, &#39;Leven Thumps and the Gateway to Foo (Leven Thumps, #1)&#39;, &#39;Leven en werken van de Kabouter&#39;, &#39;Leviathan&#39;, &#39;Leviathan or The Matter, Forme and Power of a Common Wealth Ecclesiasticall and Civil&#39;, &#34;Liar&#39;s Poker: Rising Through the Wreckage on Wall Street&#34;, &#39;Libellus vere aureus, nec minus salutaris quam festivus, de optimo rei publicae statu deque nova insula Utopia&#39;, &#39;Libra &#39;, &#39;Lie Down With Lions&#39;, &#39;Lies My Teacher Told Me : Everything Your American History Textbook Got Wrong&#39;, &#39;Lies Women Believe: And the Truth that Sets Them Free&#39;, &#39;Lies and the Lying Liars Who Tell Them: A Fair and Balanced Look at the Right&#39;, &#39;Life &amp; Times of Michael K.&#39;, &#39;Life As We Knew It&#39;, &#39;Life Expectancy&#39;, &#39;Life after God&#39;, &#39;Life of Pi&#39;, &#39;Life, the Universe and Everything&#39;, &#39;Lifeguard&#39;, &#39;Light A Penny Candle&#39;, &#39;Light in August&#39;, &#39;Light on Snow&#39;, &#39;Lightning&#39;, &#39;Lioness Rampant&#39;, &#39;Lipstick Jungle&#39;, &#39;Lirael&#39;, &#34;Lisey&#39;s Story&#34;, &#39;Little Altars Everywhere&#39;, &#39;Little Bear&#39;, &#39;Little Children&#39;, &#39;Little Dorrit&#39;, &#39;Little Earthquakes&#39;, &#39;Little House In The Big Woods&#39;, &#39;Little House on Rocky Ridge&#39;, &#39;Little House on the Prairie&#39;, &#39;Little Lord Fauntleroy&#39;, &#34;Little Men, or Life at Plumfield with Jo&#39;s Boys&#34;, &#39;Little Town on the Prairie&#39;, &#39;Little Women&#39;, &#39;Live and Let Die&#39;, &#39;Live from New York: An Uncensored History of Saturday Night Live&#39;, &#39;Living Buddha, Living Christ&#39;, &#39;Living Dead in Dallas&#39;, &#39;Living History&#39;, &#39;Livro do Desassossego&#39;, &#39;Logisch-Philosophische Abhandlung&#39;, &#39;Lolita&#39;, &#39;Lon Po Po&#39;, &#39;London Bridges&#39;, &#39;London: The Novel&#39;, &#39;Lone Survivor: The Eyewitness Account of Operation Redwing and the Lost Heroes of SEAL Team 10&#39;, &#39;Lonesome Dove&#39;, &#34;Long Day&#39;s Journey Into Night&#34;, &#39;Long Walk to Freedom: The Autobiography of Nelson Mandela&#39;, &#39;Longitude&#39;, &#39;Look Homeward, Angel&#39;, &#34;Look Me in the Eye: My Life with Asperger&#39;s&#34;, &#39;Look to Windward&#39;, &#39;Looking for Alaska&#39;, &#39;Looking for Alibrandi&#39;, &#39;Lord Brocktree&#39;, &#39;Lord Edgware Dies&#39;, &#34;Lord Foul&#39;s Bane&#34;, &#39;Lord Jim&#39;, &#39;Lord John and the Private Matter&#39;, &#39;Lord Loss&#39;, &#39;Lord of Light&#39;, &#39;Lord of Scoundrels&#39;, &#39;Lord of the Flies &#39;, &#39;Lords and Ladies&#39;, &#39;Lorna Doone: A Romance of Exmoor&#39;, &#39;Los detectives salvajes&#39;, &#39;Loser&#39;, &#34;Losing My Virginity: How I&#39;ve Survived, Had Fun, and Made a Fortune Doing Business My Way&#34;, &#39;Lost&#39;, &#39;Lost Horizon&#39;, &#39;Lost Light&#39;, &#39;Lost Souls&#39;, &#39;Lost in a Good Book&#39;, &#39;Love Comes Softly (Love Comes Softly, #1)&#39;, &#39;Love Is a Dog from Hell: Poems, 1974-1977&#39;, &#39;Love Is a Mix Tape: Life and Loss, One Song at a Time&#39;, &#39;Love Medicine&#39;, &#39;Love Story&#39;, &#39;Love That Dog&#39;, &#39;Love Walked In&#39;, &#39;Love You Forever&#39;, &#39;Love and War &#39;, &#34;Love&#39;s Executioner &amp; Other Tales of Psychotherapy&#34;, &#39;Lover Awakened (Black Dagger Brotherhood, #3)&#39;, &#39;Lover Eternal (Black Dagger Brotherhood, #2)&#39;, &#39;Lover Revealed&#39;, &#39;Lover Unbound&#39;, &#39;Loves Music, Loves to Dance&#39;, &#39;Loving Frank&#39;, &#39;Low Country&#39;, &#39;Loyalty in Death&#39;, &#39;Lucia, Lucia&#39;, &#34;Lucifer&#39;s Hammer&#34;, &#39;Luck in the Shadows&#39;, &#39;Lucky&#39;, &#39;Lucky Jim&#39;, &#39;Lucky Man&#39;, &#39;Lucky You&#39;, &#39;Lucy Sullivan is Getting Married&#39;, &#39;Lullabies for Little Criminals&#39;, &#39;Lullaby&#39;, &#39;Luna&#39;, &#39;Lunar Park&#39;, &#39;Lust for Life: A Novel of Vincent Van Gogh&#39;, &#34;Lyra&#39;s Oxford&#34;, &#39;L’Étranger&#39;, &#39;MEG: A Novel of Deep Terror&#39;, &#39;Mad About Madeline&#39;, &#39;Madame Bovary&#39;, &#39;Made in America: An Informal History of the English Language in the United States&#39;, &#39;Made to Stick: Why Some Ideas Survive and Others Die&#39;, &#39;Magic Kingdom for Sale—Sold!&#39;, &#39;Magic Steps&#39;, &#34;Magic&#39;s Pawn&#34;, &#34;Magic&#39;s Price&#34;, &#34;Magic&#39;s Promise&#34;, &#39;Magical Thinking: True Stories&#39;, &#39;Magician&#39;, &#34;Magician&#39;s Gambit&#34;, &#39;Magician: Master (The Riftwar Saga, #2)&#39;, &#39;Magyk&#39;, &#39;Main Street&#39;, &#39;Maisie Dobbs&#39;, &#39;Make Way for Ducklings&#39;, &#39;Making Money&#39;, &#39;Maktub&#39;, &#39;Malgudi Days&#39;, &#39;Man and Boy&#39;, &#39;Man and His Symbols&#39;, &#34;Manhunt: The 12-Day Chase for Lincoln&#39;s Killer&#34;, &#39;Maniac Magee&#39;, &#39;Manifest der Kommunistischen Partei&#39;, &#39;Mannen som log&#39;, &#39;Mansfield Park&#39;, &#39;Manual do guerreiro da luz&#39;, &#39;Manufacturing Consent: The Political Economy of the Mass Media&#39;, &#39;Many Lives, Many Masters&#39;, &#39;Many Waters&#39;, &#39;Map of Bones&#39;, &#39;Marathon Man&#39;, &#39;March&#39;, &#39;Marie Antoinette: The Journey&#39;, &#39;Mariel of Redwall&#39;, &#39;Mark of the Lion Trilogy&#39;, &#34;Marley &amp; Me: Life and Love with the World&#39;s Worst Dog&#34;, &#39;Marlfox&#39;, &#39;Martin Eden&#39;, &#39;Martin the Warrior&#39;, &#39;Marvel 1602&#39;, &#39;Marvelous Land of Oz, The&#39;, &#39;Marvels&#39;, &#39;Mary Barton&#39;, &#39;Mary Poppins&#39;, &#39;Mary, Mary&#39;, &#39;Maskerade&#39;, &#39;Masquerade&#39;, &#39;Master and Commander&#39;, &#39;Master of the Game&#39;, &#39;Master of the Senate&#39;, &#39;Match Me If You Can&#39;, &#39;Mates, Dates, and Inflatable Bras&#39;, &#39;Matilda&#39;, &#39;Mattimeo&#39;, &#39;Maurice&#39;, &#39;Maus II : And Here My Troubles Began &#39;, &#34;Maus: A Survivor&#39;s Tale : My Father Bleeds History&#34;, &#39;Maximum City: Bombay Lost and Found&#39;, &#39;Mayflower: A Story of Courage, Community, and War&#39;, &#39;Me &amp; Emma&#39;, &#39;Me Talk Pretty One Day&#39;, &#39;Me: Stories of My Life&#39;, &#39;Means of Ascent &#39;, &#39;Measure for Measure&#39;, &#39;Meditationes de prima philosophia&#39;, &#39;Meet Samantha: An American Girl (American Girls: Samantha, #1)&#39;, &#39;Mein Kampf&#39;, &#39;Memnoch The Devil&#39;, &#39;Memoirs of a Geisha&#39;, &#39;Memoirs of a Teenage Amnesiac&#39;, &#39;Memoria de mis putas tristes&#39;, &#39;Memorial Day&#39;, &#39;Memorial do Convento&#39;, &#39;Memories of Ice&#39;, &#39;Memories of Midnight&#39;, &#39;Memory in Death &#39;, &#39;Memórias Póstumas de Brás Cubas&#39;, &#39;Men Are from Mars, Women Are from Venus Book of Days: 365 Inspirations to Enrich Your Relationships&#39;, &#39;Men at Arms&#39;, &#39;Mercy&#39;, &#39;Mere Christianity&#39;, &#39;Merrick&#39;, &#39;Message in a Bottle&#39;, &#39;Messenger &#39;, &#39;Messenger of Truth&#39;, &#39;Metamorphoses&#39;, &#34;Methuselah&#39;s Children&#34;, &#39;Metro Girl&#39;, &#39;Meu Pé de Laranja Lima&#39;, &#39;Micah (Anita Blake, Vampire Hunter, #13)&#39;, &#34;Michelangelo and the Pope&#39;s Ceiling&#34;, &#39;Microserfs&#39;, &#39;Middlemarch&#39;, &#39;Middlesex&#39;, &#39;Midnight&#39;, &#39;Midnight Bayou&#39;, &#39;Midnight Tides&#39;, &#39;Midnight for Charlie Bone&#39;, &#39;Midnight in the Garden of Good and Evil&#39;, &#34;Midnight&#39;s Children&#34;, &#39;Midwives&#39;, &#39;Mike Mulligan and His Steam Shovel&#39;, &#39;Mila 18&#39;, &#39;Miles: The Autobiography&#39;, &#39;Milkweed&#39;, &#39;Millions of Cats&#39;, &#39;Mind Prey&#39;, &#39;Mindset: The New Psychology of Success&#39;, &#39;Miracle in the Andes: 72 Days on the Mountain and My Long Trek Home&#39;, &#39;Miracles: A Preliminary Study&#39;, &#39;Mirror Dance&#39;, &#39;Mirror Mirror&#39;, &#39;Misery&#39;, &#39;Misquoting Jesus: The Story Behind Who Changed the Bible and Why&#39;, &#39;Miss Nelson Is Missing!&#39;, &#39;Miss Rumphius&#39;, &#39;Mistborn : The Final Empire&#39;, &#39;Mister Monday&#39;, &#39;Mister Pip&#39;, &#34;Mistral&#39;s Kiss&#34;, &#39;Mistress of the Empire (The Empire Trilogy, #3)&#39;, &#39;Misty of Chincoteague&#39;, &#39;Mitford Years New Song Unabridged&#39;, &#39;Moab Is My Washpot&#39;, &#39;Moby Dick; or, The Whale&#39;, &#34;Molly Moon&#39;s Incredible Book of Hypnotism&#34;, &#34;Moloka&#39;i&#34;, &#39;Momo&#39;, &#39;Mona Lisa Overdrive&#39;, &#39;Money&#39;, &#39;Moneyball: The Art of Winning an Unfair Game&#39;, &#39;Monster&#39;, &#39;Monstrous Regiment&#39;, &#39;Montana Sky&#39;, &#39;Moo, Baa, La La La!&#39;, &#39;Moon Called&#39;, &#39;Moon Palace&#39;, &#39;Moonlight Becomes You&#39;, &#39;Moonraker&#39;, &#39;Moonrise&#39;, &#39;Morality for Beautiful Girls&#39;, &#39;More Tales of the City&#39;, &#39;More Than a Carpenter&#39;, &#39;Moreta: Dragonlady Of Pern&#39;, &#39;Morgawr &#39;, &#39;Morning, Noon &amp; Night&#39;, &#39;Mornings on Horseback&#39;, &#34;Morrigan&#39;s Cross&#34;, &#39;Mort&#39;, &#39;Mortal Prey&#39;, &#39;Mossflower&#39;, &#39;Mostly Harmless&#39;, &#39;Mother Night&#39;, &#39;Mother of Pearl&#39;, &#39;Motherless Brooklyn&#39;, &#39;Motor Mouth&#39;, &#39;Mount Dragon&#39;, &#39;Mountain Interval&#39;, &#39;Mountain of Black Glass&#39;, &#39;Mountains Beyond Mountains: The Quest of Dr. Paul Farmer, a Man Who Would Cure the World&#39;, &#39;Moving Pictures&#39;, &#39;Mr Maybe&#39;, &#39;Mr. Brown Can Moo! Can You?&#39;, &#34;Mr. Darcy&#39;s Diary&#34;, &#39;Mr. Murder&#39;, &#39;Mr. Perfect&#39;, &#34;Mr. Popper&#39;s Penguins&#34;, &#39;Mrs Dalloway&#39;, &#39;Mrs. Frisby and the Rats of NIMH&#39;, &#39;Mrs. Mike&#39;, &#39;Mrs. Piggle-Wiggle&#39;, &#34;Mrs. Piggle-Wiggle&#39;s Magic&#34;, &#39;Much Ado About Nothing&#39;, &#39;Murder Must Advertise&#39;, &#39;Murder at the Vicarage&#39;, &#39;Murder in Mesopotamia&#39;, &#39;Murder in the Calais Coach&#39;, &#39;Mutant Message Down Under&#39;, &#39;Mutiny on the Bounty&#39;, &#39;Mutter Courage und ihre Kinder&#39;, &#34;My Best Friend&#39;s Girl&#34;, &#39;My Brother Sam Is Dead&#39;, &#39;My Cousin Rachel&#39;, &#39;My Family and Other Animals&#39;, &#34;My Father&#39;s Dragon (My Father&#39;s Dragon Trilogy)&#34;, &#39;My Friend Leonard&#39;, &#39;My Horizontal Life: A Collection of One-Night Stands&#39;, &#39;My Life&#39;, &#39;My Life in France&#39;, &#39;My Man Jeeves&#39;, &#39;My Name Is Asher Lev&#39;, &#39;My Side of the Mountain &#39;, &#34;My Sister&#39;s Keeper&#34;, &#39;My Story: &#34;A Child Called It&#34;, &#34;The Lost Boy&#34;, &#34;A Man Named Dave&#34;&#39;, &#39;My Sweet Audrina&#39;, &#39;My Utmost for His Highest&#39;, &#39;My Year of Meats&#39;, &#39;My Ántonia&#39;, &#39;Mystic River&#39;, &#39;Mythologies&#39;, &#39;Mythology&#39;, &#39;Mördare utan ansikte&#39;, &#39;Mήδεια&#39;, &#39;NANA―ナナ― 1&#39;, &#39;NARUTO -ナルト- 巻ノ一 &#39;, &#39;NARUTO -ナルト- 巻ノ十一 &#39;, &#39;Na margem do rio Piedra eu sentei e chorei&#39;, &#39;Nachfolge&#39;, &#39;Naiv.Super.&#39;, &#39;Naked&#39;, &#39;Naked Economics: Undressing the Dismal Science&#39;, &#39;Naked Empire (Sword of Truth, #8)&#39;, &#39;Naked in Death&#39;, &#39;Nana&#39;, &#39;Napalm &amp; Silly Putty&#39;, &#39;Narcissus in Chains (Anita Blake, Vampire Hunter, #10)&#39;, &#39;Narrative of the Life of Frederick Douglass&#39;, &#39;Narziß und Goldmund&#39;, &#39;National Velvet&#39;, &#39;Native Son &#39;, &#39;Native Tongue&#39;, &#39;Natural Born Charmer&#39;, &#39;Nature Girl&#39;, &#39;Necroscope &#39;, &#39;Needful Things&#39;, &#39;Nefertiti&#39;, &#39;Neither Here Nor There: Travels in Europe&#39;, &#39;Nemesis&#39;, &#34;Nerilka&#39;s Story (Pern: Dragonriders of Pern, #5)&#34;, &#39;Nesmrtelnost&#39;, &#39;Nesnesitelná lehkost bytí&#39;, &#39;Neuromancer&#39;, &#39;Never Cry Wolf : The Amazing True Story of Life Among Arctic Wolves&#39;, &#39;Never Eat Alone: And Other Secrets to Success, One Relationship at a Time&#39;, &#39;Never Let Me Go&#39;, &#39;Neverwhere&#39;, &#39;Neverwhere Graphic Novel&#39;, &#39;New Moon (Twilight, #2)&#39;, &#39;New Spring&#39;, &#39;Next&#39;, &#39;Nicholas Nickleby&#39;, &#39;Nicholas and Alexandra&#39;, &#39;Nickel and Dimed: On (Not) Getting By in America&#39;, &#39;Nicolae: The Rise of Antichrist&#39;, &#39;Night Chills&#39;, &#39;Night Fall&#39;, &#39;Night Mare (Xanth, #6)&#39;, &#39;Night Prey&#39;, &#39;Night Probe!&#39;, &#39;Night Shift&#39;, &#39;Night Watch&#39;, &#39;Night of the Living Dummy&#39;, &#39;Night of the Soul Stealer&#39;, &#39;Nightfall&#39;, &#39;Nightmares &amp; Dreamscapes &#39;, &#39;Nights in Rodanthe&#39;, &#39;Nights of Rain and Stars&#39;, &#39;Nine Parts of Desire: The Hidden World of Islamic Women&#39;, &#39;Nine Princes in Amber&#39;, &#39;Nine Stories&#39;, &#39;Nineteen Eighty-Four&#39;, &#39;Nineteen Minutes&#39;, &#39;Ninth Key&#39;, &#39;No Country for Old Men&#39;, &#39;No Exit and Three Other Plays&#39;, &#39;No Humans Involved&#39;, &#39;No Logo&#39;, &#39;No One Belongs Here More Than You&#39;, &#39;No One Here Gets Out Alive&#39;, &#39;No Ordinary Time: Franklin and Eleanor Roosevelt: The Home Front in World War II&#39;, &#39;No Rest for the Wicked&#39;, &#39;No Second Chance&#39;, &#39;No god but God: The Origins, Evolution, and Future of Islam&#39;, &#39;No, David!&#39;, &#39;Noble House&#39;, &#34;Nobody&#39;s Baby But Mine&#34;, &#34;Nobody&#39;s Fool&#34;, &#39;North and South&#39;, &#39;Northanger Abbey&#39;, &#39;Northern Lights&#39;, &#39;Nostromo: a Tale of the Seaboard&#39;, &#39;Not Without My Daughter&#39;, &#39;Not a Penny More, Not a Penny Less&#39;, &#39;Notes from a Big Country&#39;, &#39;Notes from a Small Island&#39;, &#39;Notes of a Dirty Old Man&#39;, &#39;Notes on a Scandal&#39;, &#39;Nothing Lasts Forever&#39;, &#34;Nothing&#39;s Fair in Fifth Grade&#34;, &#39;Notre-Dame de Paris&#39;, &#39;Noughts &amp; Crosses&#39;, &#39;Nourishing Traditions: The Cookbook that Challenges Politically Correct Nutrition and the Diet Dictocrats&#39;, &#39;Now We Are Six&#39;, &#39;Now, Discover Your Strengths&#39;, &#39;Number the Stars&#39;, &#39;O Alquimista&#39;, &#39;O Demônio e a Srta. Prym&#39;, &#39;O Diário de um Mago&#39;, &#39;O Evangelho segundo Jesus Cristo&#39;, &#39;O Homem Duplicado&#39;, &#39;O Monte Cinco&#39;, &#39;O Pioneers!&#39;, &#39;O Zahir&#39;, &#39;Oblivion&#39;, &#39;Obsidian Butterfly (Anita Blake, Vampire Hunter, #9)&#39;, &#39;Odd Thomas&#39;, &#39;Of Human Bondage&#39;, &#39;Of Mice and Men &#39;, &#39;Ogre, Ogre (Xanth, #5)&#39;, &#34;Oh, the Places You&#39;ll Go!&#34;, &#34;Old Man&#39;s War&#34;, &#34;Old Possum&#39;s Book of Practical Cats&#34;, &#39;Old Yeller&#39;, &#39;Oliver Twist&#39;, &#39;Olivia&#39;, &#39;Olivia Joules And The Overactive Imagination&#39;, &#39;Olympos&#39;, &#39;Omertà&#39;, &#39;On Basilisk Station &#39;, &#39;On Beauty&#39;, &#39;On Becoming Baby Wise: Giving Your Infant the Gift of Nighttime Sleep&#39;, &#34;On Becoming a Person: A Therapist&#39;s View of Psychotherapy&#34;, &#39;On Chesil Beach&#39;, &#39;On Death and Dying&#39;, &#39;On Food and Cooking: The Science and Lore of the Kitchen&#39;, &#34;On Her Majesty&#39;s Secret Service&#34;, &#39;On Liberty&#39;, &#39;On Mystic Lake&#39;, &#39;On Photography&#39;, &#39;On Writing Well: The Classic Guide to Writing Nonfiction&#39;, &#39;On Writing: A Memoir of the Craft&#39;, &#39;On a Pale Horse&#39;, &#39;On the Beach&#39;, &#39;On the Genealogy of Morals / Ecce Homo&#39;, &#39;On the Origin of Species by Means of Natural Selection or the Preservation of Favoured Races in the Struggle for Life&#39;, &#39;On the Road&#39;, &#39;On the Street Where You Live&#39;, &#39;On the Way to Wedding&#39;, &#39;Once a Runner&#39;, &#39;Once and Always&#39;, &#39;One&#39;, &#39;One Day at Horrorland&#39;, &#39;One Door Away from Heaven&#39;, &#39;One False Move&#39;, &#39;One Fish, Two Fish, Red Fish, Blue Fish&#39;, &#34;One Flew Over the Cuckoo&#39;s Nest&#34;, &#34;One Flew Over the Cuckoo&#39;s Nest (script)&#34;, &#39;One Good Turn&#39;, &#39;One Night @ The Call Center&#39;, &#39;One Shot&#39;, &#39;One Thousand White Women: The Journals of May Dodd&#39;, &#39;One True Thing&#39;, &#39;One Up On Wall Street : How To Use What You Already Know To Make Money In The Market&#39;, &#39;One for the Money&#39;, &#39;One, Two, Buckle My Shoe&#39;, &#39;Onze minutos&#39;, &#39;Open House&#39;, &#39;Open Season&#39;, &#34;Operating Instructions: A Journal of My Son&#39;s First Year&#34;, &#39;Oracle Night&#39;, &#39;Oranges Are Not the Only Fruit&#39;, &#39;Ordinary People&#39;, &#39;Orientalism&#39;, &#39;Origin in Death&#39;, &#39;Orlando: A Biography&#39;, &#39;Orthodoxy&#39;, &#39;Orvos voltam Auschwitzban&#39;, &#39;Oryx and Crake&#39;, &#39;Os Maias&#39;, &#39;Oscar and Lucinda&#39;, &#39;Oscar et la dame rose&#39;, &#39;Otherwise Known as Sheila the Great&#39;, &#39;Our Band Could Be Your Life: Scenes from the American Indie Underground 1981-1991&#39;, &#34;Our Dumb Century: The Onion Presents 100 Years of Headlines from America&#39;s Finest News Source&#34;, &#39;Our Man in Havana&#39;, &#39;Our Mutual Friend&#39;, &#39;Our Town: A Play in Three Acts&#39;, &#39;Out アウト&#39;, &#39;Out from Boneville&#39;, &#39;Out of Africa&#39;, &#39;Out of the Dust&#39;, &#39;Out of the Silent Planet&#39;, &#39;Out to Canaan (Mitford)&#39;, &#39;Outbreak&#39;, &#39;Outcast of Redwall&#39;, &#39;Outer Dark&#39;, &#39;Outlander&#39;, &#39;Over Sea, Under Stone&#39;, &#39;Ozma of Oz&#39;, &#39;PS, I Love You&#39;, &#39;Pacific Vortex!&#39;, &#39;Paddy Clarke Ha Ha Ha&#39;, &#39;Page &#39;, &#39;Paint It Black&#39;, &#39;Paladin of Souls&#39;, &#39;Pale Blue Dot: A Vision of the Human Future in Space&#39;, &#39;Pale Fire&#39;, &#39;Palestine&#39;, &#39;Pandora&#39;, &#39;Pandora / Vittorio the Vampire (New Tales of the Vampires)&#39;, &#34;Pandora&#39;s Star&#34;, &#39;Papillon &#39;, &#39;Parable of the Sower (Earthseed, #1)&#39;, &#39;Parable of the Talents&#39;, &#39;Paradise&#39;, &#39;Paradise Lost&#39;, &#39;Paradiso&#39;, &#39;Pardonable Lies&#39;, &#39;Paris to the Moon&#39;, &#39;Party Princess&#39;, &#39;Passage to Dawn&#39;, &#39;Passing&#39;, &#34;Passion and Purity: Learning to Bring Your Love Life Under Christ&#39;s Control&#34;, &#39;Pastoralia&#39;, &#39;Pastwatch: The Redemption of Christopher Columbus&#39;, &#39;Pat the Bunny (Touch and Feel Book)&#39;, &#39;Patriot Games&#39;, &#39;Pattern Recognition&#39;, &#39;Paula&#39;, &#39;Pawn of Prophecy&#39;, &#39;Pay It Forward&#39;, &#39;Peace Is Every Step: The Path of Mindfulness in Everyday Life&#39;, &#39;Peace Like a River&#39;, &#39;Peak&#39;, &#39;Pebble in the Sky&#39;, &#39;Pedagogia do Oprimido&#39;, &#39;Pedro Páramo&#39;, &#39;Peony in Love&#39;, &#39;Perdido Street Station&#39;, &#39;Perelandra&#39;, &#39;Perfect&#39;, &#39;Perfect Match&#39;, &#39;Peril at End House&#39;, &#39;Persepolis&#39;, &#39;Persepolis 2 &#39;, &#39;Personal History&#39;, &#39;Persuasion&#39;, &#39;Pet Sematary&#39;, &#39;Petals on the Wind&#39;, &#39;Peter Pan&#39;, &#39;Peter and the Shadow Thieves&#39;, &#39;Peter and the Starcatchers&#39;, &#39;Phantom (Sword of Truth, #10)&#39;, &#39;Phantoms&#39;, &#39;Phantoms in the Brain: Probing the Mysteries of the Human Mind&#39;, &#39;Philosophische Untersuchungen&#39;, &#39;Physik&#39;, &#39;Phänomenologie des Geistes&#39;, &#39;Picture Perfect&#39;, &#39;Pictures of Hollis Woods&#39;, &#39;Piercing the Darkness&#39;, &#39;Pigs in Heaven&#39;, &#39;Pilgrim at Tinker Creek&#39;, &#39;Pinkalicious&#39;, &#39;Pippi Långstrump&#39;, &#39;Pippi Långstrump i Söderhavet&#39;, &#39;Plain Truth&#39;, &#39;Plainsong&#39;, &#39;Plan B: Further Thoughts on Faith&#39;, &#39;Planetary, Volume 1: All Over the World and Other Stories&#39;, &#39;Plateforme&#39;, &#39;Play It as It Lays&#39;, &#39;Player Piano&#39;, &#39;Playing For Pizza&#39;, &#39;Please Kill Me: The Uncensored Oral History of Punk&#39;, &#34;Please Stop Laughing at Me... One Woman&#39;s Inspirational Story&#34;, &#39;Plum Island&#39;, &#34;Plum Lovin&#39;&#34;, &#39;Plum Lucky &#39;, &#39;Pnin&#39;, &#39;Point of Impact&#39;, &#39;Point of Origin&#39;, &#39;Poirot Investigates&#39;, &#39;Poison Study&#39;, &#39;Polar Bear, Polar Bear, What Do You Hear?&#39;, &#39;Polgara the Sorceress&#39;, &#39;Politics&#39;, &#39;Pollyanna&#39;, &#39;Pompeii&#39;, &#39;Pop Goes the Weasel&#39;, &#39;Pope Joan&#39;, &#39;Porno&#39;, &#34;Portnoy&#39;s Complaint&#34;, &#39;Portrait in Death&#39;, &#39;Portrait of a Killer: Jack The Ripper - Case Closed&#39;, &#39;Positioning: The Battle for Your Mind&#39;, &#39;Possessing the Secret of Joy&#39;, &#39;Possession&#39;, &#39;Possible Side Effects&#39;, &#39;Post Captain&#39;, &#39;Post Office&#39;, &#39;Post-Mortem: A Mystery Introducing Dr. Kay Scarpetta&#39;, &#39;PostSecret: Extraordinary Confessions from Ordinary Lives&#39;, &#39;Power of Art&#39;, &#39;Practical Demonkeeping&#39;, &#39;Practical Magic&#39;, &#39;Prayers for Rain &#39;, &#34;Praying God&#39;s Word: Breaking Free From Spiritual Strongholds&#34;, &#39;Preacher Vol. 1: Gone to Texas&#39;, &#39;Preacher Vol. 2: Until the End of the World&#39;, &#34;Preacher, Volume 8: All Hell&#39;s a-Coming&#34;, &#39;Preacher: Ancient History (Preacher, #4)&#39;, &#39;Preacher: Dixie Fried&#39;, &#39;Preacher: Proud Americans&#39;, &#39;Preacher: Salvation&#39;, &#39;Preacher: War in the Sun&#39;, &#39;Predator&#39;, &#39;Prelude to Foundation&#39;, &#39;Preludes &amp; Nocturnes&#39;, &#39;Prentice Alvin (Tales of Alvin Maker #3)&#39;, &#39;Prep&#39;, &#39;Presumed Innocent&#39;, &#34;Pretend You Don&#39;t See Her&#34;, &#39;Pretties&#39;, &#39;Prey&#39;, &#39;Pride and Prejudice&#39;, &#39;Pride of Baghdad&#39;, &#39;Priestess of Avalon &#39;, &#39;Prince Caspian: The Return to Narnia&#39;, &#39;Prince of Fire&#39;, &#39;Prince of the Blood&#39;, &#39;Princess Academy&#39;, &#39;Princess in Love&#39;, &#39;Princess in Pink&#39;, &#39;Princess in Training&#39;, &#39;Princess in Waiting (The Princess Diaries, #4)&#39;, &#39;Princess in the Spotlight&#39;, &#39;Princess on the Brink&#39;, &#39;Princess: A True Story of Life Behind the Veil in Saudi Arabia &#39;, &#39;Prinsessen på ærten&#39;, &#39;Prior Bad Acts&#39;, &#39;Prison of Ice &#39;, &#39;Prisoner of my desire &#39;, &#39;Prodigal Summer&#39;, &#39;Promise Me (Myron Bolitar, #8)&#39;, &#39;Promise Not to Tell&#39;, &#39;Proof: A Play&#39;, &#39;Prophet&#39;, &#39;Proven Guilty&#39;, &#39;Prozac Nation&#39;, &#39;Psycho&#39;, &#34;Ptolemy&#39;s Gate&#34;, &#39;Pulp&#39;, &#39;Purgatorio&#39;, &#39;Purity in Death&#39;, &#39;Purple Cow: Transform Your Business by Being Remarkable&#39;, &#39;Purple Hibiscus&#39;, &#39;Pursuit of God&#39;, &#39;Push&#39;, &#39;Pushing Ice&#39;, &#39;Put Me in the Zoo&#39;, &#39;Pygmalion&#39;, &#39;Pygmalion and My Fair Lady (50th Anniversary Edition) (Signet Classics (Paperback))&#39;, &#39;Pyongyang&#39;, &#39;Pyramids&#39;, &#39;Příliš hlučná samota&#39;, &#39;Q &amp; A: Slumdog Millionaire&#39;, &#39;QB VII&#39;, &#39;QED: The Strange Theory of Light and Matter&#39;, &#39;Que Necesita El, Que Necesita Ella &#39;, &#39;Queen of Babble&#39;, &#39;Queen of Babble in the Big City&#39;, &#39;Queen of Sorcery&#39;, &#39;Queen of the Darkness&#39;, &#39;Quentins&#39;, &#39;Quicksilver&#39;, &#39;Quidditch Through the Ages&#39;, &#39;Quo vadis?&#39;, &#39;R is for Ricochet&#39;, &#39;Rabbit Is Rich&#39;, &#39;Rabbit Redux&#39;, &#39;Rabbit at Rest&#39;, &#39;Rabbit, Run&#39;, &#39;Rachael Ray 365: No Repeats--A Year of Deliciously Different Dinners (A 30-Minute Meal Cookbook)&#39;, &#34;Rachel&#39;s Holiday&#34;, &#39;Rage&#39;, &#39;Rage of Angels&#39;, &#39;Rage of a Demon King (The Serpentwar Saga #3)&#39;, &#39;Ragtime&#39;, &#39;Rainbow Boys&#39;, &#39;Rainbow Six&#39;, &#39;Rainbow Valley&#39;, &#39;Rainbows End&#39;, &#39;Raise High the Roof Beam, Carpenters / Seymour: An Introduction&#39;, &#39;Raise the Titanic!&#39;, &#39;Rama II&#39;, &#39;Rama Revealed: The Ultimate Encounter&#39;, &#39;Ramona Forever&#39;, &#39;Ramona Quimby, Age 8&#39;, &#39;Ramona and Her Father&#39;, &#39;Ramona and Her Mother&#39;, &#39;Ramona the Brave &#39;, &#39;Ramona the Pest&#39;, &#39;Random Family: Love, Drugs, Trouble, and Coming of Age in the Bronx&#39;, &#39;Ranma ½, Volume 1&#39;, &#39;Rant: An Oral Biography of Buster Casey&#39;, &#39;Rapture in Death&#39;, &#39;Rapunzel&#39;, &#39;Rayuela&#39;, &#39;Reading Lolita in Tehran: A Memoir in Books&#39;, &#39;Ready or Not&#39;, &#39;Reaper Man&#39;, &#34;Reaper&#39;s Gale&#34;, &#39;Rebecca&#39;, &#39;Rebecca of Sunnybrook Farm&#39;, &#39;Rebel Angels&#39;, &#39;Red&#39;, &#39;Red Dragon&#39;, &#39;Red Harvest&#39;, &#39;Red Lily&#39;, &#39;Red Mars&#39;, &#39;Red Phoenix&#39;, &#39;Red Prophet (Tales of Alvin Maker, #2)&#39;, &#39;Red Rabbit&#39;, &#39;Red Storm Rising&#39;, &#39;Redemption&#39;, &#39;Redemption Ark&#39;, &#39;Redwall&#39;, &#39;Regeneration&#39;, &#39;Rejoice&#39;, &#39;Relic&#39;, &#39;Reliquary&#39;, &#39;Remember&#39;, &#39;Remember Me &#39;, &#39;Rendezvous with Rama&#39;, &#39;Replay&#39;, &#39;Requiem for a Dream&#39;, &#39;Reservation Blues&#39;, &#39;Restless&#39;, &#39;Retrato en sepia&#39;, &#39;Return&#39;, &#39;Reunion&#39;, &#39;Reunion in Death&#39;, &#39;Revelation Space&#39;, &#39;Reviving Ophelia: Saving the Selves of Adolescent Girls&#39;, &#39;Revolting Rhymes&#39;, &#39;Revolutionary Road&#39;, &#39;Rhapsody: Child of Blood&#39;, &#39;Rich Dad , Poor Dad&#39;, &#34;Rich Dad&#39;s Guide to Investing: What the Rich Invest in, That the Poor and the Middle Class Do Not!&#34;, &#39;Rich Man, Poor Man&#39;, &#39;Ricochet&#39;, &#39;Right Ho, Jeeves&#39;, &#39;Rikki-Tikki-Tavi&#39;, &#39;Rilla of Ingleside&#39;, &#39;Ringworld&#39;, &#39;Riptide&#39;, &#39;Rise of a Merchant Prince&#39;, &#39;Rise of the Evening Star&#39;, &#39;Rising Sun&#39;, &#39;Rising Tides (Chesapeake Bay Saga #2)&#39;, &#39;Rising storm&#39;, &#39;River God&#39;, &#39;River Secrets&#39;, &#39;River of Blue Fire&#39;, &#39;River, Cross My Heart&#39;, &#39;Roadwork&#39;, &#34;Robert Ludlum&#39;s The Bourne Legacy&#34;, &#39;Robin Hood, le prince des voleurs&#39;, &#39;Robots and Empire&#39;, &#39;Rocket Boys&#39;, &#39;Rogue Squadron&#39;, &#39;Roll of Thunder, Hear My Cry&#39;, &#39;Romancing Mister Bridgerton (Bridgertons, #4)&#39;, &#39;Roots&#39;, &#39;Rose Daughter&#39;, &#39;Rose Madder&#39;, &#39;Rose in Bloom&#39;, &#34;Rosemary&#39;s Baby&#34;, &#39;Rosencrantz and Guildenstern are Dead&#39;, &#39;Roses Are Red&#39;, &#39;Round Ireland with a Fridge&#39;, &#39;Royal Assassin&#39;, &#39;Rubicon: The Last Years of the Roman Republic&#39;, &#39;Ruby Holler&#39;, &#39;Rubyfruit Jungle&#39;, &#39;Rules&#39;, &#39;Rules Of Prey&#39;, &#39;Rumble Fish&#39;, &#39;Rumpelstilzchen&#39;, &#39;Run&#39;, &#39;Run Baby Run&#39;, &#39;Runaway&#39;, &#39;Runaway Ralph&#39;, &#39;Running with Scissors&#39;, &#39;Running with the Demon&#39;, &#39;S is for Silence&#39;, &#39;Sabriel&#39;, &#39;Sacred&#39;, &#39;Sad Cypress&#39;, &#39;Sadako and the Thousand Paper Cranes&#39;, &#39;Safe Harbour&#39;, &#39;Sahara&#39;, &#39;Sailing Alone Around the Room: New and Selected Poems&#39;, &#39;Saint Maybe&#39;, &#39;Salamandastron&#39;, &#39;Salem Falls&#39;, &#34;Salem&#39;s Lot&#34;, &#39;Salt: A World History&#39;, &#34;Sam&#39;s Letters To Jennifer&#34;, &#39;Samarcande&#39;, &#39;Same Kind of Different as Me&#39;, &#39;Sanctuary&#39;, &#34;Sandry&#39;s Book&#34;, &#39;Sang Pemimpi&#39;, &#39;SantaLand Diaries&#39;, &#39;Sarah, Plain and Tall&#39;, &#39;Sarum: The Novel of England&#39;, &#39;Saturday&#39;, &#34;Savage Inequalities: Children in America&#39;s Schools&#34;, &#39;Savannah Blues&#39;, &#39;Savannah Breeze&#39;, &#39;Saving Faith&#39;, &#39;Saving Fish from Drowning: A Novel&#39;, &#39;Saving Francesca&#39;, &#39;Saving The World and Other Extreme Sports&#39;, &#39;Say Cheese and Die!&#39;, &#39;Scar Tissue&#39;, &#34;Scarlett: The Sequel to Margaret Mitchell&#39;s Gone With the Wind&#34;, &#39;Scary Stories to Tell in the Dark&#39;, &#39;Schachnovelle&#39;, &#34;Schindler&#39;s Ark&#34;, &#34;School&#39;s Out Forever&#34;, &#39;Scoop&#39;, &#34;Scott Pilgrim, Volume 1: Scott Pilgrim&#39;s Precious Little Life&#34;, &#39;Scott Pilgrim, Volume 2: Scott Pilgrim vs. The World&#39;, &#39;Scott Pilgrim, Volume 3: Scott Pilgrim &amp; The Infinite Sadness&#39;, &#39;Scuffy the Tugboat and His Adventures Down the River&#39;, &#39;Se questo è un uomo&#39;, &#34;Se una notte d&#39;inverno un viaggiatore&#34;, &#39;Sea Glass&#39;, &#39;Sea Swept&#39;, &#39;Sea of Silver Light&#39;, &#39;Seabiscuit&#39;, &#39;Searching for God Knows What&#39;, &#39;Second Chance&#39;, &#39;Second Glance&#39;, &#39;Second Helpings (Jessica Darling, #2)&#39;, &#39;Second Treatise of Government&#39;, &#39;Secret Prey&#39;, &#39;Secrets of the Vine: Breaking Through to Abundance&#39;, &#39;Seduced by Moonlighty (Merry Gentry, #3)&#39;, &#39;Seduction in Death&#39;, &#39;See Jane Date&#39;, &#39;See You at the Top: 25th Anniversary Edition&#39;, &#39;Seeds of Yesterday&#39;, &#39;Sein und Zeit&#39;, &#39;Seize the Night&#39;, &#39;Selected Poems&#39;, &#39;Selected Poems of Emily Dickinson&#39;, &#39;Self Matters: Creating Your Life from the Inside Out&#39;, &#39;Self-Reliance and Other Essays&#39;, &#39;Sellevision&#39;, &#39;Sense and Sensibility&#39;, &#39;Separation of Power&#39;, &#39;September&#39;, &#39;Ser Como o Rio que Flui&#39;, &#39;Serpent Mage&#39;, &#39;Servant of the Bones&#39;, &#39;Servant of the Empire (The Empire Trilogy, #2)&#39;, &#39;Seta&#39;, &#39;Seven Up&#39;, &#39;Sex God: Exploring the Endless Connections Between Sexuality And Spirituality&#39;, &#39;Sex and the City&#39;, &#39;Sex, Drugs, and Cocoa Puffs: A Low Culture Manifesto&#39;, &#39;Sexing the Cherry&#39;, &#39;Shadow &amp; Claw&#39;, &#39;Shadow Divers: The True Adventure of Two Americans Who Risked Everything to Solve One of the Last Mysteries of World War II&#39;, &#39;Shadow Fires&#39;, &#39;Shadow Puppets&#39;, &#39;Shadow of a Dark Queen (The Serpentwar Saga, #1)&#39;, &#39;Shadow of the Giant&#39;, &#39;Shadow of the Hegemon&#39;, &#39;Shadowland&#39;, &#39;Shadows Linger&#39;, &#39;Shalimar the Clown&#39;, &#39;Shall We Tell the President?&#39;, &#34;Shaman&#39;s Crossing&#34;, &#39;Shantaram&#39;, &#39;Shards of Honor&#39;, &#39;Shards of a Broken Crown (The Serpentwar Saga, #4)&#39;, &#39;Sharp Objects&#39;, &#34;Sharpe&#39;s Rifles&#34;, &#34;Sharpe&#39;s Tiger&#34;, &#39;Shattered&#39;, &#39;Shatterglass&#39;, &#34;She&#39;s Come Undone&#34;, &#39;Sherlock Holmes: The Complete Novels and Stories, Vol 2&#39;, &#39;Sherlock Holmes: The Complete Novels and Stories, Volume I&#39;, &#39;Shiloh&#39;, &#39;Ship of Destiny&#39;, &#39;Ship of Magic&#39;, &#39;Shirley &#39;, &#39;Shock Wave&#39;, &#39;Shoe Addicts Anonymous &#39;, &#39;Shoeless Joe&#39;, &#39;Shopaholic Abroad&#39;, &#39;Shopaholic Ties the Knot&#39;, &#39;Shopaholic and Baby&#39;, &#39;Shopaholic and Sister&#39;, &#39;Shopgirl: A Novella&#39;, &#39;Showdown by Ted Dekker Signature Edition&#39;, &#39;Shroud for a Nightingale&#39;, &#39;Shutter Island&#39;, &#39;Shōgun&#39;, &#39;Shūtur eli sharrī&#39;, &#39;Sick Puppy&#39;, &#39;Sickened&#39;, &#39;Siddhartha&#39;, &#39;Sieben Jahre in Tibet&#39;, &#39;Siege of Darkness&#39;, &#39;Sign of the Unicorn&#39;, &#39;Silas Marner: The Weaver of Raveloe&#39;, &#39;Silent Prey&#39;, &#39;Silent Spring&#39;, &#39;Silver on the Tree&#39;, &#39;Silverthorn&#39;, &#39;Simple Abundance: A Daybook of Comfort and Joy&#39;, &#39;Simple Genius&#39;, &#39;Sin City Volume 1: The Hard Goodbye&#39;, &#39;Sin City: A Dame to Kill For&#39;, &#39;Sin City: That Yellow Bastard&#39;, &#39;Sin City: The Big Fat Kill&#39;, &#39;Singularity Sky&#39;, &#39;Sinuhe egyptiläinen &#39;, &#39;Sir Thursday&#39;, &#39;Sister Carrie&#39;, &#39;Sister of My Heart&#39;, &#39;Sisters&#39;, &#39;Six Easy Pieces: Essentials of Physics Explained by Its Most Brilliant Teacher&#39;, &#39;Size 12 Is Not Fat (Heather Wells, #1)&#39;, &#39;Size 14 Is Not Fat Either&#39;, &#39;Skeleton Crew&#39;, &#39;Skellig&#39;, &#39;Skin&#39;, &#39;Skin Tight&#39;, &#39;Skinny Bitch: A No-Nonsense, Tough-Love Guide for Savvy Girls Who Want to Stop Eating Crap and Start Looking Fabulous!&#39;, &#39;Skinny Dip&#39;, &#39;Skinny Legs and All&#39;, &#39;Skipping Christmas&#39;, &#39;Skippyjon Jones&#39;, &#39;Slammerkin&#39;, &#39;Slapstick&#39;, &#34;Slaughterhouse-Five, or The Children&#39;s Crusade: A Duty-Dance with Death &#34;, &#39;Sleepers&#39;, &#39;Sleeping Beauty&#39;, &#39;Sleeping Beauty Box Set&#39;, &#39;Sleeping Murder&#39;, &#39;Sloppy Firsts (Jessica Darling, #1)&#39;, &#39;Slouching Towards Bethlehem: Essays&#39;, &#39;Small Favor&#39;, &#39;Small Gods&#39;, &#39;Small Island&#39;, &#39;Small Sacrifices: A True Story of Passion and Murder&#39;, &#39;Small Steps&#39;, &#39;Smashed: Story of a Drunken Girlhood&#39;, &#34;Smiley&#39;s People&#34;, &#39;Smoke and Mirrors: Short Fiction and Illusions&#39;, &#39;Směšné lásky &#39;, &#39;Snow Crash&#39;, &#39;Snow Falling on Cedars&#39;, &#39;Snow Flower and the Secret Fan&#39;, &#39;Snow White and the Seven Dwarfs&#39;, &#39;So B. It&#39;, &#39;So Long, and Thanks for All the Fish&#39;, &#39;So You Want to Be a Wizard&#39;, &#39;Sofies Verden&#39;, &#39;Sojourn (Dark Elf #3)&#39;, &#39;Solaris&#39;, &#39;Sold&#39;, &#39;Someone Like You&#39;, &#39;Something Blue&#39;, &#39;Something Borrowed&#39;, &#39;Something Rotten&#39;, &#39;Something Wicked This Way Comes&#39;, &#39;Something Wonderful&#39;, &#39;Something from the Nightside&#39;, &#39;Sometimes a Great Notion&#39;, &#39;Son of a Witch&#39;, &#39;Son of the Shadows&#39;, &#39;Song of Solomon&#39;, &#39;Song of Susannah&#39;, &#39;Songs in Ordinary Time&#39;, &#39;Songs of Innocence and of Experience&#39;, &#39;Songs of the Humpback Whale: A Novel in Five Voices&#39;, &#39;Sonnenfinsternis&#39;, &#39;Sonnets&#39;, &#39;Sons and Lovers&#39;, &#39;Sons of Destiny (Cirque Du Freak, Book 12)&#39;, &#39;Sons of Fortune&#39;, &#39;Soon I Will Be Invincible&#39;, &#34;Sophie&#39;s Choice&#34;, &#39;Sorceress of Darshiva&#39;, &#39;Soul Harvest: The World Takes Sides&#39;, &#39;Soul Music&#39;, &#39;Soul On Ice&#39;, &#39;Soul of the Fire&#39;, &#39;Sounder&#39;, &#39;Sourcery&#39;, &#39;Speak&#39;, &#39;Speaker for the Dead&#39;, &#39;Special Topics in Calamity Physics&#39;, &#39;Specials&#39;, &#39;Sphere&#39;, &#39;Spin&#39;, &#34;Spindle&#39;s End&#34;, &#39;Split Infinity (Apprentice Adept, #1)&#39;, &#39;Split Second&#39;, &#39;Spook Country&#39;, &#39;Spook: Science Tackles the Afterlife&#39;, &#39;Squire&#39;, &#39;Stalingrad: The Fateful Siege, 1942–1943&#39;, &#39;Standing for Something: 10 Neglected Virtues That Will Heal Our Hearts and Homes&#39;, &#39;Star Wars: Dark Force Rising&#39;, &#39;Star Wars: From the Adventures of Luke Skywalker&#39;, &#39;Star Wars: Specter of the Past&#39;, &#39;Star Wars: The Jedi Academy Trilogy, Volume III - Champions of the Force&#39;, &#39;Star Wars: The Last Command&#39;, &#39;Star Wars: Vision of the Future&#39;, &#39;Stardust&#39;, &#39;Stargirl&#39;, &#39;Starless Night (Legacy of the Drow #2)&#39;, &#39;Starlight (Warriors: The New Prophecy, #4)&#39;, &#39;Starship Troopers&#39;, &#39;Starter for Ten&#39;, &#39;Startide Rising&#39;, &#39;State Of The Union&#39;, &#39;State of Fear&#39;, &#39;Stay Out of the Basement&#39;, &#39;Staying Fat for Sarah Byrnes&#39;, &#39;Steget efter&#39;, &#39;Step on a Crack&#39;, &#39;Stiff: The Curious Lives of Human Cadavers&#39;, &#39;Still Life with Crows (Pendergast, #4)&#39;, &#39;Still Life with Woodpecker&#39;, &#39;Stolen&#39;, &#39;Stone Butch Blues&#39;, &#39;Stone Soup&#39;, &#39;Stone of Farewell&#39;, &#39;Stone of Tears&#39;, &#39;Stones from the River&#39;, &#39;Storia della bellezza&#39;, &#39;Storm Front&#39;, &#39;Storm Island&#39;, &#39;Storm of the Century: An Original Screenplay&#39;, &#39;Stormy Weather&#39;, &#39;Story of a Girl&#39;, &#39;Straight Man&#39;, &#39;Straight Talking&#39;, &#39;Strange Candy&#39;, &#39;Strange Highways&#39;, &#39;Stranger Than Fiction: True Stories&#39;, &#39;Stranger in a Strange Land&#39;, &#39;Strangers&#39;, &#39;Strangers on a Train&#39;, &#39;Stray&#39;, &#39;Streams of Silver (Icewind Dale #2)&#39;, &#39;Street Magic&#39;, &#39;Strega Nona&#39;, &#39;Strengths Finder 2.0&#39;, &#39;Strip Tease&#39;, &#39;Strong Poison&#39;, &#39;Stuart Little&#39;, &#39;Stumbling on Happiness&#39;, &#39;Stupeur et tremblements&#39;, &#39;Stupid white men and other sorry excuses for the state of the nation&#39;, &#39;Subterranean&#39;, &#39;Succulent Wild Woman&#39;, &#39;Sudden Prey&#39;, &#39;Suffer the Children&#39;, &#39;Sugar Daddy&#39;, &#39;Suite française &#39;, &#39;Sula&#39;, &#34;Sullivan&#39;s Island&#34;, &#39;Sult&#39;, &#39;Summer Island&#39;, &#39;Summer Knight&#39;, &#39;Summer People&#39;, &#39;Summer Sisters&#39;, &#39;Summer of My German Soldier&#39;, &#39;Summer of Night&#39;, &#39;Sundiver&#39;, &#39;Sunset&#39;, &#39;Sunshine&#39;, &#39;Superfudge&#39;, &#39;Superman: Birthright 1-12&#39;, &#39;Superman: Red Son&#39;, &#39;Superman: Whatever Happened to the Man of Tomorrow?&#39;, &#39;Supernova: Akar&#39;, &#39;Supernova: Ksatria, Puteri, dan Bintang Jatuh&#39;, &#39;Supernova: Petir&#39;, &#34;Surely You&#39;re Joking, Mr. Feynman! Adventures of a Curious Character&#34;, &#39;Surfacing&#39;, &#39;Surprised by Joy: The Shape of My Early Life&#39;, &#39;Surveiller et punir. Naissance de la prison&#39;, &#39;Survivor&#39;, &#39;Survivor in Death (In Death, #20)&#39;, &#39;Sushi for Beginners&#39;, &#39;Suttree&#39;, &#34;Suzanne&#39;s Diary for Nicholas&#34;, &#39;Swan Song&#39;, &#39;Swapping Lives&#39;, &#39;Swimmy &#39;, &#39;Sybil&#39;, &#39;Sylvester and the Magic Pebble&#39;, &#39;Systematic Theology: An Introduction to Biblical Doctrine&#39;, &#39;Sämtliche Erzählungen&#39;, &#39;Tai-Pan&#39;, &#39;Take the Cannoli: Stories from the New World&#39;, &#39;Tales from Earthsea&#39;, &#39;Tales of Caunterbury&#39;, &#39;Tales of a Female Nomad: Living at Large in the World&#39;, &#39;Tales of a Fourth Grade Nothing&#39;, &#39;Tales of the City&#39;, &#39;Tales of the South Pacific&#39;, &#39;Taliesin. Book I of the Pendragon Cycle&#39;, &#39;Talon of the Silver Hawk&#39;, &#39;Taltos&#39;, &#39;Tangerine&#39;, &#39;Tao of Pooh and Te of Piglet Boxed Set&#39;, &#39;Tar Baby&#39;, &#39;Tara Road&#39;, &#39;Taran Wanderer&#39;, &#39;Tarzan of the Apes&#39;, &#39;Tatiana and Alexander (The Bronze Horseman, #2)&#39;, &#39;Tawny Scrawny Lion (Little Golden Book)&#39;, &#39;Teacher Man&#39;, &#39;Team of Rivals: The Political Genius of Abraham Lincoln&#39;, &#39;Tears of a Tiger&#39;, &#39;Tears of the Giraffe&#39;, &#39;Tears of the Moon&#39;, &#39;Teen Idol&#39;, &#39;Tehanu&#39;, &#39;Tell Me Your Dreams&#39;, &#39;Tell No One&#39;, &#39;Temple of the Winds (Sword of Truth, #4)&#39;, &#39;Ten Apples Up on Top&#39;, &#39;Ten Big Ones&#39;, &#39;Ten Little Niggers&#39;, &#39;Tender Is the Night&#39;, &#39;Tender at the Bone: Growing Up at the Table&#39;, &#39;Term Limits&#39;, &#39;Terms of Endearment&#39;, &#39;Terrier&#39;, &#34;Tess of the d&#39;Urbervilles: A Pure Woman Faithfully Presented&#34;, &#39;Test of the Twins (Dragonlance Legends, #3)&#39;, &#39;Texas&#39;, &#39;Thank You for Smoking&#39;, &#39;That Hideous Strength&#39;, &#39;That Summer&#39;, &#39;That Was Then, This Is Now&#39;, &#39;The 158-Pound Marriage&#39;, &#39;The 21 Irrefutable Laws of Leadership&#39;, &#39;The 22 Immutable Laws of Marketing: Violate Them at Your Own Risk!&#39;, &#39;The 4-Hour Workweek: Escape 9-5, Live Anywhere, and Join the New Rich&#39;, &#39;The 48 Laws of Power&#39;, &#39;The 5th Horseman&#39;, &#39;The 6th Target&#39;, &#39;The 7 Habits Of Highly Effective Teens&#39;, &#39;The 7 Habits of Highly Effective People&#39;, &#39;The 80/20 Principle: The Secret to Success by Achieving More with Less&#39;, &#39;The ABC Murders&#39;, &#39;The Abolition of Man&#39;, &#39;The Absolute Sandman, Volume One&#39;, &#39;The Abstinence Teacher&#39;, &#39;The Accidental Tourist&#39;, &#39;The Acid House&#39;, &#39;The Adventures of Augie March&#39;, &#39;The Adventures of Captain Underpants&#39;, &#39;The Adventures of Huckleberry Finn&#39;, &#39;The Adventures of Sherlock Holmes&#39;, &#39;The Adventures of Tom Sawyer&#39;, &#39;The Afghan&#39;, &#39;The Age of Innocence&#39;, &#39;The Agony and the Ecstasy: A Biographical Novel of Michelangelo&#39;, &#39;The Akhenaten Adventure&#39;, &#39;The Alchemyst: The Secrets of The Immortal Nicholas Flamel&#39;, &#39;The Alexandria Link&#39;, &#39;The Algebraist&#39;, &#39;The Alibi&#39;, &#39;The Alienist&#39;, &#39;The Almost Moon&#39;, &#39;The Amateur Marriage&#39;, &#39;The Amazing Adventures of Kavalier &amp; Clay&#39;, &#39;The Amazing Maurice and His Educated Rodents &#39;, &#39;The Amber Room&#39;, &#39;The Amber Spyglass&#39;, &#34;The America&#39;s Test Kitchen Family Cookbook&#34;, &#39;The Amityville Horror&#39;, &#39;The Amulet of Samarkand&#39;, &#34;The Ancestor&#39;s Tale: A Pilgrimage to the Dawn of Evolution&#34;, &#34;The Android&#39;s Dream&#34;, &#39;The Andromeda Strain&#39;, &#39;The Angel Experiment&#39;, &#39;The Angel of Darkness&#39;, &#39;The Apprentice&#39;, &#39;The Aquitaine Progression&#39;, &#39;The Arctic Incident&#39;, &#39;The Areas of My Expertise&#39;, &#39;The Art of Happiness: A Handbook for Living&#39;, &#39;The Art of Loving&#39;, &#39;The Art of Travel&#39;, &#39;The Art of the Start: The Time-Tested, Battle-Hardened Guide for Anyone Starting Anything&#39;, &#34;The Artist&#39;s Way: A Spiritual Path to Higher Creativity&#34;, &#39;The Atonement Child&#39;, &#39;The Atrocity Archives&#39;, &#39;The Audacity of Hope: Thoughts on Reclaiming the American Dream&#39;, &#39;The Austere Academy&#39;, &#39;The Authoritative Calvin and Hobbes&#39;, &#39;The Autobiography of Henry VIII. With Notes by His Fool, Will Somers&#39;, &#39;The Autobiography of Malcolm X&#39;, &#39;The Autograph Man&#39;, &#39;The Automatic Millionaire: A Powerful One-Step Plan to Live and Finish Rich&#39;, &#39;The Awakening&#39;, &#39;The Awakening and Selected Short Stories&#39;, &#39;The BFG&#39;, &#39;The Bachman Books&#39;, &#39;The Bad Beginning&#39;, &#39;The Bad Place&#39;, &#39;The Bad Seed &#39;, &#39;The Bar Code Tattoo (Point Thriller)&#39;, &#39;The Barefoot Contessa Cookbook&#39;, &#39;The Basketball Diaries 1963-1966&#39;, &#39;The Bastard (Kent Family Chronicles, Vol. 1)&#39;, &#39;The Beach&#39;, &#39;The Beach House&#39;, &#39;The Bean Trees&#39;, &#39;The Bear and the Dragon&#39;, &#39;The Beatles Anthology&#39;, &#39;The Beatles: The Biography&#39;, &#39;The Beautiful and Damned&#39;, &#39;The Beauty Myth: How Images of Beauty Are Used Against Women&#39;, &#34;The Beekeeper&#39;s Apprentice&#34;, &#39;The Beet Queen&#39;, &#34;The Belgariad Boxed Set: Pawn of Prophecy, Queen of Sorcery, Magician&#39;s Gambit, Castle of Wizardry, &amp; Enchanters&#39; End Game (The Belgariad, #1-5)&#34;, &#34;The Belgariad: Part One - Pawn of Prophecy / Queen of Sorcery / Magician&#39;s Gambit&#34;, &#39;The Bell Jar&#39;, &#39;The Bellmaker&#39;, &#39;The Berenstain Bears and Too Much TV&#39;, &#39;The Berenstain Bears and the Messy Room&#39;, &#39;The Best Christmas Pageant Ever&#39;, &#39;The Best Laid Plans&#39;, &#39;The Best of H.P. Lovecraft &#39;, &#39;The Big Bad Wolf &#39;, &#39;The Big Four&#39;, &#39;The Big Nowhere&#39;, &#39;The Big Over Easy&#39;, &#39;The Big Sleep&#39;, &#39;The Birth House&#39;, &#39;The Birth of Venus&#39;, &#39;The Black Cat&#39;, &#39;The Black Cauldron&#39;, &#39;The Black Company&#39;, &#39;The Black Dahlia&#39;, &#39;The Black Echo&#39;, &#39;The Black Lyon&#39;, &#39;The Black Stallion&#39;, &#39;The Black Swan: The Impact of the Highly Improbable&#39;, &#39;The Black Unicorn &#39;, &#39;The Blank Slate: The Modern Denial of Human Nature&#39;, &#39;The Blessing Way&#39;, &#39;The Blind Assassin&#39;, &#39;The Blind Side: Evolution of a Game&#39;, &#39;The Blind Watchmaker: Why the Evidence of Evolution Reveals a Universe Without Design&#39;, &#39;The Blood of Flowers&#39;, &#39;The Bloody Chamber &amp; Other Stories&#39;, &#39;The Blue Castle&#39;, &#39;The Bluest Eye&#39;, &#39;The Body Farm&#39;, &#39;The Body Snatchers&#39;, &#39;The Body in the Library&#39;, &#39;The Boleyn Inheritance&#39;, &#39;The Bone Collector&#39;, &#39;The Bone Garden&#39;, &#39;The Bone People&#39;, &#39;The Bonehunters&#39;, &#34;The Bonesetter&#39;s Daughter&#34;, &#39;The Bonfire of the Vanities&#39;, &#39;The Book Thief&#39;, &#39;The Book of Illusions&#39;, &#39;The Book of Joe&#39;, &#39;The Book of Lost Things&#39;, &#39;The Book of Mormon&#39;, &#39;The Book of Mormon, Doctrine and Covenants, the Pearl of Great Price&#39;, &#39;The Book of Ruth&#39;, &#39;The Book of Three&#39;, &#39;The Book of the Dead&#39;, &#39;The Book on the Taboo Against Knowing Who You Are&#39;, &#39;The Borrowers Afield&#39;, &#34;The Botany of Desire: A Plant&#39;s-Eye View of the World&#34;, &#39;The Bourne Identity&#39;, &#39;The Bourne Supremacy&#39;, &#39;The Bourne Ultimatum&#39;, &#39;The Boxcar Children&#39;, &#39;The Boy Next Door (Boy #1)&#39;, &#39;The Boy in the Striped Pyjamas&#39;, &#39;The Boyfriend List: 15 Guys, 11 Shrink Appointments, 4 Ceramic Frogs and Me, Ruby Oliver (Ruby Oliver, #1)&#39;, &#39;The Boys from Brazil&#39;, &#39;The Brethren&#39;, &#39;The Bridge Across Forever: A True Love Story&#39;, &#39;The Bridge of San Luis Rey&#39;, &#39;The Bridges of Madison County&#39;, &#39;The Brief Wondrous Life of Oscar Wao&#39;, &#39;The Broker&#39;, &#39;The Bronze Bow&#39;, &#39;The Bronze Horseman&#39;, &#39;The Brooklyn Follies&#39;, &#39;The Broom of the System&#39;, &#39;The Brothers K&#39;, &#39;The Buddha of Suburbia&#39;, &#39;The Burden of Proof&#39;, &#39;The Burning Bridge&#39;, &#39;The Cabinet of Curiosities&#39;, &#39;The Caine Mutiny&#39;, &#39;The Call of Cthulhu and Other Weird Stories&#39;, &#39;The Call of the Wild&#39;, &#39;The Call of the Wild / White Fang&#39;, &#39;The Call of the Wild, White Fang and Other Stories &#39;, &#39;The Calvin and Hobbes Lazy Sunday Book&#39;, &#39;The Calvin and Hobbes Tenth Anniversary Book&#39;, &#39;The Camel Club&#39;, &#39;The Capture&#39;, &#39;The Cardinal of the Kremlin&#39;, &#39;The Carnivorous Carnival&#39;, &#39;The Case for Christ&#39;, &#39;The Case for a Creator: A Journalist Investigates Scientific Evidence That Points Toward God&#39;, &#39;The Case of Charles Dexter Ward&#39;, &#39;The Case-Book of Sherlock Holmes&#39;, &#39;The Cask of Amontillado&#39;, &#39;The Castle In The Attic (The Castle In The Attic, #1)&#39;, &#39;The Castle of Llyr&#39;, &#39;The Cat Who Could Read Backwards&#39;, &#39;The Cat Who Walks through Walls&#39;, &#39;The Cat in the Hat&#39;, &#39;The Cat in the Hat Comes Back&#39;, &#39;The Cat in the Hat and Other Dr. Seuss Favorites&#39;, &#39;The Catcher in the Rye&#39;, &#39;The Caves of Steel&#39;, &#39;The Cay&#39;, &#39;The Celestine Prophecy&#39;, &#39;The Cement Garden&#39;, &#39;The Chamber&#39;, &#39;The Charm School&#39;, &#39;The Children of Húrin&#39;, &#39;The Children of Men&#39;, &#39;The Chocolate War&#39;, &#39;The Choice&#39;, &#39;The Chosen&#39;, &#39;The Christmas Train&#39;, &#39;The Chronicles of Narnia&#39;, &#39;The Chronicles of Pern: First Fall&#39;, &#39;The Chronicles of Thomas Covenant, the Unbeliever&#39;, &#39;The Chrysalids&#39;, &#39;The Cider House Rules&#39;, &#39;The City and the Stars&#39;, &#39;The City of Ember&#39;, &#39;The City of Falling Angels&#39;, &#39;The Claiming of Sleeping Beauty&#39;, &#39;The Clan of the Cave Bear&#39;, &#39;The Client&#39;, &#39;The Climb: Tragic Ambitions on Everest&#39;, &#39;The Clique (The Clique, #1)&#39;, &#39;The Clocks&#39;, &#39;The Closers&#39;, &#39;The Cobra Event&#39;, &#39;The Code Of The Woosters&#39;, &#39;The Codex&#39;, &#39;The Cold Moon&#39;, &#39;The Coldest Winter Ever&#39;, &#39;The Collected Poems&#39;, &#39;The Collected Poems of Langston Hughes&#39;, &#39;The Collected Poems of W.B. Yeats&#39;, &#39;The Collector&#39;, &#39;The Collectors&#39;, &#39;The Color Purple&#39;, &#34;The Color of Water: A Black Man&#39;s Tribute to His White Mother&#34;, &#39;The Colorado Kid&#39;, &#39;The Colour of Magic&#39;, &#39;The Comfort of Strangers&#39;, &#39;The Commitments&#39;, &#39;The Complete Adventures of Curious George&#39;, &#39;The Complete Anne of Green Gables Boxed Set&#39;, &#39;The Complete Calvin and Hobbes&#39;, &#39;The Complete Maus&#39;, &#39;The Complete Poems of Emily Dickinson&#39;, &#39;The Complete Poems: Anne Sexton&#39;, &#39;The Complete Poetry &amp; Prose of William Blake&#39;, &#39;The Complete Robot&#39;, &#39;The Complete Sherlock Holmes&#39;, &#39;The Complete Short Stories of Ernest Hemingway&#39;, &#39;The Complete Stories&#39;, &#39;The Complete Tales and Poems of Edgar Allan Poe&#39;, &#39;The Complete Tales of Beatrix Potter&#39;, &#39;The Complete Tales of Edgar Allan Poe&#39;, &#39;The Complete Works&#39;, &#39;The Complete Wreck (A Series of Unfortunate Events, Books 1-13)&#39;, &#39;The Concrete Blonde&#39;, &#39;The Confessions of Nat Turner&#39;, &#39;The Confessor&#39;, &#39;The Confusion&#39;, &#39;The Consolations of Philosophy&#39;, &#39;The Constant Gardener&#39;, &#39;The Constant Princess&#39;, &#39;The Copper Beech&#39;, &#39;The Corrections&#39;, &#39;The Courts of Chaos&#39;, &#39;The Cove&#39;, &#39;The Covenant&#39;, &#39;The Cradle Will Fall&#39;, &#39;The Crimson Petal and the White&#39;, &#39;The Cronicle History of Henry the fift&#39;, &#39;The Cross and the Switchblade&#39;, &#39;The Crossing &#39;, &#39;The Crow Road&#39;, &#39;The Crucible&#39;, &#39;The Crying of Lot 49&#39;, &#39;The Crystal Cave&#39;, &#39;The Crystal Shard&#39;, &#39;The Curious Incident of the Dog in the Night-Time&#39;, &#39;The Curse of Chalion&#39;, &#39;The Da Vinci Code&#39;, &#34;The Dance of Anger: A Woman&#39;s Guide to Changing the Patterns of Intimate Relationships&#34;, &#39;The Dancing Wu Li Masters: An Overview of the New Physics&#39;, &#39;The Dante Club&#39;, &#34;The Dark Elf Trilogy Collector&#39;s Edition (Forgotten Realms: Dark Elf Trilogy, #1-3)&#34;, &#39;The Dark Half&#39;, &#39;The Dark Is Rising&#39;, &#39;The Dark Is Rising Sequence (The Dark Is Rising, #1-5)&#39;, &#39;The Dark Tower&#39;, &#39;The Dark Tower: The Gunslinger Born&#39;, &#39;The Darkest Road&#39;, &#39;The Darkness That Comes Before&#39;, &#39;The Daughter of Time&#39;, &#39;The Day of the Jackal&#39;, &#39;The Day of the Locust&#39;, &#39;The Day of the Triffids&#39;, &#39;The Days Are Just Packed: A Calvin and Hobbes Collection&#39;, &#39;The Dead&#39;, &#39;The Dead Zone&#39;, &#39;The Dead of the Night&#39;, &#39;The Death and Life of Charlie St. Cloud&#39;, &#39;The Death of Kings (Emperor, #2)&#39;, &#39;The Death of Superman&#39;, &#39;The Debutante Divorcée&#39;, &#39;The Deep End of the Ocean&#39;, &#39;The Definitive Book of Body Language&#39;, &#39;The Demolished Man&#39;, &#39;The Demon-Haunted World: Science as a Candle in the Dark&#39;, &#39;The Descendants&#39;, &#39;The Devil Wears Prada&#39;, &#39;The Devil in the White City: Murder, Magic, and Madness at the Fair that Changed America&#39;, &#34;The Devil&#39;s Alternative&#34;, &#34;The Devil&#39;s Arithmetic&#34;, &#39;The Dharma Bums&#39;, &#39;The Diamond Age&#39;, &#39;The Diamond Throne&#39;, &#39;The Dice Man&#39;, &#39;The Difference Engine&#39;, &#34;The Dirt: Confessions of the World&#39;s Most Notorious Rock Band&#34;, &#39;The Dirty Girls Social Club&#39;, &#34;The Discoverers: A History of Man&#39;s Search to Know His World and Himself&#34;, &#39;The Dispossessed&#39;, &#34;The Dive From Clausen&#39;s Pier&#34;, &#39;The Dogs of Babel&#39;, &#34;The Doll&#39;s House&#34;, &#39;The Dolphins of Pern&#39;, &#39;The Doomsday Conspiracy&#39;, &#39;The Door into Summer&#39;, &#39;The Door to December&#39;, &#39;The Doors of Perception &amp; Heaven and Hell&#39;, &#39;The Double Bind&#39;, &#39;The Double Helix: A Personal Account of the Discovery of the Structure of DNA&#39;, &#39;The Dragon Reborn &#39;, &#39;The Dragonbone Chair&#39;, &#39;The Dragonriders of Pern&#39;, &#39;The Dragons of Eden: Speculations on the Evolution of Human Intelligence&#39;, &#39;The Dragonslayer (Bone, #4)&#39;, &#39;The Drawing of the Three&#39;, &#39;The Dream Hunter&#39;, &#39;The Druid of Shannara&#39;, &#39;The Duke and I&#39;, &#34;The E-Myth Revisited: Why Most Small Businesses Don&#39;t Work and What to Do About It&#34;, &#39;The Eagle Has Landed&#39;, &#39;The Ear, the Eye, and the Arm&#39;, &#39;The Earth, My Butt, and Other Big Round Things&#39;, &#39;The Earthsea Trilogy&#39;, &#39;The Edible Woman&#39;, &#39;The Education of Little Tree&#39;, &#39;The Effective Executive: The Definitive Guide to Getting the Right Things Done (Harperbusiness Essentials)&#39;, &#39;The Egypt Game&#39;, &#39;The Eight&#39;, &#39;The Electric Kool-Aid Acid Test&#39;, &#39;The Elegant Universe: Superstrings, Hidden Dimensions, and the Quest for the Ultimate Theory&#39;, &#39;The Elements of Style&#39;, &#39;The Elf Queen of Shannara &#39;, &#39;The Elfstones Of Shannara&#39;, &#39;The Elvenbane (Halfblood Chronicles, #1)&#39;, &#39;The Elves of Cintra &#39;, &#34;The Emperor&#39;s Children&#34;, &#39;The Empty Chair &#39;, &#39;The End&#39;, &#39;The End of Eternity&#39;, &#39;The End of Faith: Religion, Terror, and the Future of Reason&#39;, &#39;The End of the Affair&#39;, &#39;The Enemy&#39;, &#39;The English Assassin&#39;, &#39;The English Patient&#39;, &#39;The Ersatz Elevator&#39;, &#39;The Essential Calvin and Hobbes: A Calvin and Hobbes Treasury&#39;, &#39;The Eternity Code&#39;, &#34;The Executioner&#39;s Song&#34;, &#39;The Exorcist&#39;, &#39;The Eye of the World&#39;, &#39;The Eyes of Darkness&#39;, &#39;The Eyre Affair&#39;, &#39;The Fabric of the Cosmos: Space, Time and the Texture of Reality&#39;, &#39;The Face&#39;, &#39;The Face Of Deception&#39;, &#39;The Face of Fear&#39;, &#39;The Face on the Milk Carton&#39;, &#39;The Faerie Queene&#39;, &#39;The Fairy-Tale Detectives&#39;, &#39;The Fall of Hyperion&#39;, &#39;The Fall of Reach&#39;, &#39;The Fall of the House of Usher &#39;, &#39;The Fall of the House of Usher and Other Writings&#39;, &#39;The Famished Road&#39;, &#39;The Far Pavilions&#39;, &#39;The Far Side Gallery 3&#39;, &#39;The Farthest Shore&#39;, &#39;The Feast of All Saints&#39;, &#39;The Federalist&#39;, &#39;The Feminine Mystique&#39;, &#39;The Field of Swords (Emperor, #3)&#39;, &#39;The Fiery Cross&#39;, &#39;The Fifth Elephant&#39;, &#39;The Final Detail&#39;, &#39;The Final Solution: A Story of Detection&#39;, &#39;The Fire Next Time&#39;, &#39;The Fires of Heaven&#39;, &#39;The Firm&#39;, &#39;The First 90 Days: Critical Success Strategies for New Leaders at All Levels&#39;, &#39;The First Four Years&#39;, &#39;The First Man in Rome&#39;, &#39;The First Part Last&#39;, &#39;The First World War&#39;, &#39;The Five Chinese Brothers&#39;, &#39;The Five Dysfunctions of a Team&#39;, &#39;The Five Love Languages of Children&#39;, &#39;The Five Love Languages: How to Express Heartfelt Commitment to Your Mate&#39;, &#39;The Five People You Meet in Heaven&#39;, &#34;The Foot Book: Dr. Seuss&#39;s Wacky Book of Opposites (Bright &amp; Early Board Books)&#34;, &#39;The Forest House&#39;, &#39;The Forever War&#39;, &#39;The Forge of God&#39;, &#39;The Forsyte Saga&#39;, &#39;The Fortress of Solitude&#39;, &#39;The Fortunes and Misfortunes of the Famous Moll Flanders&#39;, &#39;The Foundation Trilogy&#39;, &#39;The Fountainhead&#39;, &#39;The Fountains of Paradise&#39;, &#39;The Four Agreements: A Practical Guide to Personal Freedom, A Toltec Wisdom Book&#39;, &#39;The Four Loves&#39;, &#39;The Fourth Bear&#39;, &#39;The Fourth Estate&#39;, &#39;The Fourth Hand&#39;, &#39;The Fourth Protocol&#39;, &#39;The Freedom Writers Diary: How a Teacher and 150 Teens Used Writing to Change Themselves and the World Around Them&#39;, &#34;The French Lieutenant&#39;s Woman&#34;, &#39;The Friday Night Knitting Club&#39;, &#39;The Frog Princess (The Tales of the Frog Princess, #1)&#39;, &#39;The Fuck-Up&#39;, &#39;The Full Cupboard of Life&#39;, &#39;The Funhouse&#39;, &#39;The Fury&#39;, &#39;The Game&#39;, &#39;The Garden of Eden&#39;, &#39;The Garden of Rama (Rama, #3)&#39;, &#39;The Gashlycrumb Tinies&#39;, &#39;The Gatecrasher&#39;, &#39;The Gates of Rome&#39;, &#39;The Gemini Contenders&#39;, &#34;The General&#39;s Daughter&#34;, &#39;The Ghost Brigades&#39;, &#39;The Ghost Map&#39;, &#39;The Ghost Road&#39;, &#39;The Gift&#39;, &#39;The Gift of Fear: and Other Survival Signals That Protect Us from Violence&#39;, &#39;The Gift of Therapy: An Open Letter to a New Generation of Therapists and Their Patients&#39;, &#39;The Gift of the Magi&#39;, &#39;The Giraffe and the Pelly and Me&#39;, &#39;The Girl Who Loved Tom Gordon&#39;, &#39;The Girls&#39;, &#34;The Girls&#39; Guide to Hunting and Fishing&#34;, &#39;The Giver&#39;, &#39;The Giving Tree&#39;, &#39;The Glass Castle&#39;, &#39;The Glass Lake&#39;, &#39;The Glass Menagerie&#39;, &#39;The Glass Palace&#39;, &#39;The Gnostic Gospels&#39;, &#39;The Goal&#39;, &#39;The God Delusion&#39;, &#39;The God of Small Things&#39;, &#39;The Godfather&#39;, &#39;The Gods Themselves&#39;, &#39;The Gods of Mars&#39;, &#39;The Going-To-Bed Book&#39;, &#39;The Gold Coast&#39;, &#39;The Golden Fool&#39;, &#39;The Golden Notebook&#39;, &#34;The Golem&#39;s Eye&#34;, &#39;The Good Earth&#39;, &#39;The Good Guy&#39;, &#39;The Good Husband of Zebra Drive&#39;, &#39;The Good Soldier&#39;, &#39;The Good, the Bad, and the Undead&#39;, &#39;The Google Story: Inside the Hottest Business, Media, and Technology Success of Our Time&#39;, &#39;The Goose Girl&#39;, &#39;The Grapes of Wrath&#39;, &#39;The Great Book of Amber&#39;, &#39;The Great Brain&#39;, &#39;The Great Divorce&#39;, &#39;The Great Dune Trilogy&#39;, &#39;The Great Gatsby&#39;, &#39;The Great Gilly Hopkins&#39;, &#39;The Great Hunt&#39;, &#39;The Great Influenza: The Epic Story of the Deadliest Plague in History&#39;, &#39;The Great Santini&#39;, &#39;The Great Shark Hunt: Strange Tales from a Strange Time&#39;, &#39;The Great Train Robbery&#39;, &#39;The Great and Secret Show&#39;, &#39;The Greatest Generation&#39;, &#39;The Greatest Salesman in the World&#39;, &#39;The Green Mile&#39;, &#39;The Green Mile, Part 5: Night Journey&#39;, &#39;The Grey King&#39;, &#39;The Grim Grotto&#39;, &#39;The Grouchy Ladybug&#39;, &#39;The Ground Beneath Her Feet&#39;, &#39;The Guardian&#39;, &#39;The Gun Seller&#39;, &#39;The Guns of August&#39;, &#39;The Guns of Avalon&#39;, &#39;The Guns of Navarone&#39;, &#39;The Gunslinger&#39;, &#39;The Guy Not Taken: Stories&#39;, &#39;The Haj&#39;, &#34;The Halfling&#39;s Gem&#34;, &#39;The Hand of Chaos&#39;, &#39;The Hand of Oberon - The Courts of Chaos &#39;, &#34;The Handmaid&#39;s Tale&#34;, &#39;The Happiest Baby on the Block&#39;, &#39;The Happy Prince and The House of Pomegranates&#39;, &#39;The Hard Way&#39;, &#39;The Harlequin (Anita Blake, Vampire Hunter, #15)&#39;, &#39;The Haunted Mask&#39;, &#39;The Haunting οf Hill House&#39;, &#39;The Healer&#39;, &#39;The Heart is a Lonely Hunter&#39;, &#39;The Heart of a Woman&#39;, &#39;The Heart of the Matter&#39;, &#39;The Heavenly Man: The Remarkable True Story of Chinese Christian Brother Yun&#39;, &#39;The Hedge Knight&#39;, &#39;The Hellbound Heart&#39;, &#39;The Hero with a Thousand Faces&#39;, &#39;The Hidden City&#39;, &#39;The Hidden Messages in Water&#39;, &#39;The Hidden Staircase (Nancy Drew Mystery Stories, #2)&#39;, &#39;The Hiding Place&#39;, &#39;The High King &#39;, &#39;The High Window&#39;, &#34;The Highlander&#39;s Touch &#34;, &#39;The Historian&#39;, &#39;The History of Henry the Fourth&#39;, &#39;The History of Love&#39;, &#39;The History of Tom Jones, a Foundling&#39;, &#39;The History of the Decline and Fall of the Roman Empire&#39;, &#39;The History of the Hobbit, Part One: Mr. Baggins&#39;, &#34;The Hitchhiker&#39;s Guide to the Galaxy&#34;, &#34;The Hitchhiker&#39;s Guide to the Galaxy: The Trilogy of Four (Hitchhiker&#39;s Guide, #1-4)&#34;, &#39;The Hobbit&#39;, &#39;The Hobbit and The Lord of the Rings&#39;, &#39;The Hobbit or There and Back Again&#39;, &#39;The Holiness of God&#39;, &#39;The Hollow Hills&#39;, &#39;The Holy Blood and the Holy Grail&#39;, &#39;The Honk and Holler Opening Soon&#39;, &#39;The Honor of the Queen&#39;, &#39;The Honourable Schoolboy&#39;, &#39;The Horse Whisperer&#39;, &#39;The Host&#39;, &#39;The Hostile Hospital&#39;, &#39;The Hot Zone: The Terrifying True Story of the Origins of the Ebola Virus&#39;, &#39;The Hotel New Hampshire&#39;, &#39;The Hound of the Baskervilles&#39;, &#39;The Hours&#39;, &#39;The House at Pooh Corner&#39;, &#39;The House of God&#39;, &#39;The House of Mirth&#39;, &#39;The House of Thunder&#39;, &#39;The House of the Seven Gables&#39;, &#39;The House on Mango Street&#39;, &#39;The Human Stain&#39;, &#39;The Hundred Dresses&#39;, &#39;The Hundred Secret Senses&#39;, &#39;The Hungry Tide&#39;, &#39;The Hunt for Red October&#39;, &#39;The Husband&#39;, &#39;The Icarus Agenda&#39;, &#39;The Ice Limit&#39;, &#39;The Ice Queen&#39;, &#39;The Icebound Land&#39;, &#34;The Icewind Dale Trilogy Collector&#39;s Edition (Forgotten Realms: Icewind Dale, #1-3)&#34;, &#34;The Idiot Girls&#39; Action-Adventure Club: True Tales from a Magnificent and Clumsy Life&#34;, &#39;The Illearth War&#39;, &#39;The Illuminatus! Trilogy&#39;, &#39;The Illustrated Man&#39;, &#39;The Illustrated Mum&#39;, &#39;The Importance of Being Earnest&#39;, &#39;The Incredible Journey&#39;, &#39;The Indian in the Cupboard&#39;, &#39;The Indispensable Calvin and Hobbes: A Calvin and Hobbes Treasury&#39;, &#39;The Indwelling: The Beast Takes Possession&#39;, &#39;The Informers&#39;, &#39;The Inheritance of Loss&#39;, &#39;The Inimitable Jeeves &#39;, &#39;The Innocent&#39;, &#39;The Innocent Man&#39;, &#34;The Innovator&#39;s Dilemma: The Revolutionary Book that Will Change the Way You Do Business (Collins Business Essentials)&#34;, &#39;The Intelligent Investor&#39;, &#39;The Interpretation of Murder&#39;, &#39;The Invention of Hugo Cabret&#39;, &#39;The Invisible Man&#39;, &#39;The Irresistible Revolution: Living as an Ordinary Radical&#39;, &#39;The Island&#39;, &#39;The Island of Dr. Moreau&#39;, &#39;The Jane Austen Book Club&#39;, &#39;The Jester&#39;, &#39;The Jesus I Never Knew&#39;, &#39;The Johnstown Flood&#39;, &#39;The Jordan Rules&#39;, &#39;The Journals of Sylvia Plath&#39;, &#39;The Joy Luck Club&#39;, &#39;The Joy of Cooking&#39;, &#39;The Jungle&#39;, &#39;The Jungle Book&#39;, &#39;The Jungle Books&#39;, &#39;The Kalahari Typing School for Men&#39;, &#39;The Keep&#39;, &#39;The Keep &#39;, &#39;The Key to Midnight&#39;, &#39;The Key to Rebecca&#39;, &#39;The Kill Artist&#39;, &#39;The Killer Angels&#39;, &#39;The Killer Inside Me&#39;, &#39;The Killing Dance (Anita Blake, Vampire Hunter, #6)&#39;, &#39;The Killing Game&#39;, &#39;The Killing Hour&#39;, &#39;The King in Yellow&#39;, &#39;The King of Attolia&#39;, &#39;The King of Torts&#39;, &#34;The King&#39;s Buccaneer&#34;, &#39;The Kingdom Keepers&#39;, &#34;The Kitchen God&#39;s Wife&#34;, &#39;The Kite Runner &#39;, &#39;The Knight at Dawn (Magic Tree House, #2)&#39;, &#34;The Know-It-All: One Man&#39;s Humble Quest to Become the Smartest Person in the World&#34;, &#39;The Knowledge of the Holy: The Attributes of God: Their Meaning in the Christian Life&#39;, &#39;The Known World&#39;, &#39;The Ladies of Grace Adieu and Other Stories&#39;, &#39;The Lady and the Unicorn&#39;, &#39;The Lady in the Lake&#39;, &#39;The Lady of Shalott&#39;, &#39;The Lake House&#39;, &#39;The Lake of Souls (Cirque Du Freak, #10)&#39;, &#39;The Language Instinct: How the Mind Creates Language&#39;, &#39;The Last Battle&#39;, &#39;The Last Colony&#39;, &#39;The Last Continent&#39;, &#39;The Last Coyote&#39;, &#39;The Last Days of Dogtown&#39;, &#39;The Last Don&#39;, &#39;The Last Full Measure&#39;, &#39;The Last Hero&#39;, &#39;The Last Juror&#39;, &#39;The Last Kingdom&#39;, &#39;The Last Picture Show&#39;, &#39;The Last Precinct&#39;, &#39;The Last Sin Eater&#39;, &#39;The Last Summer (of You and Me)&#39;, &#39;The Last Templar&#39;, &#39;The Last Time They Met&#39;, &#39;The Last Unicorn&#39;, &#39;The Last Wife of Henry VIII&#39;, &#39;The Last of the Mohicans: A Narrative of 1757&#39;, &#39;The Lathe of Heaven&#39;, &#39;The Laughing Corpse&#39;, &#39;The League of Extraordinary Gentlemen, Vol. 2&#39;, &#39;The League of Extraordinary Gentlemen, Vol. I&#39;, &#39;The Left Hand of Darkness&#39;, &#39;The Legacy&#39;, &#39;The Legend of Huma (Dragonlance: Heroes #1)&#39;, &#39;The Legend of Luke&#39;, &#39;The Legend of Sleepy Hollow&#39;, &#39;The Letters of Vincent van Gogh&#39;, &#34;The Liars&#39; Club: A Memoir&#34;, &#39;The Lies of Locke Lamora&#39;, &#39;The Life and Adventures of Martin Chuzzlewit&#39;, &#39;The Life and Opinions of Tristram Shandy, Gentleman&#39;, &#39;The Life and Strange Surprising Adventures of Robinson Crusoe of York, Mariner&#39;, &#39;The Life and Times of The Thunderbolt Kid: A Memoir&#39;, &#39;The Life of Elizabeth I&#39;, &#39;The Light Fantastic&#39;, &#39;The Lightning Thief&#39;, &#39;The Lincoln Lawyer &#39;, &#39;The Line of Beauty&#39;, &#39;The Lion King (Little Golden Book)&#39;, &#34;The Lion&#39;s Game&#34;, &#39;The Lion, the Witch and the Wardrobe&#39;, &#39;The Lions of Al-Rassan&#39;, &#39;The Little Engine That Could&#39;, &#39;The Little Friend&#39;, &#39;The Little House&#39;, &#39;The Little House Collection&#39;, &#39;The Little Lady Agency&#39;, &#39;The Little Mouse, the Red Ripe Strawberry, and the Big Hungry Bear&#39;, &#39;The Little Old Lady Who Was Not Afraid of Anything&#39;, &#39;The Little Red Hen (Little Golden Book)&#39;, &#39;The Lives of Christopher Chant&#39;, &#39;The Lone Drow&#39;, &#39;The Lone Ranger and Tonto Fistfight in Heaven&#39;, &#39;The Long Dark Tea-Time of the Soul&#39;, &#39;The Long Goodbye&#39;, &#39;The Long Hard Road Out of Hell&#39;, &#39;The Long Patrol&#39;, &#39;The Long Tail: Why the Future of Business Is Selling Less of More&#39;, &#39;The Long Walk&#39;, &#39;The Long Walk: The True Story of a Trek to Freedom&#39;, &#39;The Long Way Home&#39;, &#39;The Long Winter (Little House, #6)&#39;, &#39;The Longest Day&#39;, &#39;The Looking Glass Wars&#39;, &#39;The Looming Tower: Al-Qaeda and the Road to 9/11&#39;, &#39;The Lorax&#39;, &#39;The Lord God Made Them All&#39;, &#39;The Lord of the Rings&#39;, &#39;The Lords of Discipline&#39;, &#39;The Lords of the North&#39;, &#39;The Lost City of Faar&#39;, &#39;The Lost Colony&#39;, &#39;The Lost Continent: Travels in Small-Town America&#39;, &#39;The Lost Painting: The Quest for a Caravaggio Masterpiece&#39;, &#39;The Lost World&#39;, &#39;The Lost World &#39;, &#39;The Lottery: Adventures of the Demon Lover&#39;, &#39;The Love Song of J. Alfred Prufrock and Other Poems&#39;, &#39;The Lovely Bones&#39;, &#39;The Lucifer Effect: Understanding How Good People Turn Evil&#39;, &#39;The Lunatic Cafe&#39;, &#39;The Lust Lizard of Melancholy Cove&#39;, &#39;The Mad Ship&#39;, &#39;The Madonnas of Leningrad&#39;, &#39;The Magic Faraway Tree&#39;, &#39;The Magic of Recluce&#39;, &#39;The Magic of Thinking Big&#39;, &#39;The Magus&#39;, &#39;The Making of the Atomic Bomb&#39;, &#39;The Maltese Falcon&#39;, &#39;The Mambo Kings Play Songs of Love&#39;, &#39;The Mammoth Hunters&#39;, &#39;The Man Who Listens to Horses&#39;, &#39;The Man Who Mistook His Wife for a Hat and Other Clinical Tales&#39;, &#39;The Man Who Was Thursday - A Nightmare&#39;, &#39;The Man from St. Petersburg&#39;, &#39;The Man in the Brown Suit&#39;, &#39;The Man in the High Castle&#39;, &#39;The Many Lives &amp; Secret Sorrows of Josephine B.&#39;, &#39;The Map That Changed the World: William Smith and the Birth of Modern Geology&#39;, &#39;The Mark: The Beast Rules the World&#39;, &#39;The Martian Chronicles&#39;, &#39;The Mask&#39;, &#39;The Masque of the Red Death&#39;, &#39;The Master Butchers Singing Club&#39;, &#39;The MasterHarper of Pern&#39;, &#39;The Mastery of Love: A Practical Guide to the Art of Relationship (Toltec Wisdom Book)&#39;, &#39;The Matarese Circle&#39;, &#39;The Matlock Paper&#39;, &#39;The Mauritius Command&#39;, &#39;The Mayor of Casterbridge&#39;, &#39;The Mediterranean Caper&#39;, &#39;The Melancholy Death of Oyster Boy and Other Stories&#39;, &#39;The Memoirs of Cleopatra&#39;, &#39;The Memoirs of Sherlock Holmes&#39;, &#34;The Memory Keeper&#39;s Daughter&#34;, &#39;The Memory of Earth&#39;, &#39;The Mephisto Club&#39;, &#39;The Merchant of Death&#39;, &#39;The Merchant of Venice&#39;, &#39;The Mermaid Chair&#39;, &#39;The Merry Adventures of Robin Hood&#39;, &#39;The Messenger&#39;, &#39;The Midwich Cuckoos&#39;, &#34;The Midwife&#39;s Apprentice&#34;, &#39;The Mill on the Floss&#39;, &#34;The Millionaire Next Door: The Surprising Secrets of America&#39;s Wealthy&#34;, &#39;The Minority Report&#39;, &#39;The Miracle Worker&#39;, &#39;The Miracle of Forgiveness&#39;, &#39;The Miracle of Mindfulness: A Manual on Meditation&#39;, &#39;The Miraculous Journey of Edward Tulane&#39;, &#34;The Mirror Crack&#39;d from Side to Side&#34;, &#39;The Miserable Mill&#39;, &#39;The Missing Piece&#39;, &#39;The Missing Piece Meets the Big O&#39;, &#39;The Mistress of Spices&#39;, &#39;The Mists of Avalon&#39;, &#39;The Monk&#39;, &#39;The Monk Who Sold His Ferrari: A Fable About Fulfilling Your Dreams &amp; Reaching Your Destiny&#39;, &#39;The Monkey Wrench Gang (Monkey Wrench Gang, #1)&#39;, &#39;The Monster at the End of This Book&#39;, &#39;The Moon Is Down&#39;, &#39;The Moon and Sixpence&#39;, &#39;The Moon is a Harsh Mistress&#39;, &#39;The Moonstone&#39;, &#34;The Moor&#39;s Last Sigh&#34;, &#39;The Moosewood Cookbook: Recipes from Moosewood Restaurant, Ithaca, New York&#39;, &#39;The Most Dangerous Game&#39;, &#34;The Mote in God&#39;s Eye&#34;, &#39;The Mother Tongue: English and How It Got That Way&#39;, &#39;The Mouse and the Motorcycle&#39;, &#39;The Moviegoer&#39;, &#39;The Moving Finger&#39;, &#39;The Mummy&#39;, &#39;The Murder of Roger Ackroyd&#39;, &#39;The Murder on the Links&#39;, &#39;The Mysteries of Pittsburgh&#39;, &#39;The Mysterious Affair at Styles&#39;, &#39;The Mystery of the Blue Train&#39;, &#39;The Naked Face&#39;, &#39;The Naked God &#39;, &#39;The Naked Lunch&#39;, &#39;The Naked Sun&#39;, &#39;The Naked and the Dead&#39;, &#39;The Name of the Wind&#39;, &#39;The Namesake&#39;, &#39;The Nanny&#39;, &#39;The Nanny Diaries&#39;, &#39;The Narrows&#39;, &#39;The Nasty Bits: Collected Varietal Cuts, Useable Trim, Scraps, and Bones&#39;, &#34;The Nazi Officer&#39;s Wife: How One Jewish Woman Survived The Holocaust&#34;, &#39;The Necklace and Other Short Stories&#39;, &#39;The Negotiator&#39;, &#39;The Never War&#39;, &#39;The New Best Recipe: All-New Edition with 1,000 Recipes&#39;, &#39;The New York Trilogy&#39;, &#39;The Night Watch&#39;, &#39;The Night is for Hunting&#39;, &#39;The Nine: Inside the Secret World of the Supreme Court&#39;, &#34;The No. 1 Ladies&#39; Detective Agency &#34;, &#39;The Notebook&#39;, &#39;The Oath&#39;, &#39;The Odd Couple&#39;, &#39;The Odessa File&#39;, &#39;The Old Curiosity Shop&#39;, &#39;The Old Man and the Sea&#39;, &#34;The Omnivore&#39;s Dilemma&#34;, &#39;The Once and Future King&#39;, &#39;The One Minute Manager&#39;, &#39;The One Tree&#39;, &#39;The Onion Field&#39;, &#39;The Opal Deception&#39;, &#39;The Orc King&#39;, &#39;The Other Boleyn Girl&#39;, &#39;The Other Side of Dawn&#39;, &#39;The Other Side of Midnight&#39;, &#39;The Other Side of the Story&#39;, &#39;The Other Wind&#39;, &#39;The Other Woman&#39;, &#39;The Outsiders&#39;, &#39;The Overlook&#39;, &#39;The Pact&#39;, &#39;The Painted Veil&#39;, &#39;The Pale Rider&#39;, &#39;The Paper Bag Princess&#39;, &#39;The Paradox of Choice: Why More Is Less&#39;, &#39;The Partly Cloudy Patriot&#39;, &#39;The Partner&#39;, &#39;The Passion&#39;, &#39;The Passion of Artemisia&#39;, &#39;The Past through Tomorrow&#39;, &#39;The Path of Daggers&#39;, &#39;The Path to Power&#39;, &#39;The Patron Saint of Liars&#39;, &#39;The Peacegiver: How Christ Offers to Heal Our Hearts and Homes&#39;, &#39;The Pearl of the World&#39;, &#39;The Pearls of Lutra&#39;, &#39;The Pelican Brief&#39;, &#39;The Penderwicks: A Summer Tale of Four Sisters, Two Rabbits, and a Very Interesting Boy&#39;, &#39;The Penelopiad&#39;, &#39;The Penultimate Peril&#39;, &#39;The People of Sparks&#39;, &#39;The Perfect Husband&#39;, &#39;The Perfect Storm: A True Story of Men Against the Sea&#39;, &#39;The Perks of Being a Wallflower&#39;, &#39;The Persian Pickle Club&#39;, &#39;The Persuader&#39;, &#39;The Phantom Menace&#39;, &#39;The Phantom Tollbooth&#39;, &#39;The Philosophy of Andy Warhol (From A to B and Back Again)&#39;, &#39;The Physician&#39;, &#39;The Picture of Dorian Gray&#39;, &#39;The Pigman&#39;, &#39;The Pilgrims of Rayne&#39;, &#39;The Pillars of Creation&#39;, &#39;The Pillars of the Earth&#39;, &#34;The Pilot&#39;s Wife&#34;, &#39;The Pit and the Pendulum&#39;, &#39;The Places In Between&#39;, &#39;The Places That Scare You: A Guide to Fearlessness in Difficult Times&#39;, &#39;The Plains of Passage&#39;, &#39;The Player of Games&#39;, &#39;The Pleasure of My Company&#39;, &#39;The Plot Against America&#39;, &#39;The Poet&#39;, &#39;The Poetry of Pablo Neruda&#39;, &#39;The Poisonwood Bible&#39;, &#39;The Poky Little Puppy (a Little Golden Book)&#39;, &#39;The Polar Express&#39;, &#39;The Portrait of a Lady&#39;, &#39;The Post-Birthday World &#39;, &#39;The Posthumous Papers of the Pickwick Club&#39;, &#39;The Postman&#39;, &#39;The Postman Always Rings Twice &#39;, &#39;The Power That Preserves&#39;, &#39;The Power and the Glory&#39;, &#39;The Power of Myth&#39;, &#39;The Power of Now&#39;, &#39;The Power of One&#39;, &#39;The Power of a Praying Wife&#39;, &#39;The Practice of the Presence of God&#39;, &#39;The Pragmatic Programmer: From Journeyman to Master&#39;, &#39;The Prayer of Jabez: Breaking Through to the Blessed Life&#39;, &#39;The Prestige&#39;, &#39;The Prime of Miss Jean Brodie &#39;, &#39;The Prince and the Pauper&#39;, &#39;The Prince of Tides&#39;, &#39;The Princess Bride&#39;, &#39;The Princess Diaries&#39;, &#39;The Princess and the Goblin&#39;, &#39;The Prisoner of Zenda&#39;, &#39;The Prize Winner of Defiance, Ohio: How My Mother Raised 10 Kids on 25 Words or Less&#39;, &#39;The Problem of Pain&#39;, &#39;The Prodigal Daughter&#39;, &#39;The Professor&#39;, &#39;The Promise&#39;, &#39;The Prophet&#39;, &#39;The Prophet of Yonwood&#39;, &#39;The Psychology of Everyday Things&#39;, &#39;The Puppet Masters&#39;, &#39;The Purpose Driven Life: What on Earth am I Here For?&#39;, &#39;The Pursuit of Happyness&#39;, &#39;The Pursuit of Holiness&#39;, &#39;The Queen of Attolia&#39;, &#39;The Queen of the Damned&#39;, &#34;The Queen&#39;s Fool&#34;, &#39;The Quickie&#39;, &#39;The Quiet American&#39;, &#39;The Quiet Game&#39;, &#39;The Ragamuffin Gospel: Good News for the Bedraggled, Beat-Up, and Burnt Out&#39;, &#39;The Railway Children&#39;, &#39;The Rainbow&#39;, &#39;The Rainmaker&#39;, &#39;The Rape of Nanking: The Forgotten Holocaust of World War II&#39;, &#39;The Rapture of Canaan&#39;, &#39;The Raven&#39;, &#39;The Raven and Other Poems&#39;, &#39;The Raw Shark Texts&#39;, &#34;The Razor&#39;s Edge&#34;, &#39;The Reality Bug&#39;, &#39;The Reality Dysfunction&#39;, &#39;The Realm of Possibility&#39;, &#39;The Realms of the Gods (Immortals, #4)&#39;, &#39;The Red Badge of Courage&#39;, &#39;The Red Pony&#39;, &#39;The Red Queen: Sex and the Evolution of Human Nature&#39;, &#39;The Red Tent&#39;, &#39;The Redemption of Althalus&#39;, &#39;The Reef&#39;, &#39;The Regulators&#39;, &#39;The Reluctant Fundamentalist&#39;, &#39;The Remains of the Day&#39;, &#39;The Remnant: On the Brink of Armageddon&#39;, &#39;The Renegades of Pern&#39;, &#39;The Reptile Room&#39;, &#39;The Rescue&#39;, &#39;The Restaurant at the End of the Universe&#39;, &#39;The Return of Sherlock Holmes&#39;, &#39;The Return of the King&#39;, &#39;The Return of the Native&#39;, &#39;The Return of the Prodigal Son: A Story of Homecoming&#39;, &#39;The Revenge of the Baby-Sat: A Calvin and Hobbes Collection&#39;, &#39;The Right Stuff&#39;, &#39;The Rime of the Ancient Mariner&#39;, &#39;The Ringworld Engineers &#39;, &#39;The Rise and Fall of the Third Reich: A History of Nazi Germany&#39;, &#39;The Rise of Endymion&#39;, &#39;The Rise of Theodore Roosevelt &#39;, &#39;The Rising : Antichrist is Born : Before They Were Left Behind&#39;, &#39;The River&#39;, &#39;The River Why&#39;, &#34;The River of Doubt: Theodore Roosevelt&#39;s Darkest Journey&#34;, &#39;The Road&#39;, &#39;The Road Less Traveled: A New Psychology of Love, Traditional Values, and Spiritual Growth&#39;, &#39;The Road to Serfdom&#39;, &#34;The Road to the Dark Tower: Exploring Stephen King&#39;s Magnum Opus&#34;, &#39;The Robber Bride&#39;, &#39;The Robe&#39;, &#39;The Robots of Dawn&#39;, &#39;The Romanov Prophecy&#39;, &#39;The Ruby Knight&#39;, &#39;The Ruby in the Smoke&#39;, &#39;The Ruins&#39;, &#39;The Ruins of Gorlan&#39;, &#39;The Rule of Four&#39;, &#39;The Rules of Attraction&#39;, &#39;The Rum Diary&#39;, &#39;The Runaway Bunny&#39;, &#39;The Runaway Jury&#39;, &#39;The Running Man&#39;, &#39;The Russia House&#39;, &#39;The Sacred Romance Drawing Closer To The Heart Of God&#39;, &#39;The Sacrilege: The Antichrist Takes the Throne&#39;, &#39;The Saga of the Swamp Thing, Vol 20 - 27&#39;, &#39;The Saggy Baggy Elephant (Little Golden Book)&#39;, &#39;The Salmon of Doubt: Hitchhiking the Galaxy One Last Time&#39;, &#34;The Samurai&#39;s Garden&#34;, &#39;The Sandman: A Game of You&#39;, &#39;The Sandman: Brief Lives&#39;, &#39;The Sandman: Dream Country&#39;, &#39;The Sandman: Endless Nights&#39;, &#39;The Sandman: Fables and Reflections&#39;, &#39;The Sandman: Season of Mists&#39;, &#39;The Sandman: The Dream Hunters&#39;, &#39;The Sandman: The Kindly Ones&#39;, &#39;The Sandman: The Wake&#39;, &#34;The Sandman: Worlds&#39; End&#34;, &#39;The Sands of Time&#39;, &#39;The Sapphire Rose &#39;, &#39;The Satanic Verses&#39;, &#39;The Saving Graces&#39;, &#39;The Scar&#39;, &#39;The Scarlatti Inheritance&#39;, &#39;The Scarlet Feather&#39;, &#39;The Scarlet Letter&#39;, &#39;The Scarlet Pimpernel&#39;, &#39;The Scarlet Thread &#39;, &#39;The Sea&#39;, &#39;The Sea Wolf&#39;, &#39;The Sea of Monsters&#39;, &#39;The Sea, the Sea&#39;, &#39;The Search&#39;, &#39;The Second Assistant: A Tale from the Bottom of the Hollywood Ladder&#39;, &#39;The Second Summer of the Sisterhood&#39;, &#39;The Secret&#39;, &#39;The Secret Adversary&#39;, &#39;The Secret Agent: A Simple Tale&#39;, &#39;The Secret Art of Dr. Seuss&#39;, &#39;The Secret Diaries of Miss Miranda Cheever&#39;, &#39;The Secret Diary of Adrian Mole, Aged 13 3/4&#39;, &#39;The Secret Garden&#39;, &#39;The Secret History&#39;, &#39;The Secret Hour&#39;, &#39;The Secret Life of Bees&#39;, &#39;The Secret River&#39;, &#39;The Secret Servant&#39;, &#39;The Secret of the Old Clock (Nancy Drew Mystery Stories, #1)&#39;, &#39;The Seeress of Kell&#39;, &#39;The Selfish Gene&#39;, &#34;The Seven Principles for Making Marriage Work: A Practical Guide from the Country&#39;s Foremost Relationship Expert&#34;, &#39;The Seven Storey Mountain&#39;, &#39;The Seven-Percent Solution: Being a Reprint from the Reminiscences of John H. Watson, MD&#39;, &#39;The Seventh Gate&#39;, &#39;The Seventh Scroll&#39;, &#39;The Sex Lives of Cannibals: Adrift in the Equatorial Pacific&#39;, &#39;The Shadow Rising &#39;, &#39;The Shawshank Redemption&#39;, &#39;The Sheep-Pig&#39;, &#39;The Shell Seekers&#39;, &#39;The Sheltering Sky&#39;, &#39;The Shelters of Stone&#39;, &#39;The Shining&#39;, &#39;The Shining Ones&#39;, &#39;The Ship Who Sang&#39;, &#39;The Shipping News&#39;, &#39;The Shock Doctrine: The Rise of Disaster Capitalism&#39;, &#39;The Shock of the New&#39;, &#39;The Shop on Blossom Street&#39;, &#39;The Short Stories of F. Scott Fitzgerald&#39;, &#39;The Short Victorious War&#39;, &#39;The Sicilian&#39;, &#39;The Sight&#39;, &#39;The Sign of Four&#39;, &#39;The Sign of the Beaver&#39;, &#39;The Silence of the Lambs&#39;, &#39;The Silent Blade (Paths of Darkness #1)&#39;, &#39;The Silmarillion&#39;, &#39;The Silver Chair&#39;, &#39;The Simple Truth&#39;, &#39;The Sirens of Titan&#39;, &#39;The Sisterhood of the Traveling Pants&#39;, &#39;The Six Wives of Henry VIII&#39;, &#39;The Sketch Book of Geoffrey Crayon, Gent&#39;, &#34;The Skin I&#39;m In&#34;, &#39;The Sky is Falling&#39;, &#39;The Sleeping Doll&#39;, &#39;The Slippery Slope&#39;, &#39;The Smartest Guys in the Room: The Amazing Rise and Scandalous Fall of Enron&#39;, &#39;The Smoke Jumper&#39;, &#39;The Sneetches and Other Stories&#39;, &#39;The Snow Leopard&#39;, &#39;The Snowman&#39;, &#39;The Snows of Kilimanjaro and Other Stories&#39;, &#39;The Snowy Day&#39;, &#39;The Sociopath Next Door&#39;, &#39;The Souls of Black Folk&#39;, &#39;The Sound and the Fury&#39;, &#39;The Source&#39;, &#39;The Source of Magic (Xanth, #2)&#39;, &#39;The Space Between Us&#39;, &#39;The Sparrow&#39;, &#39;The Spellman Files&#39;, &#39;The Spine of the World (Paths of Darkness #2)&#39;, &#39;The Spirit Catches You and You Fall Down: A Hmong Child, Her American Doctors, and the Collision of Two Cultures&#39;, &#34;The Spook&#39;s Apprentice (The Last Apprentice / Wardstone Chronicles, #1)&#34;, &#39;The Sportswriter&#39;, &#39;The Spy Who Came In from the Cold&#39;, &#39;The Stainless Steel Rat&#39;, &#39;The Stand&#39;, &#39;The Stars My Destination&#39;, &#39;The Stars Shine Down&#39;, &#39;The Starter Wife&#39;, &#39;The Stepford Wives&#39;, &#39;The Stinky Cheese Man and Other Fairly Stupid Tales&#39;, &#39;The Stone Diaries&#39;, &#39;The Stone Monkey&#39;, &#39;The Stories of John Cheever&#39;, &#39;The Story About Ping&#39;, &#39;The Story of B: An Adventure of the Mind and Spirit&#39;, &#39;The Story of Ferdinand&#39;, &#39;The Story of My Life&#39;, &#39;The Story of Philosophy&#39;, &#39;The Story of Tracy Beaker&#39;, &#39;The Strange Case of Dr Jekyll and Mr Hyde&#39;, &#39;The Strange Case of Dr. Jekyll and Mr. Hyde &#39;, &#39;The Strange Case of Dr. Jekyll and Mr. Hyde and Other Tales of Terror &#39;, &#39;The Stranger Beside Me&#39;, &#39;The Street Lawyer&#39;, &#39;The Structure of Scientific Revolutions&#39;, &#39;The Struggle&#39;, &#39;The Stupidest Angel: A Heartwarming Tale of Christmas Terror&#39;, &#39;The Subterraneans&#39;, &#39;The Subtle Knife&#39;, &#39;The Sum of All Fears&#39;, &#39;The Sum of All Men&#39;, &#39;The Summer Tree&#39;, &#39;The Summons&#39;, &#39;The Sun Also Rises&#39;, &#39;The Sunday Philosophy Club &#39;, &#39;The Supernaturalist&#39;, &#39;The Surgeon&#39;, &#39;The Surgeon of Crowthorne: a tale of murder, madness &amp; the love of words&#39;, &#39;The Sweet Far Thing&#39;, &#34;The Sweet Potato Queens&#39; Book of Love&#34;, &#39;The Sword of Shannara&#39;, &#39;The Sword of Shannara Trilogy&#39;, &#39;The System of the World&#39;, &#39;The Taking&#39;, &#39;The Tale of Mrs. Tiggy-Winkle&#39;, &#39;The Tale of Peter Rabbit&#39;, &#39;The Tale of the Body Thief&#39;, &#39;The Talented Mr. Ripley&#39;, &#39;The Talisman&#39;, &#39;The Talismans of Shannara&#39;, &#39;The Taming of the Shrew&#39;, &#39;The Tao of Physics: An Exploration of the Parallels Between Modern Physics and Eastern Mysticism&#39;, &#39;The Tao of Pooh&#39;, &#39;The Teachings of Don Juan: A Yaqui Way of Knowledge&#39;, &#39;The Teeth of the Tiger&#39;, &#39;The Tell-Tale Heart&#39;, &#39;The Tempest&#39;, &#39;The Templar Legacy&#39;, &#39;The Temple of My Familiar&#39;, &#39;The Tenant of Wildfell Hall&#39;, &#39;The Tender Bar: A Memoir&#39;, &#39;The Tenth Circle&#39;, &#39;The Tenth Insight &#39;, &#39;The Tenth Justice&#39;, &#39;The Terminal Man&#39;, &#39;The Terror&#39;, &#39;The Testament&#39;, &#39;The Thief&#39;, &#39;The Thief of Always&#39;, &#39;The Thin Man&#39;, &#39;The Things They Carried&#39;, &#39;The Third Chimpanzee: The Evolution and Future of the Human Animal&#39;, &#39;The Third Day, The Frost&#39;, &#39;The Third Option&#39;, &#39;The Third Policeman&#39;, &#39;The Third Secret&#39;, &#39;The Third Twin&#39;, &#39;The Third Victim&#39;, &#39;The Thirteenth Tale&#39;, &#39;The Thorn Birds&#39;, &#34;The Thousand Orcs (Hunter&#39;s Blades #1)&#34;, &#39;The Three Stigmata of Palmer Eldritch&#39;, &#39;The Tiger Rising&#39;, &#39;The Time Machine&#39;, &#39;The Time Machine and The Invisible Man&#39;, &#34;The Time Traveler&#39;s Wife&#34;, &#39;The Tipping Point: How Little Things Can Make a Big Difference&#39;, &#34;The Titan&#39;s Curse&#34;, &#39;The Tombs of Atuan&#39;, &#39;The Tommyknockers&#39;, &#39;The Tortilla Curtain&#39;, &#39;The Total Money Makeover: A Proven Plan for Financial Fitness&#39;, &#39;The Tragedie of Antony and Cleopatra&#39;, &#39;The Tragedie of King Lear&#39;, &#39;The Tragedy of Julius Caesar&#39;, &#39;The Tragedy of King Richard the Third&#39;, &#39;The Tragedy of Macbeth&#39;, &#39;The Tragedy of Othello, The Moor of Venice&#39;, &#34;The Tragedy of Puddn&#39;head Wilson&#34;, &#39;The Tragical History of the Life and Death of Doctor Faustus&#39;, &#39;The Tragicall Historie of Hamlet, Prince of Denmark&#39;, &#39;The True Confessions of Charlotte Doyle&#39;, &#39;The True Story of the Three Little Pigs&#39;, &#39;The Trumpet of the Swan&#39;, &#39;The Truth&#39;, &#39;The Truth About Forever&#39;, &#34;The Truth Seeker (O&#39;Malley #3)&#34;, &#39;The Turn of the Screw&#39;, &#39;The Twelfth Card&#39;, &#39;The Twentieth Wife&#39;, &#39;The Twenty-One Balloons&#39;, &#39;The Twits&#39;, &#39;The Two Princesses of Bamarre&#39;, &#34;The Two Swords (Hunter&#39;s Blades #3)&#34;, &#39;The Two Towers&#39;, &#39;The Uglies Trilogy (Uglies, #1-3)&#39;, &#34;The Ultimate Hitchhiker&#39;s Guide: Five Complete Novels and One Story&#34;, &#39;The Uncommon Reader &#39;, &#39;The Undercover Economist: Exposing Why the Rich Are Rich, the Poor Are Poor--and Why You Can Never Buy a Decent Used Car!&#39;, &#39;The Undomestic Goddess&#39;, &#39;The Universe in a Nutshell&#39;, &#39;The Unlikely Spy&#39;, &#39;The Unusual Suspects&#39;, &#39;The Uplift War&#39;, &#39;The Vagina Monologues&#39;, &#39;The Valley of Fear&#39;, &#39;The Valley of Horses&#39;, &#39;The Vampire Armand&#39;, &#39;The Vampire Lestat&#39;, &#39;The Vampire Prince (Cirque Du Freak, #6)&#39;, &#34;The Vampire&#39;s Assistant (Cirque du Freak, #2) &#34;, &#39;The Vanished Man&#39;, &#39;The Vanishing Act of Esme Lennox&#39;, &#39;The Velveteen Rabbit&#39;, &#39;The Very Busy Spider &#39;, &#39;The Very Hungry Caterpillar&#39;, &#39;The Very Quiet Cricket&#39;, &#39;The View from Saturday&#39;, &#39;The Vile Village&#39;, &#39;The Villa&#39;, &#39;The Virgin Blue&#39;, &#39;The Virgin Suicides&#39;, &#34;The Virgin&#39;s Lover&#34;, &#39;The Virtue of Selfishness: A New Concept of Egoism&#39;, &#39;The Vision&#39;, &#39;The Visitation&#39;, &#39;The Voice of the Night &#39;, &#39;The Vor Game&#39;, &#39;The Voyage of the Dawn Treader&#39;, &#39;The Voyages of Doctor Dolittle&#39;, &#39;The Walking Dead 6&#39;, &#39;The Walking Dead, Vol. 1: Days Gone Bye&#39;, &#39;The Walking Dead, Vol. 2: Miles Behind Us&#39;, &#39;The Walking Dead, Vol. 3: Safety Behind Bars&#39;, &#34;The Walking Dead, Vol. 4: The Heart&#39;s Desire&#34;, &#39;The Walking Dead, Vol. 5: The Best Defense&#39;, &#39;The Walking Dead. Book Two&#39;, &#39;The Wandering Fire&#39;, &#39;The War of Art: Break Through the Blocks and Win Your Inner Creative Battles&#39;, &#39;The War of the Worlds&#39;, &#34;The Warrior&#39;s Apprentice&#34;, &#39;The Wasp Factory&#39;, &#39;The Waste Land&#39;, &#39;The Waste Land and Other Poems&#39;, &#39;The Waste Lands&#39;, &#39;The Water is Wide&#39;, &#39;The Water-Method Man&#39;, &#39;The Watsons Go to Birmingham - 1963&#39;, &#39;The Wave&#39;, &#39;The Waves&#39;, &#39;The Way of Zen&#39;, &#39;The Way the Crow Flies&#39;, &#39;The Wedding&#39;, &#39;The Wednesday Wars&#39;, &#39;The Wee Free Men&#39;, &#39;The Weight of Glory&#39;, &#39;The Weight of Water&#39;, &#39;The Well of Lost Plots&#39;, &#39;The Westing Game&#39;, &#39;The Wheel of Darkness (Pendergast, #8)&#39;, &#39;The Wheel of Time: Boxed Set (Wheel of Time, #1-8)&#39;, &#39;The Wheel of Time: Boxed Set #1 (Wheel of Time, #1-3)&#39;, &#39;The Whipping Boy&#39;, &#39;The White Dragon (Pern: Dragonriders of Pern, #3)&#39;, &#39;The White Gold Wielder&#39;, &#39;The White Rose&#39;, &#39;The Wide Window&#39;, &#39;The Widow of the South&#39;, &#39;The Will of the Empress&#39;, &#39;The Wind in the Willows&#39;, &#39;The Winds of War&#39;, &#39;The Wings of the Dove&#39;, &#39;The Winner&#39;, &#39;The Winter King&#39;, &#39;The Winter of our Discontent&#39;, &#34;The Winter&#39;s Tale&#34;, &#39;The Wisdom of Crowds&#39;, &#39;The Wishsong of Shannara &#39;, &#39;The Witch of Blackbird Pond&#39;, &#39;The Witches&#39;, &#39;The Witching Hour&#39;, &#39;The Wives of Henry VIII&#39;, &#39;The Wolves of Willoughby Chase &#39;, &#39;The Woman Warrior: Memoirs of a Girlhood Among Ghosts&#39;, &#39;The Woman Who Rides Like a Man&#39;, &#39;The Woman in White&#39;, &#39;The Women of Brewster Place&#39;, &#39;The Wonderful Story Of Henry Sugar And Six More&#39;, &#39;The Wonderful Wizard of Oz&#39;, &#39;The Woods&#39;, &#39;The Work and the Glory, Vol. 1: Pillar of Light&#39;, &#39;The World According to Garp&#39;, &#39;The World Is Flat: A Brief History of the Twenty-first Century&#39;, &#39;The World Without Us&#39;, &#39;The Worst Hard Time: The Untold Story of Those Who Survived the Great American Dust Bowl&#39;, &#39;The Wounded Land&#39;, &#39;The Year of Fog&#39;, &#34;The Year of Living Biblically: One Man&#39;s Humble Quest to Follow the Bible As Literally As Possible&#34;, &#39;The Year of Magical Thinking&#39;, &#39;The Yearling&#39;, &#39;The Yellow Wall-paper. A story&#39;, &#39;The Yellow Wallpaper&#39;, &#34;The Yiddish Policemen&#39;s Union&#34;, &#39;The Zombie Survival Guide: Complete Protection from the Living Dead&#39;, &#34;The Zookeeper&#39;s Wife: A War Story&#34;, &#39;The horse and his boy&#39;, &#34;The magician&#39;s nephew&#34;, &#39;The medium is the massage&#39;, &#39;The neon rain&#39;, &#39;The tragedie of King Richard the second&#39;, &#39;Their Eyes Were Watching God&#39;, &#39;Them: Adventures with Extremists&#39;, &#39;Then We Came to the End&#39;, &#39;Theodore Rex&#39;, &#39;There Are No Children Here: The Story of Two Boys Growing Up in the Other America&#39;, &#34;There&#39;s Treasure Everywhere: A Calvin and Hobbes Collection&#34;, &#34;There&#39;s a Boy in the Girls&#39; Bathroom&#34;, &#34;There&#39;s a Nightmare in My Closet (Pied Piper Book)&#34;, &#34;There&#39;s a Wocket in My Pocket&#34;, &#39;These Happy Golden Years&#39;, &#39;These High, Green Hills&#39;, &#39;These Is My Words: The Diary of Sarah Agnes Prine, 1881-1901, Arizona Territories&#39;, &#39;They Do it with Mirrors&#39;, &#39;Thief of Time&#39;, &#39;Things Fall Apart&#39;, &#39;Things Not Seen&#39;, &#39;Think and Grow Rich&#39;, &#39;Thinner&#39;, &#39;Thirteen Moons&#39;, &#34;This Boy&#39;s Life: A Memoir&#34;, &#39;This Heart of Mine&#39;, &#39;This Is Your Brain on Music: The Science of a Human Obsession&#39;, &#39;This Lullaby&#39;, &#39;This Present Darkness&#39;, &#39;This Side of Paradise&#39;, &#39;Those Left Behind (Serenity, #1)&#39;, &#39;Those Who Save Us&#39;, &#39;Thr3e&#39;, &#39;Three Cups of Tea &#39;, &#39;Three Fates&#39;, &#39;Three Junes&#39;, &#39;Three Weeks with My Brother&#39;, &#39;Three to Get Deadly&#39;, &#39;Throne of Jade&#39;, &#39;Through Gates of Splendor&#39;, &#39;Through the Looking-Glass, and What Alice Found There&#39;, &#39;Thud!&#39;, &#39;Thunderhead&#39;, &#39;Thunderstruck&#39;, &#39;Thérèse Raquin&#39;, &#39;Ticktock&#39;, &#39;Tigana&#39;, &#39;Tikki Tikki Tembo&#39;, &#39;Till We Have Faces&#39;, &#39;Timbuktu&#39;, &#39;Time Enough for Love&#39;, &#39;Time and Again&#39;, &#39;Time for Bed&#39;, &#39;Time of the Twins&#39;, &#39;Timeline&#39;, &#39;Timequake&#39;, &#39;Time’s Arrow&#39;, &#39;Tinker, Tailor, Soldier, Spy&#39;, &#39;Tintenblut&#39;, &#39;Tintenherz&#39;, &#39;Tintin au pays des Soviets&#39;, &#39;Tipping the Velvet&#39;, &#39;Tithe: A Modern Faerie Tale&#39;, &#39;Tithe: A Modern Faerie Tale &#39;, &#39;To Green Angel Tower (Memory, Sorrow, and Thorn, #3)&#39;, &#39;To Green Angel Tower (Siege)&#39;, &#39;To Green Angel Tower (Storm)&#39;, &#39;To Have and Have Not &#39;, &#39;To Have and to Hold &#39;, &#39;To Kill a Mockingbird&#39;, &#39;To Say Nothing of the Dog&#39;, &#39;To Sir Phillip, With Love&#39;, &#39;To The Lighthouse &#39;, &#39;To Your Scattered Bodies Go&#39;, &#39;To the Nines&#39;, &#39;Tobacco Road&#39;, &#39;Todos os Nomes&#39;, &#34;Tom Clancy&#39;s Net Force: Breaking Point&#34;, &#39;Tom Sawyer &amp; Huckleberry Finn&#39;, &#34;Tom&#39;s Midnight Garden&#34;, &#39;Tomorrow, When the War Began&#39;, &#39;Tortilla Flat&#39;, &#39;Total Control&#39;, &#39;Touch the Dark&#39;, &#39;Touching Darkness (Midnighters, #2)&#39;, &#34;Touching the Void: The True Story of One Man&#39;s Miraculous Survival&#34;, &#39;Toujours Provence&#39;, &#39;Tourist Season&#39;, &#39;Trace&#39;, &#39;Track of the Cat&#39;, &#39;Trading Up&#39;, &#39;Train to Pakistan&#39;, &#39;Trainspotting&#39;, &#39;Tramp for the Lord&#39;, &#39;Transfer of Power&#39;, &#39;Transmetropolitan Vol. 4: The New Scum&#39;, &#39;Transmetropolitan, Vol. 1: Back on the Street&#39;, &#39;Transmetropolitan, Vol. 2: Lust for Life&#39;, &#39;Transmetropolitan, Vol. 3: Year of the Bastard&#39;, &#39;Transmetropolitan, Vol. 5: Lonely City&#39;, &#39;Traveling Mercies: Some Thoughts on Faith&#39;, &#39;Travels with Charley: In Search of America&#39;, &#39;Travesuras de la niña mala&#39;, &#39;Treasure&#39;, &#39;Treasure Island&#39;, &#39;Trials of Death (Cirque du Freak, #5) &#39;, &#39;Tribulation Force: The Continuing Drama of Those Left Behind&#39;, &#34;Trickster&#39;s Queen&#34;, &#39;Trinity: A Novel of Ireland&#39;, &#39;Triptych&#39;, &#39;Tripwire&#39;, &#34;Tris&#39;s Book&#34;, &#39;Trojan Odyssey&#39;, &#39;Tropic of Cancer&#39;, &#39;Tropic of Capricorn&#39;, &#39;True Believer&#39;, &#39;True Evil&#39;, &#39;True Grit&#39;, &#39;True History of the Kelly Gang&#39;, &#39;Truman&#39;, &#39;Trump: The Art of the Deal&#39;, &#39;Trumps of Doom&#39;, &#39;Trunk Music&#39;, &#39;Truth &amp; Beauty: A Friendship&#39;, &#39;Tuck Everlasting&#39;, &#39;Tuesdays with Morrie&#39;, &#39;Tunnels of Blood (Cirque du Freak, #3) &#39;, &#39;Turning Angel&#39;, &#39;Twelfth Night; or, What You Will&#39;, &#39;Twelve Angry Men (Penguin Classics)&#39;, &#39;Twelve Sharp&#39;, &#39;Twilight&#39;, &#39;Twilight Eyes&#39;, &#39;Twisted&#39;, &#39;Two Little Girls in Blue&#39;, &#39;Two Treatises of Government&#39;, &#39;Two Years Before the Mast&#39;, &#39;Two for the Dough&#39;, &#39;Tyrannosaur Canyon&#39;, &#39;Ubik&#39;, &#39;Uglies&#39;, &#39;Ultimate Spider-Man, Volume 1: Power and Responsibility&#39;, &#39;Ultramarathon Man: Confessions of an All-Night Runner&#39;, &#39;Ulysses&#39;, &#39;Un Lun Dun&#39;, &#39;Un di Velt Hot Geshvign&#39;, &#34;Uncle Tom&#39;s Cabin or Life Among the Lowly&#34;, &#39;Undaunted Courage&#39;, &#39;Undead and Unappreciated&#39;, &#39;Undead and Unemployed&#39;, &#39;Undead and Unwed&#39;, &#39;Under The Net&#39;, &#39;Under the Banner of Heaven: A Story of Violent Faith&#39;, &#39;Under the Skin&#39;, &#39;Under the Tuscan Sun&#39;, &#39;Under the Volcano&#39;, &#39;Understanding Comics: The Invisible Art&#39;, &#39;Underworld&#39;, &#39;Unfinished Tales of Númenor and Middle-Earth&#39;, &#39;Unless&#39;, &#39;Unlimited Power : The New Science Of Personal Achievement&#39;, &#39;Unnatural Death&#39;, &#39;Unnatural Exposure&#39;, &#39;Until I Find You&#39;, &#39;Until You&#39;, &#39;Unveiled: Tamar (Lineage of Grace #1)&#39;, &#39;Up Country&#39;, &#39;Ut og stjæle hester&#39;, &#39;Utilitarianism&#39;, &#39;V for Vendetta&#39;, &#39;V.&#39;, &#39;Vagabond&#39;, &#39;Valhalla Rising (Dirk Pitt, #16)&#39;, &#39;Valis&#39;, &#39;Valley of Silence&#39;, &#39;Valley of the Dolls&#39;, &#39;Vampire Mountain (Cirque du Freak, #4) &#39;, &#39;Vanishing Acts&#39;, &#39;Vanity Fair: A Novel Without a Hero&#39;, &#39;Vector Prime (Star Wars: The New Jedi Order, #1)&#39;, &#39;Vegan Cupcakes Take Over the World: 75 Dairy-Free Recipes for Cupcakes that Rule&#39;, &#39;Veinte poemas de amor y una canción desesperada&#39;, &#39;Velocity&#39;, &#39;Velvet Elvis: Repainting the Christian Faith&#39;, &#39;Vengeance in Death&#39;, &#39;Vernon God Little&#39;, &#39;Veronika decide morrer&#39;, &#39;Vets Might Fly and Vet in a Spin&#39;, &#39;Villa Incognito&#39;, &#39;Villette&#39;, &#39;Villospår&#39;, &#39;Vinegar Hill (P.S.)&#39;, &#39;Vingt Mille Lieues Sous les Mers&#39;, &#39;Vingt ans après&#39;, &#39;Violets Are Blue&#39;, &#39;Violin&#39;, &#39;Virgin&#39;, &#39;Virtual Light&#39;, &#39;Visions in Death (In Death, #19)&#39;, &#39;Visions of Sugar Plums&#39;, &#39;Vittorio the Vampire&#39;, &#39;Void Moon&#39;, &#39;Voyage au bout de la nuit&#39;, &#39;Voyage au centre de la Terre&#39;, &#39;Voyager&#39;, &#39;Waiting&#39;, &#39;Waiting for the Barbarians&#39;, &#39;Waiting to Exhale&#39;, &#39;Walden; or Life in the Woods&#39;, &#39;Walk Two Moons&#39;, &#39;Wall and Piece&#39;, &#39;Wanted&#39;, &#39;War and Remembrance&#39;, &#39;War of the Twins&#39;, &#39;Warlock: A Novel of Ancient Egypt&#39;, &#39;Washington Square&#39;, &#34;Washington&#39;s Crossing&#34;, &#39;Wasted: A Memoir of Anorexia and Bulimia &#39;, &#39;Watchers&#39;, &#39;Watchmen&#39;, &#39;Water for Elephants&#39;, &#39;Watermelon&#39;, &#39;Watership Down&#39;, &#39;Way of the Peaceful Warrior: A Book That Changes Lives&#39;, &#39;Waylander &#39;, &#39;Ways of Seeing&#39;, &#39;Wayside School Gets a Little Stranger&#39;, &#39;Wayside School is Falling Down&#39;, &#39;We Have Always Lived in the Castle&#39;, &#39;We Need to Talk About Kevin&#39;, &#39;We Were Soldiers Once... and Young: Ia Drang - the Battle That Changed the War in Vietnam&#39;, &#39;We Were the Mulvaneys&#39;, &#39;We Wish to Inform You That Tomorrow We Will Be Killed with Our Families&#39;, &#39;We the Living&#39;, &#39;We3&#39;, &#39;Weaveworld&#39;, &#39;Welcome to Dead House&#39;, &#39;Welcome to Temptation&#39;, &#39;Welcome to the Monkey House&#39;, &#39;Welcome to the World, Baby Girl!&#39;, &#39;Well-Schooled in Murder&#39;, &#39;West with the Night&#39;, &#39;What Do You Care What Other People Think? Further Adventures of a Curious Character&#39;, &#39;What I Loved&#39;, &#39;What Is the What: The Autobiography of Valentino Achak Deng&#39;, &#39;What Looks Like Crazy on an Ordinary Day&#39;, &#34;What My Mother Doesn&#39;t Know&#34;, &#39;What Remains: A Memoir of Fate, Friendship, and Love&#39;, &#39;What The Dead Know&#39;, &#39;What We Keep &#39;, &#39;What We Talk About When We Talk About Love: Stories&#39;, &#34;What to Expect When You&#39;re Expecting&#34;, &#39;What to Expect the First Year&#39;, &#34;What&#39;s Eating Gilbert Grape&#34;, &#34;What&#39;s So Amazing About Grace?&#34;, &#34;What&#39;s the Matter with Kansas? How Conservatives Won the Heart of America&#34;, &#39;When Bad Things Happen to Good People&#39;, &#39;When Calls the Heart&#39;, &#39;When Christ and His Saints Slept&#39;, &#39;When Crickets Cry&#39;, &#39;When Genius Failed: The Rise and Fall of Long-Term Capital Management&#39;, &#39;When Nietzsche Wept: A Novel of Obsession&#39;, &#39;When Rabbit Howls&#39;, &#39;When Things Fall Apart: Heart Advice for Difficult Times&#39;, &#39;When We Were Orphans&#39;, &#39;When We Were Very Young&#39;, &#39;When Will Jesus Bring the Pork Chops?&#39;, &#39;When the Bough Breaks&#39;, &#39;When the Emperor Was Divine&#39;, &#39;When the Wind Blows&#39;, &#39;Where Are the Children?&#39;, &#39;Where Eagles Dare &#39;, &#39;Where Is God When It Hurts?&#39;, &#39;Where I’m Calling From: The Selected Stories&#39;, &#39;Where Rainbows End&#39;, &#39;Where the Heart Is&#39;, &#39;Where the Red Fern Grows&#39;, &#39;Where the Sidewalk Ends: The Poems and Drawings of Shel Silverstein&#39;, &#39;Where the Wild Things Are&#39;, &#39;While I Was Gone&#39;, &#39;While My Pretty One Sleeps&#39;, &#39;Whispers&#39;, &#39;White&#39;, &#39;White Fang&#39;, &#39;White Night&#39;, &#39;White Noise&#39;, &#39;White Oleander&#39;, &#39;White Teeth&#39;, &#39;Whiteout&#39;, &#39;Whitethorn Woods&#39;, &#39;Whitney, My Love&#39;, &#39;Who Moved My Cheese?&#39;, &#39;Who Will Cry When You Die? Life Lessons from the Monk Who Sold His Ferrari&#39;, &#34;Who&#39;s Afraid of Virginia Woolf?&#34;, &#39;Whose Body?&#39;, &#39;Why I Am Not a Christian and Other Essays on Religion and Related Subjects&#39;, &#39;Wicca: A Guide for the Solitary Practitioner&#39;, &#39;Wicked Lovely &#39;, &#39;Wicked: The Grimmerie, a Behind-the-Scenes Look at the Hit Broadway Musical&#39;, &#39;Wicked: The Life and Times of the Wicked Witch of the West&#39;, &#39;Wide Sargasso Sea&#39;, &#39;Wideacre&#39;, &#39;Wielding a Red Sword&#39;, &#39;Wild Fire&#39;, &#39;Wild Magic (Immortals, #1)&#39;, &#39;Wild Seed (Patternmaster, #1)&#39;, &#39;Wild Swans: Three Daughters of China&#39;, &#39;Wildwood Dancing&#39;, &#39;Will You Please Be Quiet, Please?&#39;, &#39;Windmills of the Gods&#39;, &#39;Winesburg, Ohio: A Group of Tales of Ohio Small-Town Life&#39;, &#39;Winnie-the-Pooh&#39;, &#39;Winnie-the-Pooh &amp; The House at Pooh Corner&#39;, &#39;Winning&#39;, &#39;Winter Moon&#39;, &#39;Winter Prey&#39;, &#39;Winter Solstice&#39;, &#39;Winter in Madrid&#39;, &#34;Winter&#39;s Bone&#34;, &#34;Winter&#39;s Tale&#34;, &#39;Wintersmith&#39;, &#39;Wir Kinder vom Bahnhof Zoo&#39;, &#39;Wise Blood&#39;, &#39;Wiseguy: Life in a Mafia Family&#39;, &#39;Wish You Well&#39;, &#39;Wit : A Play&#39;, &#39;Witches Abroad&#39;, &#39;With a Tangled Skein&#39;, &#39;Without Fail &#39;, &#39;Without Remorse&#39;, &#39;Witness in Death&#39;, &#39;Wives and Daughters&#39;, &#39;Wizard and Glass&#39;, &#39;Wizard at Large &#39;, &#34;Wizard&#39;s First Rule&#34;, &#39;Woken Furies&#39;, &#39;Wolf Brother&#39;, &#39;Wolf-Speaker (Immortals, #2)&#39;, &#39;Wolverine: Origin&#39;, &#39;Wolves of the Calla&#39;, &#39;Women&#39;, &#39;Women Who Run With the Wolves&#39;, &#39;Women in Love&#39;, &#39;Women of the Silk&#39;, &#34;Women&#39;s Bodies, Women&#39;s Wisdom: Creating Physical and Emotional Health and Healing&#34;, &#39;Wonder Boys&#39;, &#39;Wonderful Tonight: An Autobiography&#39;, &#39;World War Z: An Oral History of the Zombie War&#39;, &#39;Writing Down the Bones: Freeing the Writer Within&#39;, &#39;Written on the Body&#39;, &#39;Wuthering Heights&#39;, &#39;Wyrd Sisters&#39;, &#39;Xenocide&#39;, &#39;Y: The Last Man Vol. 2: Cycles&#39;, &#39;Y: The Last Man Vol. 3: One Small Step&#39;, &#39;Y: The Last Man Vol. 4: Safeword&#39;, &#39;Y: The Last Man Vol. 5: Ring of Truth&#39;, &#39;Y: The Last Man Vol. 6: Girl on Girl&#39;, &#39;Y: The Last Man Vol. 7: Paper Dolls&#39;, &#39;Y: The Last Man Vol. 9: Motherland&#39;, &#39;Y: The Last Man, Vol. 1: Unmanned&#39;, &#39;Y: The Last Man, Vol. 8: Kimono Dragons&#39;, &#39;Ya-Yas in Bloom&#39;, &#39;Year of Wonders: A Novel of the Plague&#39;, &#39;Yertle the Turtle (Classic Seuss)&#39;, &#39;You Are Special: A Story for Everyone&#39;, &#39;You Belong to Me&#39;, &#39;You Can Heal Your Life&#39;, &#39;You Know You Love Me&#39;, &#39;You Shall Know Our Velocity!&#39;, &#39;You Suck &#39;, &#34;You&#39;re the one that I want&#34;, &#34;You&#39;ve Been Warned&#34;, &#39;Your Best Life Now: 7 Steps to Living at Your Full Potential&#39;, &#39;Z for Zachariah&#39;, &#39;Zami: A New Spelling of My Name&#39;, &#34;Zen Mind, Beginner&#39;s Mind&#34;, &#39;Zen and the Art of Motorcycle Maintenance&#39;, &#39;Zen of Seeing: Seeing/Drawing as Meditation&#39;, &#39;Zodiac&#39;, &#39;Zoya&#39;, &#39;Zur Genealogie der Moral&#39;, &#39;number9dream&#39;, &#39;ttyl (Internet Girls, #1)&#39;, &#39;Æneis&#39;, &#39;Über das Geistige in der Kunst&#39;, &#39;Über die spezielle und die allgemeine Relativitätstheorie&#39;, &#39;İstanbul: Hatıralar ve Şehir&#39;, &#39;Śmierć Miasta &#39;, &#39;Žert&#39;, &#39;Život je jinde&#39;, &#39;Απολογία&#39;, &#39;Βίος και πολιτεία του Αλέξη Ζορμπά&#39;, &#39;Λυσιστράτη&#39;, &#39;Οἰδίπους Τύραννος&#39;, &#39;Περὶ ποιητικῆς&#39;, &#39;Πολιτεία&#39;, &#39;Συμπόσιον&#39;, &#39;Τὰ εἰς ἑαυτόν &#39;, &#39;τὰ μετὰ τὰ φυσικά&#39;, &#39;Анна Каренина&#39;, &#39;Архипелаг ГУЛАГ, 1918-1956&#39;, &#39;Белые ночи&#39;, &#39;Бесы&#39;, &#39;Братья Карамазовы&#39;, &#39;Вишнëвый сад&#39;, &#39;Война и миръ&#39;, &#39;Воскресение&#39;, &#39;Герой нашего времени&#39;, &#39;Дневной дозор&#39;, &#39;Доктор Живаго&#39;, &#39;Дядя Ваня&#39;, &#39;Евгений Онегин: Роман в стихах &#39;, &#39;Записки из Мёртвого дома&#39;, &#39;Записки из подполья&#39;, &#39;Идиот&#39;, &#39;Крейцерова соната&#39;, &#39;Мастер и Маргарита&#39;, &#39;Мы&#39;, &#39;Мёртвые ду́ши&#39;, &#39;Ночной дозор &#39;, &#39;Обломов&#39;, &#39;Один день Ивана Денисовича&#39;, &#39;Отцы и дѣти&#39;, &#39;Преступление и наказание&#39;, &#39;Приглашение на казнь&#39;, &#39;РУКАВИЧКА: Українська народна казка&#39;, &#39;Рассказы и Повести&#39;, &#39;Смерть Ивана Ильича&#39;, &#39;Собачье сердце&#39;, &#39;Сумеречный дозор&#39;, &#39;Три сестры&#39;, &#39;Чайка&#39;, &#39;أولاد حارتنا&#39;, &#39;الأجنحة المتكسرة&#39;, &#39;القرآن u200e u200e [al-Qurʾān]&#39;, &#39;بوف کور&#39;, &#39;بين القصرين&#39;, &#39;دیوان u200e u200e [Dīvān]&#39;, &#39;رباعیات [Robāʿiāt-e ʿOmar Khayyām]&#39;, &#39;رجال في الشمس&#39;, &#39;كِتَاب أَلْف لَيْلَة وَلَيْلَة u200e u200e [kitāb ʾalf layla wa-layla]&#39;, &#39;لا تحزن&#39;, &#39;ماهی سیاه کوچولو&#39;, &#39;ملحمة الحرافيش&#39;, &#39;موسم الهجرة إلى الشمال&#39;, &#39;هشت کتاب: مرگِ رنگ. زندگیِ خواب u200cه. آوارِ آفتاب. شرقِ اندوه. صدای پای آب. مسافر. حجمِ سبز. ما هیچ، ما نگاه&#39;, &#39;उपनिषद [Upaniṣad]&#39;, &#39;भगवद्गीता [Bhagavadgītā]&#39;, &#39;Ἀντιγόνη&#39;, &#39;Ἠθικὰ Νικομάχεια &#39;, &#39;Ἰλιάς&#39;, &#39;Ἰλιάς ; Ὀδύσσεια&#39;, &#39;Ἰστορίαι&#39;, &#39;Ἱστορίαι&#39;, &#39;Ὀδύσσεια&#39;, &#39;Ὀρέστεια&#39;, &#39; u200eThe Power of Intention u200e&#39;, &#39;…trotzdem Ja zum Leben sagen: Ein Psychologe erlebt das Konzentrationslager&#39;, &#39;ちょびっツ #1&#39;, &#39;ねじまき鳥クロニクル [Nejimakidori kuronikuru]&#39;, &#39;めるぷり メルヘン☆プリンス 1&#39;, &#39;るろうに剣心 1&#39;, &#39;アフターダーク [Afutā dāku]&#39;, &#39;アンダーグラウンド [Andāguraundo]&#39;, &#39;イン ザ・ミソスープ&#39;, &#39;キッチン [Kitchen]&#39;, &#39;スプートニクの恋人 [Supūtoniku no Koibito]&#39;, &#39;ダンス・ダンス・ダンス [Dansu, dansu, dansu]&#39;, &#39;ツバサ-RESERVoir CHRoNiCLE- 1&#39;, &#39;デスノート #1 (Desu Nōto) Taikutsu (退屈)&#39;, &#39;デスノート #2 (Desu Nōto) Gōryū (合流)&#39;, &#39;デスノート #3 (Desu Nōto) Gekisō (激走)&#39;, &#39;デスノート #4 (Desu Nōto) Koigokoro (恋心)&#39;, &#39;デスノート #5 (Desu Nōto) Hakushi (白紙,) &#39;, &#39;デスノート #6 (Desu Nōto) Kōkan (交換)&#39;, &#39;デスノート #7 (Desu Nōto) Zero (零)&#39;, &#39;デスノート #8 (Desu Nōto) Mato (的)&#39;, &#39;ノルウェイの森 [Noruwei no Mori]&#39;, &#39;バトル・ロワイアル&#39;, &#39;フルーツバスケット 1&#39;, &#39;マース (Mars) #1&#39;, &#39;ヤマトナデシコ七変化&#39;, &#39;ラブひな #1&#39;, &#39;ヴァンパイア騎士 1&#39;, &#39;ヴァンパイア騎士 2&#39;, &#39;世界の終りとハードボイルド・ワンダーランド [Sekai no owari to hādoboirudo wandārando]&#39;, &#39;五輪書 [Go Rin no Sho]&#39;, &#39;午後の曳航 [Gogo no eikō]&#39;, &#39;名探偵コナン 1&#39;, &#39;孫子兵法 [Sūnzi bīngfǎ]&#39;, &#39;宮本武蔵 Miyamoto Musashi&#39;, &#39;易 [Yì]&#39;, &#39;桜蘭高校ホスト部 1&#39;, &#39;海辺のカフカ [Umibe no Kafuka]&#39;, &#39;犬夜叉 1&#39;, &#39;砂の女 [Suna no onna]&#39;, &#39;神の子どもたちはみな踊る&#39;, &#39;窓ぎわのトットちゃん&#39;, &#39;羊をめぐる冒険 [Hitsujiwomegurubōken]&#39;, &#39;美少女戦士セーラームーン 1 [Bishōjo Senshi Sailor Moon 1]&#39;, &#39;花より男子 1&#39;, &#39;論語 [Lún Yǔ]&#39;, &#39;象の消滅 [Zō no shōmetsu]&#39;, &#39;道德經 [dào dé jīng]&#39;, &#39;鋼の錬金術師 1&#39;, &#39;雪国 &#39;], &#39;user_id&#39;: [&#39;#na#&#39;, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 15, 17, 18, 21, 22, 24, 25, 26, 28, 29, 31, 32, 34, 36, 38, 40, 42, 43, 45, 46, 49, 50, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 65, 66, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 80, 83, 84, 85, 86, 89, 90, 91, 93, 94, 100, 101, 103, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 117, 122, 123, 124, 125, 126, 128, 129, 130, 131, 133, 135, 136, 137, 141, 142, 143, 146, 147, 149, 151, 154, 155, 156, 158, 159, 162, 164, 167, 168, 169, 171, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 187, 189, 190, 191, 194, 195, 196, 197, 199, 200, 202, 203, 204, 205, 206, 207, 209, 210, 212, 214, 215, 218, 219, 220, 221, 222, 223, 226, 228, 229, 230, 232, 233, 234, 237, 238, 239, 240, 242, 243, 245, 246, 247, 248, 249, 250, 253, 255, 256, 257, 258, 263, 264, 265, 267, 269, 270, 274, 275, 276, 278, 279, 283, 284, 285, 286, 287, 289, 293, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 311, 312, 316, 317, 318, 319, 320, 322, 323, 324, 325, 330, 331, 332, 333, 335, 337, 338, 339, 340, 342, 344, 345, 347, 349, 351, 352, 355, 356, 357, 360, 361, 362, 363, 364, 366, 367, 370, 372, 375, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 399, 400, 401, 402, 403, 404, 406, 407, 410, 411, 412, 413, 415, 416, 417, 418, 420, 422, 423, 425, 427, 428, 429, 433, 439, 440, 443, 444, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 462, 463, 465, 466, 468, 469, 472, 473, 475, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 493, 494, 495, 497, 498, 499, 503, 504, 506, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 525, 529, 530, 531, 532, 533, 535, 537, 538, 539, 540, 542, 543, 544, 546, 547, 548, 549, 550, 552, 554, 555, 557, 558, 559, 561, 562, 563, 564, 566, 568, 569, 573, 574, 578, 579, 580, 581, 582, 583, 585, 587, 589, 590, 592, 594, 595, 598, 599, 600, 602, 603, 604, 605, 606, 607, 608, 610, 612, 613, 614, 615, 616, 618, 619, 620, 623, 624, 626, 627, 628, 629, 630, 632, 634, 635, 636, 637, 638, 639, 642, 643, 646, 647, 648, 649, 650, 651, 653, 654, 656, 657, 658, 662, 663, 665, 667, 668, 669, 670, 676, 679, 682, 683, 684, 687, 688, 689, 690, 691, 694, 695, 697, 698, 699, 701, 702, 706, 710, 712, 714, 715, 716, 717, 718, 721, 723, 724, 725, 726, 731, 735, 736, 738, 740, 741, 744, 745, 746, 748, 749, 750, 751, 752, 755, 756, 757, 758, 759, 760, 763, 764, 765, 769, 770, 773, 774, 777, 778, 779, 780, 781, 782, 783, 786, 788, 789, 790, 791, 792, 793, 795, 797, 801, 802, 803, 804, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 818, 819, 822, 823, 826, 829, 830, 835, 839, 840, 841, 848, 850, 853, 857, 860, 861, 863, 865, 866, 868, 869, 870, 871, 872, 875, 879, 880, 881, 884, 885, 887, 891, 892, 895, 896, 897, 898, 899, 900, 903, 905, 907, 909, 912, 914, 916, 917, 918, 919, 920, 921, 924, 925, 926, 928, 929, 930, 932, 933, 934, 935, 936, 940, 942, 943, 944, 946, 947, 950, 951, 952, 953, 954, 956, 957, 959, 961, 963, 966, 968, 969, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 987, 989, 990, 991, 992, 994, 995, 996, 997, 999, 1000, 1002, 1003, 1005, 1006, 1007, 1008, 1010, 1011, 1012, 1013, 1014, 1016, 1019, 1020, 1023, 1024, 1025, 1027, 1028, 1029, 1030, 1032, 1033, 1034, 1037, 1038, 1040, 1041, 1042, 1043, 1044, 1046, 1047, 1049, 1050, 1052, 1055, 1057, 1058, 1059, 1060, 1061, 1063, 1065, 1068, 1069, 1070, 1073, 1074, 1076, 1077, 1079, 1081, 1083, 1084, 1086, 1087, 1089, 1091, 1092, 1095, 1096, 1102, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1114, 1115, 1116, 1117, 1118, 1122, 1123, 1124, 1125, 1126, 1127, 1129, 1131, 1132, 1135, 1137, 1138, 1139, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1153, 1155, 1157, 1159, 1160, 1161, 1162, 1164, 1166, 1167, 1168, 1172, 1173, 1174, 1175, 1176, 1178, 1179, 1180, 1183, 1184, 1187, 1188, 1189, 1191, 1193, 1195, 1196, 1197, 1198, 1200, 1204, 1206, 1208, 1209, 1210, 1211, 1212, 1214, 1215, 1217, 1219, 1220, 1221, 1225, 1226, 1228, 1230, 1232, 1234, 1235, 1236, 1237, 1238, 1240, 1244, 1246, 1247, 1250, 1251, 1252, 1253, 1254, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1268, 1270, 1271, 1274, 1276, 1278, 1281, 1283, 1285, 1286, 1289, 1290, 1291, 1293, 1296, 1297, 1298, 1300, 1302, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1315, 1316, 1321, 1323, 1325, 1326, 1327, 1330, 1331, 1334, 1335, 1336, 1340, 1341, 1343, 1346, 1347, 1349, 1350, 1352, 1353, 1354, 1356, 1357, 1358, 1361, 1362, 1365, 1366, 1367, 1368, 1374, 1375, 1377, 1378, 1381, 1388, 1390, 1392, 1394, 1395, 1396, 1398, 1399, 1400, 1402, 1403, 1406, 1408, 1409, 1411, 1412, 1413, 1414, 1415, 1417, 1418, 1420, 1421, 1422, 1423, 1424, 1427, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1437, 1438, 1439, 1441, 1443, 1444, 1446, 1447, 1448, 1449, 1450, 1453, 1454, 1455, 1456, 1458, 1459, 1460, 1462, 1463, 1464, 1465, 1468, 1471, 1472, 1473, 1474, 1475, 1476, 1478, 1482, 1483, 1485, 1488, 1489, 1493, 1494, 1495, 1496, 1497, 1499, 1500, 1501, 1503, 1504, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1514, 1515, 1518, 1519, 1520, 1523, 1525, 1526, 1528, 1529, 1530, 1532, 1534, 1536, 1537, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1553, 1554, 1555, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1569, 1570, 1571, 1572, 1574, 1577, 1578, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1590, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1614, 1616, 1617, 1618, 1619, 1620, 1626, 1627, 1628, 1629, 1630, 1631, 1634, 1638, 1641, 1642, 1645, 1647, 1648, 1649, 1650, 1652, 1654, 1655, 1656, 1657, 1661, 1663, 1664, 1666, 1669, 1671, 1672, 1678, 1680, 1681, 1682, 1686, 1689, 1690, 1694, 1695, 1696, 1698, 1701, 1702, 1703, 1704, 1705, 1706, 1709, 1710, 1711, 1713, 1716, 1717, 1719, 1720, 1721, 1722, 1723, 1725, 1726, 1727, 1731, 1734, 1735, 1740, 1741, 1743, 1744, 1749, 1751, 1752, 1753, 1756, 1757, 1758, 1760, 1761, 1762, 1763, 1764, 1765, 1767, 1768, 1771, 1772, 1774, 1775, 1778, 1779, 1782, 1783, 1784, 1787, 1788, 1789, 1790, 1791, 1794, 1796, 1798, 1799, 1801, 1802, 1804, 1805, 1806, 1807, 1808, 1810, 1811, 1818, 1820, 1821, 1823, 1824, 1825, 1826, 1828, 1832, 1833, 1834, 1835, 1836, 1838, 1840, 1843, 1845, 1846, 1847, 1850, 1851, 1852, 1853, 1854, 1856, 1860, 1861, 1866, 1867, 1868, 1869, 1871, 1872, 1873, 1875, 1876, 1877, 1880, 1882, 1883, 1884, 1885, 1886, 1888, 1889, 1890, 1892, 1893, 1895, 1897, 1899, 1900, 1902, 1903, 1907, 1909, 1910, 1912, 1913, 1914, 1915, 1916, 1917, 1919, 1921, 1922, 1923, 1924, 1926, 1927, 1930, 1932, 1933, 1934, 1935, 1936, 1937, 1939, 1940, 1941, 1942, 1947, 1948, 1951, 1953, 1956, 1958, 1962, 1965, 1968, 1971, 1973, 1974, 1977, 1979, 1980, 1981, 1983, 1989, 1990, 1991, 1992, 1994, 1996, 2000, 2001, 2007, 2008, 2009, 2010, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2024, 2025, 2026, 2028, 2029, 2030, 2031, 2032, 2033, 2035, 2036, 2037, 2038, 2039, 2043, 2045, 2046, 2048, 2051, 2055, 2057, 2058, 2059, 2060, 2061, 2065, 2067, 2068, 2069, 2070, 2072, 2073, 2074, 2075, 2076, 2078, 2079, 2080, 2082, 2084, 2085, 2087, 2088, 2089, 2092, 2093, 2094, 2095, 2096, 2100, 2101, 2102, 2103, 2105, 2106, 2108, 2111, 2112, 2117, 2118, 2119, 2121, 2123, 2124, 2125, 2128, 2129, 2130, 2136, 2143, 2145, 2146, 2148, 2151, 2153, 2154, 2156, 2157, 2159, 2161, 2162, 2164, 2172, 2174, 2175, 2176, 2177, 2178, 2181, 2182, 2184, 2185, 2186, 2187, 2188, 2193, 2197, 2198, 2201, 2202, 2204, 2205, 2209, 2210, 2214, 2215, 2216, 2218, 2219, 2220, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234, 2237, 2238, 2245, 2247, 2250, 2252, 2253, 2254, 2255, 2257, 2258, 2259, 2260, 2261, 2267, 2268, 2269, 2270, 2271, 2272, 2274, 2275, 2276, 2277, 2278, 2279, 2281, 2282, 2283, 2285, 2288, 2289, 2291, 2292, 2294, 2295, 2296, 2298, 2300, 2302, 2303, 2304, 2307, 2309, 2311, 2313, 2314, 2316, 2317, 2319, 2320, 2321, 2322, 2323, 2325, 2326, 2329, 2331, 2333, 2334, 2335, 2337, 2338, 2339, 2340, 2341, 2344, 2345, 2347, 2348, 2351, 2352, 2356, 2357, 2359, 2361, 2365, 2366, 2367, 2369, 2370, 2373, 2374, 2375, 2376, 2377, 2378, 2381, 2383, 2384, 2385, 2387, 2388, 2389, 2391, 2396, 2397, 2398, 2399, 2401, 2404, 2406, 2407, 2409, 2410, 2412, 2414, 2415, 2416, 2419, 2420, 2422, 2423, 2424, 2427, 2428, 2429, 2430, 2431, 2436, 2437, 2438, 2439, 2440, 2446, 2449, 2450, 2451, 2452, 2454, 2455, 2456, 2457, 2458, 2459, 2464, 2466, 2469, 2470, 2471, 2473, 2474, 2476, 2477, 2478, 2481, 2483, 2485, 2487, 2489, 2491, 2492, 2493, 2497, 2498, 2500, 2501, 2502, 2503, 2504, 2506, 2508, 2512, 2513, 2516, 2517, 2518, 2519, 2522, 2524, 2525, 2527, 2528, 2530, 2531, 2532, 2534, 2536, 2537, 2538, 2539, 2540, 2542, 2543, 2545, 2546, 2547, 2548, 2549, 2551, 2552, 2553, 2555, 2557, 2558, 2565, 2568, 2569, 2571, 2573, 2575, 2576, 2577, 2579, 2583, 2585, 2587, 2589, 2591, 2593, 2597, 2598, 2599, 2600, 2601, 2602, 2603, 2605, 2606, 2611, 2612, 2613, 2614, 2615, 2616, 2617, 2618, 2619, 2622, 2624, 2626, 2628, 2630, 2632, 2633, 2634, 2636, 2637, 2638, 2639, 2641, 2643, 2644, 2645, 2646, 2647, 2648, 2650, 2652, 2654, 2657, 2661, 2662, 2663, 2665, 2667, 2670, 2671, 2674, 2675, 2679, 2681, 2683, 2687, 2688, 2689, 2691, 2692, 2696, 2697, 2699, 2701, 2702, 2703, 2704, 2705, 2707, 2709, 2710, 2713, 2714, 2715, 2716, 2717, 2721, 2724, 2725, 2726, 2727, 2728, 2730, 2732, 2734, 2736, 2737, 2738, 2740, 2743, 2746, 2747, 2748, 2749, 2751, 2752, 2754, 2756, 2758, 2759, 2760, 2761, 2762, 2764, 2766, 2767, 2768, 2769, 2770, 2775, 2778, 2782, 2783, 2785, 2787, 2788, 2790, 2793, 2794, 2796, 2797, 2800, 2802, 2803, 2804, 2805, 2808, 2810, 2811, 2814, 2815, 2816, 2817, 2819, 2820, 2823, 2824, 2825, 2827, 2829, 2830, 2831, 2834, 2835, 2837, 2839, 2843, 2844, 2847, 2848, 2852, 2853, 2854, 2858, 2859, 2860, 2862, 2868, 2869, 2870, 2875, 2876, 2879, 2882, 2884, 2886, 2888, 2889, 2890, 2893, 2895, 2899, 2902, 2903, 2905, 2907, 2909, 2910, 2911, 2912, 2913, 2914, 2915, 2916, 2919, 2922, 2925, 2928, 2931, 2934, 2937, 2938, 2944, 2948, 2951, 2952, 2953, 2954, 2955, 2957, 2962, 2963, 2965, 2967, 2969, 2970, 2978]} . For the latent factors of both our books, we will initialize a random Embedding with a size of all the books we have and the number of factors we want. The same goes for the latent factors of our users. . The values in these Embeddings will be updated by BackPropagation until they become meaningful. . For our small subset of data, we will use 50 factors. This simply means we are giving our model an allowance to represent each books in 50 different ways (e.g. action, classics etc). . So, we first should get the number of users and the number of books: . n_books = len(dls.classes[&#39;original_title&#39;]) n_users = len(dls.classes[&#39;user_id&#39;]) . For learning purposes, we should also get into the habit of manually chekcking shapes of the data in our batches and see if we understand why it is so: . xb, yb = dls.one_batch() xb.shape, yb.shape . (torch.Size([64, 2]), torch.Size([64, 1])) . We are using a batch size of 64, so that makes sense. For our independent variable (X), we have two items there, which are the user and the book and for the dependent variable (y), we only have the rating of the book. That is why the above shapes are so. . Creating the Model . Next, we need to handle the model part. . class CollabFiltering(Module): def __init__(self, n_users, n_books, n_factors, y_range=(0, 5.5)): self.u_weights = Embedding(n_users, n_factors) self.u_bias = Embedding(n_users, 1) self.i_weights = Embedding(n_books, n_factors) self.i_bias = Embedding(n_books, 1) self.y_range = y_range def forward(self, x): users = self.u_weights(x[:,0]) books = self.i_weights(x[:,1]) res = (users * books).sum(dim=1, keepdims=True) res += self.u_bias(x[:,0]) + self.i_bias(x[:,1]) res = sigmoid_range(res, *self.y_range) return res . Our Model Inherits from Module which is what PyTorch expects: . class CollabFiltering(Module): . The model takes in the number of users, the number of books, the number of factors we want to use for modelling and a y_range that defaults to a tuple of (0, 5.5). . The purpose of the y_range is to squish our output between 0 and 5. (We choose 5.5 as the upper limit since we are going to be using sigmoid range to contain our output. And since values in sigmoid never reach the upper limit, to predict a value of 5, we are going to need to go higher). . It then creates the Embeddings of the users and the books. We are also going to create biases for each user and each book to capture the fact that some users generally more positive or negative in their recommendations than others and smoe books are just plain better or worse than others. . def __init__(self, n_users, n_books, n_factors, y_range=(0, 5.5)): self.u_weights = Embedding(n_users, n_factors) self.u_bias = Embedding(n_users, 1) self.i_weights = Embedding(n_books, n_factors) self.i_bias = Embedding(n_books, 1) self.y_range = y_range . The forward method simply gets the factors from the user embedding and book embedding, performs dot product on them, adds the biases then uses sigmoid range to squish the output between 0 and 5 and returns the result. . def forward(self, x): users = self.u_weights(x[:,0]) books = self.i_weights(x[:,1]) res = (users * books).sum(dim=1, keepdims=True) res += self.u_bias(x[:,0]) + self.i_bias(x[:,1]) res = sigmoid_range(res, *self.y_range) return res . We can now instantiate the model with 50 factors and create our Learner. We are going to use Mean Squared Error as our loss function since this is a regression problem. . model = CollabFiltering(n_users, n_books, 50) . learn = Learner(dls, model, loss_func=MSELossFlat()) . Let us find a suitable Learning rate and train the model for 6 epochs. We use a weight decay of 0.2 to regularize our model . learn.lr_find() . SuggestedLRs(lr_min=0.03019951581954956, lr_steep=7.585775892948732e-05) . learn.fit_one_cycle(6, 1e-2, wd=0.2) . epoch train_loss valid_loss time . 0 | 0.972651 | 0.988126 | 00:08 | . 1 | 0.959149 | 0.947992 | 00:08 | . 2 | 0.908314 | 0.913695 | 00:08 | . 3 | 0.789891 | 0.863736 | 00:08 | . 4 | 0.646984 | 0.828928 | 00:08 | . 5 | 0.538308 | 0.826404 | 00:08 | . We get a final MSE of 0.826404 which is actually pretty good for out task at hand. . Interpreting the Embeddings . Let us start by interpretting the book biases. We could have easily ranked the books by the ratings and checked the last five items but bias tells us something more interesting. These books are books that, even if a user was well matched to the latent factors of the book (e.g action, comedy etc), they still didn&#39;t like the books and that is why the books have a low bias. In short, they are generally bad books. . These are the 5 books with the lowest bias from our model. . book_bias = learn.model.i_bias.weight.squeeze() idxs = book_bias.argsort()[:5] [dls.classes[&#39;original_title&#39;][i] for i in idxs] . [&#39;Trading Up&#39;, &#39;One Night @ The Call Center&#39;, &#39;Four Blondes&#39;, &#39;Lost&#39;, &#39;Eat That Frog!: 21 Great Ways to Stop Procrastinating and Get More Done in Less Time&#39;] . Since our rating DataFrame included the GoodReads ID of each book, we can create a URL of a single book and check out the reviews from GoodReads. . Let&#39;s use Four Blondes as an example. We can locate its entry in our DataFrame using the following code: . books.loc[books[&#39;original_title&#39;]==&#39;Four Blondes&#39;] . book_id goodreads_book_id authors original_publication_year original_title average_rating . 4008 4009 | 6613 | Candace Bushnell | 2000 | Four Blondes | 2.8 | . Then using its goodreads_id, create a URL that we can follow to read its reviews: . id = 6613 url = f&#39;https://www.goodreads.com/book/show/{id}&#39; url . &#39;https://www.goodreads.com/book/show/6613&#39; . I haven&#39;t read the book myself but I don&#39;t think I will too. Reading the reviews from GoodReads looks like people didn&#39;t really enjoy this book. Here is one extract of the reviews: . . Now let us do the opposite, and check for the books with the highest book bias. This means that these are generally good books and even if you don&#39;t enjoy such genres, there is a high chance you will enjoy this books: . idxs = book_bias.argsort(descending=True)[:5] [dls.classes[&#39;original_title&#39;][i] for i in idxs] . [&#39;Harry Potter and the Deathly Hallows&#39;, &#39;A Thousand Splendid Suns&#39;, &#39;Where the Wild Things Are&#39;, &#39;Le Petit Prince&#39;, &#39;دیوان u200e u200e [Dīvān]&#39;] . At the very top is a book I enjoyed very much myself: Harry Potter and the Deathly Hallows. Since I may be biased towards that book, let us check for reviews of a book I haven&#39;t read myself. . id = int(books.loc[books[&#39;original_title&#39;]==&#39;Le Petit Prince&#39;][&#39;goodreads_book_id&#39;].values) url = f&#39;https://www.goodreads.com/book/show/{id}&#39; url . &#39;https://www.goodreads.com/book/show/157993&#39; . I was suprised to find that &#39;Le Petit Prince&#39; or &#39;The Little Prince&#39; was a child-like novel which adults enjoy as well. Here is one review from GoodReads: . . It is definitely on my to-read list now. . Next, let us try and intepret the Book Embedding Factors. Remember, we had 50 factors in our model. Well, intepreting a 50-dimensional Embedding turns out to be a difficult task for us human beings. . Luckily we have a method called PCA which stands for Principal Component Analysis that can be used to reduce the dimensions to something that can be plotted in a graph. . Here is the outcome: . #caption Representation of Books based on two strongest PCA components g = ratings.groupby(&#39;original_title&#39;)[&#39;rating&#39;].count() top_books = g.sort_values(ascending=False).index.values[:10000] top_idxs = tensor([learn.dls.classes[&#39;original_title&#39;].o2i[m] for m in top_books]) books_w = learn.model.i_weights.weight[top_idxs].cpu().detach() books_pca = books_w.pca(3) fac0,fac1,fac2 = books_pca.t() idxs = list(range(50)) X = fac0[idxs] Y = fac2[idxs] plt.figure(figsize=(12,12)) plt.scatter(X, Y) for i, x, y in zip(top_books[idxs], X, Y): plt.text(x,y,i, color=np.random.rand(3)*0.7, fontsize=11) plt.show() . As you can see, our model has learned for itself to seperate the books into different categories. If you look at the very top, we have the classic books, the likes of To Kill A MockingBird and The Great Gatsby. At the right side we have the likes of The Da Vinci Code and Angels and Demons which are more of Mystery Thriller Novels and are more of reality fiction novels. At the bottom we have The Hobit books which are more of fantasy novels and Mythology. . What is magical is our model learned all of these on its own! We never explicitely told it what genres a particular book belongs to. We only fed it user ratings and it learned all about them itself. . Generating Book Reviews . Now comes the interesting part. How to generate a book review for a user. It is actually a very simple concept. The intuition is two similar books should have a smaller distance between them (of the Embeddings) than two different books. So, we will require a reader to input the name of a book he or she enjoyed reading and we will generate a recommendation of books for them. . Let us experiment with &#39;The Da Vinci Code&#39; by Dan Brown and see the 5 most similar books to it using our model: . book_factors = learn.model.i_weights.weight idx = dls.classes[&#39;original_title&#39;].o2i[&#39;The Da Vinci Code&#39;] distances = nn.CosineSimilarity(dim=1)(book_factors, book_factors[idx][None]) idx = distances.argsort(descending=True)[1:6] # dls.classes[&#39;original_title&#39;][idx] [dls.classes[&#39;original_title&#39;][i] for i in idx] . [&#39;The Sweet Far Thing&#39;, &#39;Angels &amp; Demons &#39;, &#39;Back Roads&#39;, &#34;What to Expect When You&#39;re Expecting&#34;, &#39;What to Expect the First Year&#39;] . According to our model, The Sweet Far Thing is the most similar book, so let us generate a URL and see the reviews: . id = int(books.loc[books[&#39;original_title&#39;]==&#39;The Sweet Far Thing&#39;][&#39;goodreads_book_id&#39;].values) url = f&#39;https://www.goodreads.com/book/show/{id}&#39; url . &#39;https://www.goodreads.com/book/show/127459&#39; . The book description describes it as a Thriller novel which was the same case with The Da Vinci Code. . Neural Network . Now, we will experiment with a Neural Network Model and see if it performs better than our Dot Product Model. . To turn our Model into a Deep Learning Model, we need to concatenate the Embeddings together and pass them through linear layers with non-linearities between them. Our Neural network will have 100 neurons and utilize a ReLU between them. Here is the code: . class CollabFilteringNN(Module): def __init__(self, user_sz, book_sz, y_range=(0, 5.5), n_act=100): self.user_factors = Embedding(*user_sz) self.book_factors = Embedding(*book_sz) self.layers = nn.Sequential( nn.Linear(user_sz[1]+book_sz[1], n_act), nn.ReLU(), nn.Linear(n_act, 1) ) self.y_range = y_range def forward(self, x): embs = self.user_factors(x[:,0]), self.book_factors(x[:,1]) x = self.layers(torch.cat(embs, dim=1)) return sigmoid_range(x, *self.y_range) . We then instantiate the neural network. We will use the get_emb_sz to get good Embedding sizes for our users and books. Remember since we will concatenate the Embeddings and not multiply them, they can now have different sizes. . nn_model = CollabFilteringNN(*get_emb_sz(dls)) . We can check out our model: . nn_model . CollabFilteringNN( (user_factors): Embedding(1795, 106) (book_factors): Embedding(4879, 186) (layers): Sequential( (0): Linear(in_features=292, out_features=100, bias=True) (1): ReLU() (2): Linear(in_features=100, out_features=1, bias=True) ) ) . We will now create our Learner with the same MSE loss function, find a suitable learning rate and fit our model for 7 epochs using a regularization weight decay of 0.05: . learn = Learner(dls, nn_model, loss_func=MSELossFlat()) . learn.lr_find() . SuggestedLRs(lr_min=0.006918309628963471, lr_steep=3.311311274956097e-06) . learn = Learner(dls, nn_model, loss_func=MSELossFlat()) learn.fit_one_cycle(7, 1e-2, wd=0.05) . epoch train_loss valid_loss time . 0 | 0.871681 | 0.865158 | 00:09 | . 1 | 0.850319 | 0.837760 | 00:09 | . 2 | 0.806426 | 0.845133 | 00:09 | . 3 | 0.787113 | 0.807564 | 00:09 | . 4 | 0.738813 | 0.800090 | 00:09 | . 5 | 0.709997 | 0.808876 | 00:09 | . 6 | 0.678276 | 0.814820 | 00:08 | . We get roughly the same final MSE. . Use Full DataSet . Since we are done prototyping and experimenting with the small dataset, it is time to use the full dataset for modelling. . Our full dataset has around 6 million ratings, instead of the 100k we worked with earlier. Therefore it will probably take longer to train. Due to that, we need to train the model for a short number of epochs then save the model&#39;s current progress before we continue training. . We will load in the ratings and pre-process the DataSet as before, then create a DataLoaders object and train the model: . ratings = pd.read_csv(path/&#39;ratings.csv&#39;) ratings.head() . user_id book_id rating . 0 1 | 258 | 5 | . 1 2 | 4081 | 4 | . 2 2 | 260 | 5 | . 3 2 | 9296 | 5 | . 4 2 | 2318 | 3 | . ratings = ratings.merge(books) ratings.head() . user_id book_id rating goodreads_book_id authors original_publication_year original_title average_rating . 0 1 | 258 | 5 | 1232 | Carlos Ruiz Zafón, Lucia Graves | 2001 | La sombra del viento | 4.24 | . 1 11 | 258 | 3 | 1232 | Carlos Ruiz Zafón, Lucia Graves | 2001 | La sombra del viento | 4.24 | . 2 143 | 258 | 4 | 1232 | Carlos Ruiz Zafón, Lucia Graves | 2001 | La sombra del viento | 4.24 | . 3 242 | 258 | 5 | 1232 | Carlos Ruiz Zafón, Lucia Graves | 2001 | La sombra del viento | 4.24 | . 4 325 | 258 | 4 | 1232 | Carlos Ruiz Zafón, Lucia Graves | 2001 | La sombra del viento | 4.24 | . dls = CollabDataLoaders.from_df(ratings=ratings, valid_pct=0.2, user_name=&#39;user_id&#39;, item_name=&#39;original_title&#39;, rating_name=&#39;rating&#39;) . dls.show_batch() . user_id original_title rating . 0 21406 | Harry Potter and the Deathly Hallows | 2 | . 1 9890 | Y: The Last Man Vol. 7: Paper Dolls | 4 | . 2 49626 | Tuesdays with Morrie | 4 | . 3 36931 | Angelfall | 4 | . 4 2333 | The Cat in the Hat | 5 | . 5 10664 | The Notebook | 5 | . 6 48519 | The Witches | 4 | . 7 16022 | Tell the Wolves I&#39;m Home | 3 | . 8 45350 | Out from Boneville | 5 | . 9 22684 | The Joy Luck Club | 3 | . n_users = len(dls.classes[&#39;user_id&#39;]) n_books = len(dls.classes[&#39;original_title&#39;]) . model = CollabFiltering(n_users, n_books, 500) . learn = Learner(dls, model, loss_func=MSELossFlat()) . learn.lr_find() . SuggestedLRs(lr_min=0.13182567358016967, lr_steep=1.0964782238006592) . learn.fit_one_cycle(4, 1e-1) . epoch train_loss valid_loss time . 0 | 7.274031 | 7.174866 | 24:10 | . 1 | 7.081066 | 7.022025 | 24:05 | . 2 | 5.113871 | 5.182562 | 24:06 | . 3 | 1.103867 | 1.094651 | 24:12 | . After 4 epochs, we get a MSE of 1.09. This is probably a good time to save the model so we do not lose our progress: . learn.save(&#39;4epochs&#39;) . Path(&#39;models/4epochs.pth&#39;) . We can now load up the model and find continue training it for two more epochs and see if it improves: . learn = learn.load(&#39;4epochs&#39;) . learn.model . CollabFiltering( (u_weights): Embedding(53425, 500) (u_bias): Embedding(53425, 1) (i_weights): Embedding(9269, 500) (i_bias): Embedding(9269, 1) ) . learn.lr_find() . SuggestedLRs(lr_min=3.311311302240938e-05, lr_steep=1.5848931980144698e-06) . learn.fit_one_cycle(2, 1e-6) . epoch train_loss valid_loss time . 0 | 1.059122 | 1.093842 | 24:10 | . 1 | 1.061084 | 1.093513 | 24:04 | . Since it is taking long to train, I stopped after 6 epochs and saved the model. However, if you have time and resources, you can continue training using the same process of saving progress after a few epochs. . learn.save(&#39;6epochs&#39;) . Path(&#39;models/6epochs.pth&#39;) . Interpreting the Full Model . We can see what our model with the full dataset learned. . We will start with the 5 books with the lowest bias (Generally bad books even if you would like the genre): . book_bias = learn.model.i_bias.weight.squeeze() idxs = book_bias.argsort()[:5] [dls.classes[&#39;original_title&#39;][i] for i in idxs] . [&#39;Half Girlfriend&#39;, &#39;The 3 Mistakes of My Life&#39;, &#39;One Night @ The Call Center&#39;, &#39;of course i love you&#39;, &#39;ليتها تقرأ&#39;] . The book One Night @ The Call Center makes another appearance. It must be a really bad book. . Now for the generally good books, the books with the highest book bias: . idxs = book_bias.argsort(descending=True)[:5] [dls.classes[&#39;original_title&#39;][i] for i in idxs] . [&#39;Words of Radiance&#39;, &#39;Complete Harry Potter Boxed Set&#39;, &#39;The Complete Calvin and Hobbes&#39;, &#39;The Essential Calvin and Hobbes: A Calvin and Hobbes Treasury&#39;, &#39;Unbroken: A World War II Story of Survival, Resilience, and Redemption&#39;] . Harry Potter makes another appearance. Let us check out the top book: . id = int(books.loc[books[&#39;original_title&#39;]==&#39;Words of Radiance&#39;][&#39;goodreads_book_id&#39;].values) url = f&#39;https://www.goodreads.com/book/show/{id}&#39; url . &#39;https://www.goodreads.com/book/show/17332218&#39; . Here is a sample review of the book: . . Next we can check out the Book Embeddings using the PCA trick we utilized before: . #caption Representation of books based on two strongest PCA components g = ratings.groupby(&#39;original_title&#39;)[&#39;rating&#39;].count() top_books = g.sort_values(ascending=False).index.values[:10000] top_idxs = tensor([learn.dls.classes[&#39;original_title&#39;].o2i[m] for m in top_books]) books_w = learn.model.i_weights.weight[top_idxs].cpu().detach() books_pca = books_w.pca(3) fac0,fac1,fac2 = books_pca.t() idxs = list(range(50)) X = fac0[idxs] Y = fac2[idxs] plt.figure(figsize=(12,12)) plt.scatter(X, Y) for i, x, y in zip(top_books[idxs], X, Y): plt.text(x,y,i, color=np.random.rand(3)*0.7, fontsize=11) plt.show() . And we can check the distances (similar books). We use The Da Vinci Code again as an example: . book_factors = learn.model.i_weights.weight idx = dls.classes[&#39;original_title&#39;].o2i[&#39;The Da Vinci Code&#39;] distances = nn.CosineSimilarity(dim=1)(book_factors, book_factors[idx][None]) idx = distances.argsort(descending=True)[1:6] # dls.classes[&#39;original_title&#39;][idx] [dls.classes[&#39;original_title&#39;][i] for i in idx] . [&#39;Angels &amp; Demons &#39;, &#39;Twilight&#39;, &#39;The Hunger Games&#39;, &#39;Catching Fire&#39;, &#34;Harry Potter and the Philosopher&#39;s Stone&#34;] . Now that I am happy with my model, I will export it and use it to create a Web App for Recommending Similar Books. That will be in Part 2 of this blog and it is coming soon. . learn.export(&#39;final_model.pkl&#39;) .",
            "url": "https://jimmiemunyi.github.io/blog/tutorial/2021/02/15/Book-Recommendation-Model-Training.html",
            "relUrl": "/tutorial/2021/02/15/Book-Recommendation-Model-Training.html",
            "date": " • Feb 15, 2021"
        }
        
    
  
    
        ,"post1": {
            "title": "Real Time Sign Language Classification",
            "content": "Introduction . After training our model in Part A, we are now going to develop an application to run inference with for new data. . I am going to be utilizing opencv to get live video from my webcam, then run our model against each frame in the video and get the prediction of what Sign Language Letter I am holding up. . Here is an example of what the output will look like: . The whole code + training notebooks from Part A can be found in this github repo. . This tutorial assumes some basic understanding of the cv2 library and general understanding of how to run inference using a model. . The Full Code . Here is the full code of making the App if you just want the code. . I will explain each part of the code and what was my thinkinh behind it in the next section. . from collections import deque, Counter import cv2 from fastai.vision.all import * print(&#39;Loading our Inference model...&#39;) # load our inference model inf_model = load_learner(&#39;model/sign_language.pkl&#39;) print(&#39;Model Loaded&#39;) # define a deque to get rolling average of predictions # I go with the last 10 predictions rolling_predictions = deque([], maxlen=10) # get the most common item in the deque def most_common(D): data = Counter(D) return data.most_common(1)[0][0] def hand_area(img): # specify where hand should go hand = img[50:324, 50:324] # the images in the model were trainind on 200x200 pixels hand = cv2.resize(hand, (200,200)) return hand # capture video on the webcam cap = cv2.VideoCapture(0) # get the dimensions on the frame frame_width = int(cap.get(3)) frame_height = int(cap.get(4)) # define codec and create our VideoWriter to save the video fourcc = cv2.VideoWriter_fourcc(*&#39;mp4v&#39;) out = cv2.VideoWriter(&#39;output/sign-language.mp4&#39;, fourcc, 12, (frame_width, frame_height)) # read video while True: # capture each frame of the video ret, frame = cap.read() # flip frame to feel more &#39;natural&#39; to webcam frame = cv2.flip(frame, flipCode = 1) # draw a blue rectangle where to place hand cv2.rectangle(frame, (50, 50), (324, 324), (255, 0, 0), 2) # get the image inference_image = hand_area(frame) # get the current prediction on the hand pred = inf_model.predict(inference_image) # append the current prediction to our rolling predictions rolling_predictions.append(pred[0]) # our prediction is going to be the most common letter # in our rolling predictions prediction_output = f&#39;The predicted letter is {most_common(rolling_predictions)}&#39; # show predicted text cv2.putText(frame, prediction_output, (10, 350), cv2.FONT_HERSHEY_SIMPLEX, 0.9, (255, 0, 0), 2) # show the frame cv2.imshow(&#39;frame&#39;, frame) # save the frames to out file out.write(frame) # press `q` to exit if cv2.waitKey(1) &amp; 0xFF == ord(&#39;q&#39;): break # release VideoCapture() cap.release() # release out file out.release() # close all frames and video windows cv2.destroyAllWindows() . Explaining the Code . Imports . Install fastai and opencv-python. . Next, this are the packages I utilize for this App. fastai is going to be used to run Inference with, cv2 is going to handle all the WebCam functionality and we are going to utilize deque and Counter from collections to apply a nifty trick I am going to show you. . from collections import deque, Counter import cv2 from fastai.vision.all import * . Loading our Inference Model . print(&#39;Loading our Inference model...&#39;) # load our inference model inf_model = load_learner(&#39;model/sign_language.pkl&#39;) print(&#39;Model Loaded&#39;) . The next part of our code loads the model we pickled in Part A and prints some useful information. . Rolling Average Predictions . When I first made the App, I noticed one problem when using it. A slight movement of my hand was changing the predictions. This is known as flickering. The video below shows how flickering affects our App: . . The Video you saw in the beginning shows how &#39;stable&#39; our model is after using rolling predictions. . # define a deque to get rolling average of predictions # I go with the last 10 predictions rolling_predictions = deque([], maxlen=10) # get the most common item in the deque def most_common(D): data = Counter(D) return data.most_common(1)[0][0] . To solve this, a utilized the deque from Collections. I used 10 as the maxlength of the deque since I wanted the App, when running inference, to output the most common prediction out of the last 10 predictions. This makes it more stable than when we are using only the current one. . The function most_common will return the most common item in our deque. . Hand Area . def hand_area(img): # specify where hand should go hand = img[50:324, 50:324] # the images in the model were trainind on 200x200 pixels hand = cv2.resize(hand, (200,200)) return hand . Next, we define a function that tells our model which part of the video to run inference on. We do not want to run inference on the whole video which will include our face! We will eventually draw a blue rectangle in this area so that you&#39;ll know where to place your hand. . Capture Video on the WebCam and Define Our Writer . # capture video on the webcam cap = cv2.VideoCapture(0) # get the dimensions on the frame frame_width = int(cap.get(3)) frame_height = int(cap.get(4)) # define codec and create our VideoWriter to save the video fourcc = cv2.VideoWriter_fourcc(*&#39;mp4v&#39;) out = cv2.VideoWriter(&#39;sign-language.mp4&#39;, fourcc, 12, (frame_width, frame_height)) . Here, we define a VideoCapture that will record our video. The parameter 0 means capture on the first WebCam it finds. If you have multiple WebCams, this is the parameter you want to play around with until you find the correct one. . Next, we get the dimensions of the frame being recorded by the VideoCapture. We are going to use this dimensions when writing (outputting) the recorded video . Finally, we create a VideoWriter that we are going to use to output the video and write it to our Hard Disk. To do that, opencv requires us to define a codec to use, and so we create a VideoWriter_fourcc exactly for that purpose and we use &#39;mp4v&#39; with it. . In our writer, we first pass the name we want for the output file, here I use &#39;sign-language.mp4&#39; which will be written in the current directory. You can change this location if you wish to. Next we pass in the codec. After that you pass in your fps (frame rate per second). I found that 12 worked best with my configuration but you probably want to play around with that until you get the best one for you. Finally, we pass in the frame sizes, which we had gotten earlier. . The Main Video Loop . # read video while True: # capture each frame of the video ret, frame = cap.read() # flip frame to feel more &#39;natural&#39; to webcam frame = cv2.flip(frame, flipCode = 1) # draw a blue rectangle where to place hand cv2.rectangle(frame, (50, 50), (324, 324), (255, 0, 0), 2) # get the image inference_image = hand_area(frame) # get the current prediction on the hand pred = inf_model.predict(inference_image) # append the current prediction to our rolling predictions rolling_predictions.append(pred[0]) # our prediction is going to be the most common letter # in our rolling predictions prediction_output = f&#39;The predicted letter is {most_common(rolling_predictions)}&#39; # show predicted text cv2.putText(frame, prediction_output, (10, 350), cv2.FONT_HERSHEY_SIMPLEX, 0.9, (255, 0, 0), 2) # show the frame cv2.imshow(&#39;frame&#39;, frame) # save the frames to out file out.write(frame) # press `q` to exit if cv2.waitKey(1) &amp; 0xFF == ord(&#39;q&#39;): break . This is a long piece of code so lets break it down bit by bit: . # read video while True: # capture each frame of the video _ , frame = cap.read() # flip frame to feel more &#39;natural&#39; to webcam frame = cv2.flip(frame, flipCode = 1) # ...... # truncated code here # ...... # show the frame cv2.imshow(&#39;frame&#39;, frame) # save the frames to out file out.write(frame) # press `q` to exit if cv2.waitKey(1) &amp; 0xFF == ord(&#39;q&#39;): break . We create a infinite While loop that will always be running, until the user presses the &#39;q&#39; letter on the keyboard, as defined by our last if statement at the very bottom of the loop. . After that, we use the reader we created earlier and call cap.read() on it which returns the current frame of the video, and another variable that we are not going to use. . A little intuition how videos works. A frame is somewhat equivalent to just one static image. Think of it as that. So for a video what usually happens it these single frames are played one after the other quickly, like 30-60 times faster hence creating the illusion of a continious video. . So for our App, we are going to get each frame, and run it through our model (which expects the input to be an image, so this will work) and return the current prediction. This is also why we decided to use rolling average predictions and not the just the current prediction. To reduce the flickering that may occur by passing a different frame each second. . Next: . frame = cv2.flip(frame, flipCode = 1) . This flips our frame to make it feel more natural. What I mean is, without flipping, the output image felt reversed, where if I raised my left arm it seemed like I was raising my right. Try running the App with this part commented out and you&#39;ll get what I mean. . This shows the frames one after the other and the out writes it to disk . cv2.imshow(&#39;frame&#39;, frame) # save the frames to out file out.write(frame) . # read video while True: # ...... # truncated code here # ...... # draw a blue rectangle where to place hand cv2.rectangle(frame, (50, 50), (324, 324), (255, 0, 0), 2) # get the image inference_image = hand_area(frame) # get the current prediction on the hand pred = inf_model.predict(inference_image) # append the current prediction to our rolling predictions rolling_predictions.append(pred[0]) # our prediction is going to be the most common letter # in our rolling predictions prediction_output = f&#39;The predicted letter is {most_common(rolling_predictions)}&#39; # show predicted text cv2.putText(frame, prediction_output, (10, 350), cv2.FONT_HERSHEY_SIMPLEX, 0.9, (255, 0, 0), 2) # ...... # truncated code here # ...... # press `q` to exit if cv2.waitKey(1) &amp; 0xFF == ord(&#39;q&#39;): break . Next, we draw a blue rectangle where the user should place the hand. The first parameter is where we want to draw the rectangle and we tell opencv to draw it on our current frame. The next two parameter describe the area where we want our rectangle to be. Note that this dimensions are exactly the same as those in the hand_area function we created earlier. This is to make sure we are running inference on the correct area. Lastly we pass in the color of the rectangle (in BGR formart) and the thickness of the line (2). . cv2.rectangle(frame, (50, 50), (324, 324), (255, 0, 0), 2) . Next, from our whole frame, we just extract the hand area and store it. This is the image we are going to pass to our model . inference_image = hand_area(frame) . Next, we pass our extracted image to our inference model and get the predictions and append that prediction to our rolling predictions deque. Remember that this deque will only hold the most recent 10 predictions and discard everything else . pred = inf_model.predict(inference_image) rolling_predictions.append(pred[0]) . We get the most common Letter predicted in our Deque and use opencv to write that letter to the video. The parameters are almost similar to the rectangle code, with a slight variation since here we have to pass in the font(hershey simplex) and font size (0.9) . prediction_output = f&#39;The predicted letter is {most_common(rolling_predictions)}&#39; cv2.putText(frame, prediction_output, (10, 350), cv2.FONT_HERSHEY_SIMPLEX, 0.9, (255, 0, 0), 2) . The final part of the code just releases the resources we had acquired initially: the Video reader, the Video Writer and then destroys all windows created. . # release VideoCapture() cap.release() # release out file out.release() # close all frames and video windows cv2.destroyAllWindows() . And that&#39;s all in Part B. Hope you enjoyed it. .",
            "url": "https://jimmiemunyi.github.io/blog/projects/tutorial/2021/01/21/Sign-Language-Inference-with-WebCam.html",
            "relUrl": "/projects/tutorial/2021/01/21/Sign-Language-Inference-with-WebCam.html",
            "date": " • Jan 21, 2021"
        }
        
    
  
    
        ,"post2": {
            "title": "Sign Language Classification - Part A",
            "content": "Introduction . I am going to attempt to use Deep Learning to create a model that can learn the American Sign Language. For this Part A, we will focus on model training and for Part B, we are going to create an application from our model that we get here. . We are going to utilize Transfer Learning for this project, which is an important part of Deep Learning. . While I do not claim that this will be the best application out there for this particular problem, this small project could serve as motivation and can be expanded in future to create products that help the affected people who must use sign language to communicate. . Importing Packages . We are going to be using fastai so let&#39;s import it: . from fastai.vision.all import * . The Data . The dataset we are going to be using is American Sign Language Dataset from Kaggle. It contains 87,000 images each of 200x200 pixels. It has 29 classes: 26 for the letters A-Z and 3 classes for space, delete and nothing. We are going to use the Kaggle API to get the data. . !kaggle datasets download -d grassknoted/asl-alphabet . Downloading asl-alphabet.zip to /content 100% 1.03G/1.03G [00:05&lt;00:00, 222MB/s] . Let&#39;s unzip the data and get rid of the zip file: . #collapse-output !unzip *zip -d data &amp;&amp; rm -rf *zip . We create a Pathlib object pointing to our data folder and look inside to see what it contains: . path = Path(&#39;data&#39;) Path.BASE_PATH = path . path.ls() . (#2) [Path(&#39;asl_alphabet_test&#39;),Path(&#39;asl_alphabet_train&#39;)] . Let&#39;s peek into one of those folders: . (path/&#39;asl_alphabet_train&#39;).ls() . (#29) [Path(&#39;asl_alphabet_train/X&#39;),Path(&#39;asl_alphabet_train/G&#39;),Path(&#39;asl_alphabet_train/V&#39;),Path(&#39;asl_alphabet_train/I&#39;),Path(&#39;asl_alphabet_train/space&#39;),Path(&#39;asl_alphabet_train/N&#39;),Path(&#39;asl_alphabet_train/W&#39;),Path(&#39;asl_alphabet_train/P&#39;),Path(&#39;asl_alphabet_train/H&#39;),Path(&#39;asl_alphabet_train/Z&#39;)...] . We have 29 folders, as explained earlier. . Data Preprocessing . Now we are ready to create a DataBlock blueprint to hold our data. We use the fastai DataBlock API which is a convenient way to define how to handle our data. . Since we don&#39;t have validation data provided, we will split 20% of the training images and use it as our validation data. . We then create a DataLoaders object from the DataBlock, we will use a batch-size of 64. . signs = DataBlock( blocks=(ImageBlock, CategoryBlock), get_items=get_image_files, get_y=parent_label, splitter=RandomSplitter(seed=42, valid_pct=0.2), item_tfms=Resize(200), batch_tfms=aug_transforms() ) dls = signs.dataloaders(path/&#39;asl_alphabet_train&#39;, bs=64) . Let&#39;s look into one batch of the data: . dls.show_batch() . This is the number of steps we are going to take in an epoch: . len(dls.train) . 1087 . Using Transfer Learning to Create A Model . Now we can create a model and use Transfer Learning to train it on our data. Transfer Learning is important since it enables us to get good results with less training and data. . For those who wish to replicate this experiment, we use: resnet18 architecture, Cross Entropy Loss since this is a Classification Task, and for our optimizer, we select the Adam Optimizer. We will output error rate and accuracy as our metrics to help as analyze how our model is doing. . We use the Learning Rate Finder provided by fastai, using insights from Leslie Smith&#39;s work, that enable us to find us a good learning rate, in short time instead of us trying a couple of learning rates experimentally and seeing what works. . If you are interested in reading more about the Learning Rate Finder, read this paper. . For our tast, it looks like a learning rate of 1x10-2 will work, so we fine-tine (transfer learn) for 4 epochs. . learn = cnn_learner(dls, resnet18, loss_func=CrossEntropyLossFlat(), metrics=[error_rate, accuracy], opt_func=Adam) learn.lr_find() . Downloading: &#34;https://download.pytorch.org/models/resnet18-5c106cde.pth&#34; to /root/.cache/torch/hub/checkpoints/resnet18-5c106cde.pth . . SuggestedLRs(lr_min=0.017378008365631102, lr_steep=0.015848932787775993) . learn = cnn_learner(dls, resnet18, loss_func=CrossEntropyLossFlat(), metrics=[error_rate, accuracy], opt_func=Adam) learn.fine_tune(4, base_lr=1e-2) . epoch train_loss valid_loss error_rate accuracy time . 0 | 0.230984 | 0.065030 | 0.019310 | 0.980690 | 04:11 | . epoch train_loss valid_loss error_rate accuracy time . 0 | 0.160366 | 0.875754 | 0.117989 | 0.882011 | 05:24 | . 1 | 0.038482 | 0.008822 | 0.002529 | 0.997471 | 05:26 | . 2 | 0.008333 | 0.000855 | 0.000230 | 0.999770 | 05:25 | . 3 | 0.002372 | 0.000346 | 0.000057 | 0.999943 | 05:25 | . We get a very good accuracy only after 4 epochs. . Now we can tackle the small test set that comes with this dataset, although we will scale up to a better test dataset in a few moments. . Testing Our Model . test_images = (path/&#39;asl_alphabet_test&#39;).ls() test_images . (#28) [Path(&#39;asl_alphabet_test/U_test.jpg&#39;),Path(&#39;asl_alphabet_test/space_test.jpg&#39;),Path(&#39;asl_alphabet_test/N_test.jpg&#39;),Path(&#39;asl_alphabet_test/R_test.jpg&#39;),Path(&#39;asl_alphabet_test/H_test.jpg&#39;),Path(&#39;asl_alphabet_test/P_test.jpg&#39;),Path(&#39;asl_alphabet_test/T_test.jpg&#39;),Path(&#39;asl_alphabet_test/C_test.jpg&#39;),Path(&#39;asl_alphabet_test/X_test.jpg&#39;),Path(&#39;asl_alphabet_test/V_test.jpg&#39;)...] . We have 28 images in this test set, each for the classes of data we have. . Let&#39;s take the first two images and predict them using our model. . U = (path/&#39;asl_alphabet_test&#39;/&#39;U_test.jpg&#39;) space = (path/&#39;asl_alphabet_test&#39;/&#39;space_test.jpg&#39;) . learn.predict(U)[0] . &#39;U&#39; . learn.predict(space)[0] . &#39;space&#39; . That looks like its working well. To predict on all the images in the test set, we are going to need a way to get the labels of the images, so as to compare with our prediction. . Let&#39;s work with one image first: . u_test = test_images[0] u_test . Path(&#39;asl_alphabet_test/U_test.jpg&#39;) . As you can see, the label of the test images is contained in the filename. So we are going to use regular expressions to extract the label from the filenames. . Here is a simple regular expression that does the job: . re.findall(&#39;(.+)_test.jpg$&#39;, u_test.name)[0] . &#39;U&#39; . And our prediction on that image: . learn.predict(u_test)[0] . &#39;U&#39; . And now, a way to compare our prediction, to the true label of the test set: . re.findall(&#39;(.+)_test.jpg$&#39;, u_test.name)[0] == learn.predict(u_test)[0] . True . Let us write a function that is going to extract the labels, and store them in a list: . def get_test_names(images): labels = [] for i in images: label = re.findall(&#39;(.+)_test.jpg$&#39;, i.name)[0] labels.append(label) return labels . We can now get all the labels for the 28 images in our test set: . test_labels = get_test_names(test_images) . len(test_labels) . 28 . Now we need a function to run inference on the images. It is going to take in the images, our model and the labels we just got as parameters and output the mean accuracy of our predictions: . def run_inference(images, model, labels): corrects = [] # get the number of images to inference num_images = len(images) for i in range(num_images): # get the inference for an image prediction = model.predict(images[i])[0] # compare with the label for that image is_equal = (prediction==labels[i]) # append result to the list corrects.append(is_equal) # convert the list of inferences to float Tensor corrects = torch.Tensor(corrects).float() # return the mean accuracy return corrects.mean().item() . We can use that function to get the mean accuracy of our model on the small test dataset. . test_accuracy = run_inference(test_images, learn, test_labels) test_accuracy . 1.0 . We get 100% accuracy. Impressive. But as I mentioned earlier, this is a small dataset, that doesn&#39;t do well to tell us how our model will generalize to new data. . Luckily, there is another dataset recommended to be used as a test set for this dataset. It contains 870 images, 30 images for each category. . Let us use the Kaggle API again to get this new dataset: . !kaggle datasets download -d danrasband/asl-alphabet-test . Downloading asl-alphabet-test.zip to /content 70% 17.0M/24.3M [00:00&lt;00:00, 24.5MB/s] 100% 24.3M/24.3M [00:00&lt;00:00, 33.3MB/s] . And unzip it to a test folder: . #collapse-output !unzip *zip -d test &amp;&amp; rm -rf *zip . test_path = Path(&#39;test&#39;) test_path.ls() . (#29) [Path(&#39;test/X&#39;),Path(&#39;test/G&#39;),Path(&#39;test/V&#39;),Path(&#39;test/I&#39;),Path(&#39;test/space&#39;),Path(&#39;test/N&#39;),Path(&#39;test/W&#39;),Path(&#39;test/P&#39;),Path(&#39;test/H&#39;),Path(&#39;test/Z&#39;)...] . We use the get_image_files to recursively get images from the newly-created test path. We get 870 images, so that seems to be working fine. . test_files = get_image_files(test_path) len(test_files) . 870 . To run inference, we are required to perform the same data preprocessing we perfomed on the training images. To make this easier, fastai suggest we use a test_dl that is created using the following syntax: . test_dl = learn.dls.test_dl(test_files, with_label=True) test_dl.show_batch() . We can now get the predicitons on all the test images easily using the get_preds function and store it in a test_preds variable. . test_preds = learn.get_preds(dl=test_dl) . This are our current vocabs of our data: . learn.dls.vocab . [&#39;A&#39;, &#39;B&#39;, &#39;C&#39;, &#39;D&#39;, &#39;E&#39;, &#39;F&#39;, &#39;G&#39;, &#39;H&#39;, &#39;I&#39;, &#39;J&#39;, &#39;K&#39;, &#39;L&#39;, &#39;M&#39;, &#39;N&#39;, &#39;O&#39;, &#39;P&#39;, &#39;Q&#39;, &#39;R&#39;, &#39;S&#39;, &#39;T&#39;, &#39;U&#39;, &#39;V&#39;, &#39;W&#39;, &#39;X&#39;, &#39;Y&#39;, &#39;Z&#39;, &#39;del&#39;, &#39;nothing&#39;, &#39;space&#39;] . To extract the true labels from the test images, we are again going to turn to regular expressions. But this time, we are required to write a regular expression robust enough to handle this three cases that represent how the rest of the images are named: . example_name = test_dl.items[370].name example_name . &#39;del0002_test.jpg&#39; . re.findall(r&#39;([A-Za-z]+) d+_test.jpg$&#39;, example_name)[0] . &#39;del&#39; . example_name_2 = test_dl.items[690].name example_name_2 . &#39;nothing0013_test.jpg&#39; . re.findall(r&#39;([A-Za-z]+) d+_test.jpg$&#39;, example_name_2)[0] . &#39;nothing&#39; . example_name_3 = test_dl.items[0].name example_name_3 . &#39;X0023_test.jpg&#39; . re.findall(r&#39;([A-Za-z]+) d+_test.jpg$&#39;, example_name_3)[0] . &#39;X&#39; . Now that we have that robust expression, we can proceed to check the accuracy of our prediction that we calculated: . We create a list to hold the result of our comparisons, from the predictions and the true labels, which we are going to use to calculate the final accuracy. . We also create a category_corrects dictionary, to tally for us, for each category, how many we predicted correct, so that we can see how our model performs on each category individually. . # create a list to hold True or False when comparing corrects = [] # count how many predictions we get correct per category category_corrects = dict.fromkeys(learn.dls.vocab, 0) # for each enumerated predictions for index, item in enumerate(test_preds[0]): # get the predicted vocab prediction = learn.dls.categorize.decode(np.argmax(item)) # get the confidence of the prediction confidence = max(item) confidence_percent = float(confidence) # get the true label for the image we are predicting image_name = test_dl.items[index].name label = re.findall(r&#39;([A-Za-z]+) d+_test.jpg$&#39;, image_name)[0] # get the comparison and append it to our corrects list is_correct = (prediction==label) corrects.append(is_correct) # if we got the prediction correct for that category, # increase the count by one if is_correct: category_corrects[prediction] += 1 # convert the list of inferences to float Tensor corrects = torch.Tensor(corrects).float() # print the mean accuracy print(f&#39;Accuracy on the test set: {corrects.mean().item():.4f}&#39;) . Accuracy on the test set: 0.6195 . As you can see, using this better test set, we can see that the accuracy reduces. . Since this is out of domain data, my intuition is that a better dataset that varies more could be collected and used in future. However for now, let&#39;s work with these results. . Remember, the test set is used as a final measure, and we shouldn&#39;t use it to improve our model . Let us check on the per-category prediction: . category_corrects . {&#39;A&#39;: 15, &#39;B&#39;: 30, &#39;C&#39;: 17, &#39;D&#39;: 25, &#39;E&#39;: 19, &#39;F&#39;: 13, &#39;G&#39;: 13, &#39;H&#39;: 30, &#39;I&#39;: 29, &#39;J&#39;: 22, &#39;K&#39;: 21, &#39;L&#39;: 29, &#39;M&#39;: 22, &#39;N&#39;: 14, &#39;O&#39;: 19, &#39;P&#39;: 30, &#39;Q&#39;: 29, &#39;R&#39;: 17, &#39;S&#39;: 7, &#39;T&#39;: 0, &#39;U&#39;: 11, &#39;V&#39;: 0, &#39;W&#39;: 27, &#39;X&#39;: 4, &#39;Y&#39;: 28, &#39;Z&#39;: 11, &#39;del&#39;: 23, &#39;nothing&#39;: 14, &#39;space&#39;: 20} . A plot would be better to analyze the information: . fig, ax = plt.subplots(figsize=(20, 10)) ax.bar(*zip(*category_corrects.items())) plt.show() . Our model performs really poorly on the letters T, V, and X!! We will see if this is going to be a problem in our Application that we create in part 2. . Making our Inference Model More Robust . Since I plan on using this model to create a Computer Vision Model, I deciced to retrain my model, adding the new dataset in order to make it more robust, since that data varied more. . NOTE: This is not how it should be done, you should never use your test set to train the model. I only combined the two datasets into one in order to get a better model since good Sign Language Data is hard to come by and the test set we used isn&#39;t the official test set, just a recommended dataset that could have been used for training a different model. Also, I didn&#39;t use my new model to get a better prediction on the test set. . signs = DataBlock( blocks=(ImageBlock, CategoryBlock), get_items=get_image_files, get_y=parent_label, splitter=RandomSplitter(seed=42), item_tfms=Resize(200), batch_tfms=aug_transforms() ) dls = signs.dataloaders(path/&#39;asl_alphabet_train&#39;, bs=64) . len(dls.train) . 1098 . learn = cnn_learner(dls, resnet18, loss_func=CrossEntropyLossFlat(), metrics=[error_rate, accuracy], opt_func=Adam) learn.fine_tune(4, base_lr=1e-2) . epoch train_loss valid_loss error_rate accuracy time . 0 | 0.248037 | 0.073583 | 0.020769 | 0.979231 | 04:13 | . epoch train_loss valid_loss error_rate accuracy time . 0 | 0.121224 | 0.061025 | 0.016502 | 0.983498 | 05:27 | . 1 | 0.036989 | 0.008055 | 0.001878 | 0.998122 | 05:27 | . 2 | 0.007163 | 0.003641 | 0.001081 | 0.998919 | 05:27 | . 3 | 0.003785 | 0.002509 | 0.000569 | 0.999431 | 05:27 | . I can now export my model, which I will use in the next Part, to create a Computer Vision Model to predict new data. Stay tuned! . learn.export(&#39;sign_language.pkl&#39;) . Here is the link to Part B .",
            "url": "https://jimmiemunyi.github.io/blog/tutorial/2021/01/20/Sign-Language-Classification-with-Deep-Learning.html",
            "relUrl": "/tutorial/2021/01/20/Sign-Language-Classification-with-Deep-Learning.html",
            "date": " • Jan 20, 2021"
        }
        
    
  
    
        ,"post3": {
            "title": "Pneumonia X-Ray Classification.",
            "content": ". Introduction . Recently, I have been widely interested in the overlap between Deep Learning and Biology and decided to start learning about it. I came across an interesting challenge, where I try to build a Pneumonia Binary Classification Computer Vision model that predicts whether a chest X-ray has Pneumonia or not. I also learned a nifty approach to deal with a problem that is common in Medical Datasets, that I will show you here. . I am going to be using fastai and PyTorch for this tutorial. I want to extend my thanks to the author of this dataset from Kaggle that we are going to be using today. . Let&#39;s get the packages that we will need: . from fastai.vision.all import * import matplotlib.pyplot as plt import seaborn as sns . How does our data look like? . path = Path(&#39;data/chest_xray&#39;) . path.ls() . (#5) [Path(&#39;__MACOSX&#39;),Path(&#39;chest_xray&#39;),Path(&#39;val&#39;),Path(&#39;train&#39;),Path(&#39;test&#39;)] . It is already separated for us in the relevant folders. Awesome! Let&#39;s check inside one of the folders: . (path/&#39;train&#39;).ls() . (#2) [Path(&#39;train/PNEUMONIA&#39;),Path(&#39;train/NORMAL&#39;)] . The folders are also separated into their respective classes. How many images do we have per category? . train = get_image_files(path/&#39;train&#39;) val = get_image_files(path/&#39;val&#39;) test = get_image_files(path/&#39;test&#39;) print(f&quot;Train: {len(train)}, Valid: {len(val)}, Test: {len(test)}&quot;) . Train: 5216, Valid: 16, Test: 624 . Our validation set has only 16 images! That won&#39;t be a good measurement of how our model is performing but we will tackle that later on. . Let us check the distribution of images between the two classes: . normal = get_image_files(path/&#39;train&#39;/&#39;NORMAL&#39;) pneumonia = get_image_files(path/&#39;train&#39;/&#39;PNEUMONIA&#39;) print(f&quot;Normal Images: {len(normal)}. Pneumonia Images: {len(pneumonia)}&quot;) . Normal Images: 1341. Pneumonia Images: 3875 . data = [[&#39;Normal&#39;, len(normal)], [&#39;Pneumonia&#39;, len(pneumonia)]] df = pd.DataFrame(data, columns=[&#39;Class&#39;, &#39;Count&#39;]) sns.barplot(x=df[&#39;Class&#39;], y=df[&#39;Count&#39;]); . Remember the problem common to Medical Datasets I was talking about? We see that our dataset is imbalanced. Our negative class (Normal) is 3 times less than our positive class. This is a problem. How do we solve it? . First, we will utilize some Data Augmentations. This is artificially growing our dataset by introducing some transforms on the images. . Second, we will use some lessons that I read from a wonderful paper: Mateusz Buda, Atsuto Maki, and Maciej A Mazurowski. A systematic study of the class imbalance problem in convolutional neural networks that studies the problem of class imbalances and offers a way to solve it. I highly recommend reading the paper. . However, we need to build a Baseline model that we can later improve on. . For the Data Augmentations, we have to be careful to pick the ones that make sense for our X-Ray data. I picked Rotate and Zoom. If you think about it, transforms like flipping the image won&#39;t be useful since our body parts are in specific locations. e.g our liver is one the right, and flipping the X-Ray would take it to the opposite side. . I also utilize a nifty trick called Presizing from the fastai team. The basic idea behind this approach is this: We first resize the image to a bigger size, bigger than what we want for the final image. For instance, here, I resize the image to 460x460 first, then later on, resize it to 224x224 and at the same time, apply all the augmentaions at once. That is the most important point, applying the final resize and the transforms at the same time, preferably as a batch transform on the GPU. This helps in a higher quality image than insted, let&#39;s say, applying them one by one, which may degrade the data. To learn more about presizing, check out his notebook. . augs = [RandomResizedCropGPU(size=224, min_scale=0.75), Rotate(), Zoom()] . dblock = DataBlock( blocks=(ImageBlock, CategoryBlock), get_items=get_image_files, get_y=parent_label, splitter=GrandparentSplitter(train_name=&#39;train&#39;, valid_name=&#39;val&#39;), item_tfms=Resize(460), batch_tfms=augs ) . Let us collect the data in a dataloaders object and show one batch. . dls = dblock.dataloaders(path) . dls.show_batch() . We are going to utilize transfer learning on the resnet18 architecture. Our metrics to guide us are going to be error rate and accuracy. . learn = cnn_learner(dls, resnet18, metrics=[error_rate, accuracy]) . Downloading: &#34;https://download.pytorch.org/models/resnet18-5c106cde.pth&#34; to /root/.cache/torch/hub/checkpoints/resnet18-5c106cde.pth . . We use another great tool by fastai that helps us get the optimal learning rate to use. Something around 1x10-2 will work okay according to the plot. (The bottom scale is Logarithmic) . learn.lr_find() . SuggestedLRs(lr_min=0.012022644281387329, lr_steep=0.0008317637839354575) . Let me explain, what happens in the next few cells. In Transfer Learning, we need to retain the knowledge learned by the pretrained model. So what happens is, we freeze all the earlier layers and chop off the last classification layer and replace it with a layer with random weights and the correct number outputs, two in this case(it is done by default in fastai when creating the learner through the cnn_learner method). . So, first we train the final layer (with random weights) for 3 epochs, with the one cycle training policy. Then we unfreeze the whole model, find the new suitable learning rate (because we are now updating all the weights) and train for a further 3 epochs. . learn.fit_one_cycle(3, lr_max=1e-2) . epoch train_loss valid_loss error_rate accuracy time . 0 | 0.168814 | 0.368405 | 0.187500 | 0.812500 | 03:13 | . 1 | 0.099094 | 0.734940 | 0.312500 | 0.687500 | 03:15 | . 2 | 0.063019 | 0.439835 | 0.187500 | 0.812500 | 03:17 | . learn.unfreeze() . learn.lr_find() . SuggestedLRs(lr_min=6.309573450380412e-08, lr_steep=2.2908675418875646e-06) . This plot looks different from the other one, since we are now updating all the weights, not just the final random ones, and the first layers don&#39;t need too much learning. 4x10-6 is the suggested learning rate. . Let&#39;s train the whole model with the new learning rate: . learn.fit_one_cycle(3, lr_max=4.4e-6) . epoch train_loss valid_loss error_rate accuracy time . 0 | 0.053950 | 0.435164 | 0.187500 | 0.812500 | 03:24 | . 1 | 0.053677 | 0.220901 | 0.062500 | 0.937500 | 03:23 | . 2 | 0.047155 | 0.361383 | 0.125000 | 0.875000 | 03:23 | . 87.5% accuracy. Not bad for a start, but we will try ways to improve it. . Let us see how our model is doing by inspecting the Confusion Matrix. . interp = ClassificationInterpretation.from_learner(learn) interp.plot_confusion_matrix() . Four &#39;NORMAL&#39; images are being classified as &#39;PNEUMONIA&#39;. Can this be caused because our model doesn&#39;t have enough examples of the &#39;NORMAL&#39; class to learn about? Let us investigate. . Solving the Imbalance Problem . The solution to the problem, as with many solutions to problems in Deep Learning, is simple and something that can be implemented easily. Quoting from their conclusions in the paper: . The method of addressing class imbalance that emerged as dominant in almost all analyzed scenarios was oversampling. | Oversampling should be applied to the level that completely eliminates the imbalance. | Oversampling does not cause over tting of convolutional neural networks. | . Basically, Oversampling is artificially making the minority class bigger by replicating it a couple of times. The paper recommends we replicate it until is completely eliminates the imbalance, therefore, our new oversampled &#39;NORMAL&#39; class is going to be the original images, repeated three times. And we don&#39;t have to worry about overfitting of our model too! . os_normal = get_image_files(path/&#39;train&#39;/&#39;NORMAL&#39;) * 3 pneumonia = get_image_files(path/&#39;train&#39;/&#39;PNEUMONIA&#39;) print(f&quot;Normal Images: {len(os_normal)}. Pneumonia Images: {len(pneumonia)}&quot;) . Normal Images: 4023. Pneumonia Images: 3875 . data = [[&#39;Normal&#39;, len(os_normal)], [&#39;Pneumonia&#39;, len(pneumonia)]] os_df = pd.DataFrame(data, columns=[&#39;Class&#39;, &#39;Count&#39;]) sns.barplot(x=os_df[&#39;Class&#39;], y=os_df[&#39;Count&#39;]); . After the Oversampling, the distribution between the classes is almost at per. Now our dataset it balanced and we can train a new model on this Balanced Data. . Now we need a new way to split our dataset when loading it to a DataLoader. Our new Oversampled Path is going to be the Oversampled &#39;NOMARL&#39; class, the original &#39;PNEUMONIA&#39; and the validation data. . Then we create two variables, train_idx and val_idx, that represent the indexes of the respective category of the images, whether train or validation. . os_path = os_normal + pneumonia + val train_idx = [i for i, fname in enumerate(os_path) if &#39;train&#39; in str(fname)] val_idx = [i for i, fname in enumerate(os_path) if &#39;val&#39; in str(fname)] . L(train_idx), L(val_idx) . ((#7898) [0,1,2,3,4,5,6,7,8,9...], (#16) [7898,7899,7900,7901,7902,7903,7904,7905,7906,7907...]) . Now we have 7898 images in the Train instead of the original 5216, and we still have 16 Validation images. We load them up in a dataloaders object, which our learner expects, find the new optimal learning rate and train the model: . dblock = DataBlock( blocks=(ImageBlock, CategoryBlock), get_items=get_image_files, get_y=parent_label, splitter=lambda x: [train_idx, val_idx], item_tfms=Resize(460), batch_tfms=augs ) . dls = dblock.dataloaders(path) learn = cnn_learner(dls, resnet18, metrics=[error_rate, accuracy]) learn.lr_find() . SuggestedLRs(lr_min=0.025118863582611083, lr_steep=0.0030199517495930195) . learn.fit_one_cycle(3, lr_max=2.5e-2) . epoch train_loss valid_loss error_rate accuracy time . 0 | 0.346110 | 0.308598 | 0.125000 | 0.875000 | 02:18 | . 1 | 0.196921 | 0.040522 | 0.000000 | 1.000000 | 02:17 | . 2 | 0.107927 | 0.038475 | 0.000000 | 1.000000 | 02:19 | . After just three epochs, we get 100% accuracy on the Validation Set. The Oversampling Solution worked well for us. . However, as I mentioned before, we only have 16 images on the Validation Set, so its not a good measure on how well our model generalizes. . So I combined the Validation and Test Set into one, and used that as my Validation Set to test how well my model generalizes. . merged_path = os_normal + pneumonia + val + test train_idx = [i for i, fname in enumerate(merged_path) if &#39;train&#39; in str(fname)] val_idx = [i for i, fname in enumerate(merged_path) if &#39;train&#39; not in str(fname)] . L(train_idx), L(val_idx) . ((#7898) [0,1,2,3,4,5,6,7,8,9...], (#640) [7898,7899,7900,7901,7902,7903,7904,7905,7906,7907...]) . We now have 640 images as our validation. How does our model perform with this new data? . learn.fit_one_cycle(5, lr_max=1e-4) . epoch train_loss valid_loss error_rate accuracy time . 0 | 0.087615 | 0.043269 | 0.014062 | 0.985937 | 02:30 | . 1 | 0.079633 | 0.041382 | 0.015625 | 0.984375 | 02:30 | . 2 | 0.067601 | 0.054884 | 0.018750 | 0.981250 | 02:31 | . 3 | 0.053627 | 0.027576 | 0.006250 | 0.993750 | 02:30 | . 4 | 0.037838 | 0.025329 | 0.004688 | 0.995313 | 02:27 | . 99.5% accuracy after 5 epochs looks good, looks like our model generalizes well. . See you next time! .",
            "url": "https://jimmiemunyi.github.io/blog/begginer/2020/10/14/Pneumonia-Classification-with-Deep-Learning.html",
            "relUrl": "/begginer/2020/10/14/Pneumonia-Classification-with-Deep-Learning.html",
            "date": " • Oct 14, 2020"
        }
        
    
  
    
        ,"post4": {
            "title": "Training State of the Art Models with Little Data and Compute with Transfer Learning.",
            "content": "Introduction . Today, we are going to have a beginner&#39;s look into an interesting approach in Deep Learning, called Transfer Learning. We are also going to build a simple Computer Vision model to demonstrate a working example of Transfer Learning. Our model will be a classifier that differentiates between Millipedes, Centipedes and Spiders. . We are going to be using fastai and PyTorch for this tutorial. More specifically, we are going to be using Google&#39;s free service Colab that gives us free GPU to do Deep Learning. . What is Transfer Learning? . So what really is it Transfer Learning? . In simple terms, Transfer Learning is the approach of transferring knowledge from one Deep Learning Model to another. In more technical terms, Transfer Learning is the approach of using an already pretained model, and adapting it to a new problem. . This simple approach helps developers get state of the art results with little data and little compute. . Training a model from scratch requires a lot of compute and a lot of data. For example the pretrained model we are going to use was trained on ImageNet database which contains 1.2 million images with 1000 categories. In practice, very few people train the enitre Network from scratch, we often leverage the knowledge gained from these pretrained models and adapt them to our specific dataset. . To learn more about Transfer Learning, you can use these notes. . A Little Intuition Before We Begin. . Deep Learning models consists of many layers inside them, each learning its own unique features. In 2013, two researches published a paper called Visualizing and Understanding Convolutional Networks that helped visualize what is going on inside the layers and what they actually learn. In the interest of keeping this post beginner friendly, I won&#39;t go much into the technical details of the paper but, here are some images showing what the layers in the neural network learn. . In the first layer, the two reasearchers showed that the network learns general features like diagonal, vertical and horizontal edges. These are the building blocks. . . In the second layer, the Network starts to learn simple patterns that are also general to any Computer Vision Data like circles, etc. . And it keeps on improving layer by layer, building from the building blocks. . . So as you can see, the first layers of a Convolutional Network learn general patterns that are common to all images. This is why we don&#39;t want to discard these knowledge because it can be used for any dataset. . What actually happens in transfer learning, specifically for Computer Vision Tasks is the first layers are freezed (no learning goes on) and the final layer (the one that actually does the classification e.g dog from cat) is chopped of and replaced with a classification layer that is specific to the dataset, i.e our final layer will be trained to specifically distinguish Millipedes, Centipedes and Spiders. . Let&#39;s get straight into the practical example, shall we? . Training A Computer Vision Model Using Transfer Learning . Let&#39;s start by handling our imports: . from fastai.vision.all import * . For the DataSet, we are going to scrap the internet for centipedes, millipedes and spiders. We are going to use a very handy tool, jmd_imagescraper, that uses DuckDuckGo for the image scraping and returns some nice images. The developer also provides a nice ImageCleaner that we are going to use later to clean up the dataset. Let&#39;s import them too. . from jmd_imagescraper.core import * from jmd_imagescraper.imagecleaner import * . We create a directory called &#39;data&#39;. We then use the image scrapper to get the images of the three classes we are interested in and save them each to their specific directories inside the &#39;data&#39; directory, i.e. the centipedes will be stored inside a directory called &#39;Centipedes&#39; and the millipedes will be stored inside the &#39;Millipede&#39; directory and likewise for the spiders (This arrangement is going to prove useful later!). We download 150 images for each. . root = Path().cwd()/&quot;data&quot; duckduckgo_search(root, &#39;Centipede&#39;, &#39;centipede&#39;, max_results=150) duckduckgo_search(root, &#39;Millipede&#39;, &#39;millipede&#39;, max_results=150) duckduckgo_search(root, &#39;Spider&#39;, &#39;spider&#39;, max_results=150) . Let us see how our &#39;data&#39; directory looks after the downloading completes: . path = Path(&#39;data&#39;) . path.ls() . (#3) [Path(&#39;Spider&#39;),Path(&#39;Centipede&#39;),Path(&#39;Millipede&#39;)] . As you can see, we have three directories inside, each corresponding to the images it containes. If we look inside a specific directory, e.g. Centipede, we see the individual images downloaded, and the total number of images downloaded (150) prefixed before the list: . (path/&#39;Centipede&#39;).ls() . (#150) [Path(&#39;Centipede/135_dd009ed0.jpg&#39;),Path(&#39;Centipede/084_69e0099b.jpg&#39;),Path(&#39;Centipede/129_5409e84e.jpg&#39;),Path(&#39;Centipede/077_cc3b3dd9.jpg&#39;),Path(&#39;Centipede/097_cdfd1abf.jpg&#39;),Path(&#39;Centipede/030_55b8c176.jpg&#39;),Path(&#39;Centipede/090_ef7667e5.jpg&#39;),Path(&#39;Centipede/028_5b5b8f46.jpg&#39;),Path(&#39;Centipede/052_ec993151.jpg&#39;),Path(&#39;Centipede/056_86c51270.jpg&#39;)...] . Okay, now that we have got our images ready, we can begin the next step which is processing them. We use a handy function provided by fastai called get_image_files, which simply recursively goes through the directory and gets all the images inside them. . fns = get_image_files(path) fns . (#450) [Path(&#39;Spider/019_ffed6440.jpg&#39;),Path(&#39;Spider/100_59bd4277.jpg&#39;),Path(&#39;Spider/056_21ce5818.jpg&#39;),Path(&#39;Spider/114_33c06a31.jpg&#39;),Path(&#39;Spider/001_f7a867bc.jpg&#39;),Path(&#39;Spider/139_3d7b9ec9.jpg&#39;),Path(&#39;Spider/007_f8419240.jpg&#39;),Path(&#39;Spider/113_3082658a.jpg&#39;),Path(&#39;Spider/135_347f4e6e.jpg&#39;),Path(&#39;Spider/144_e94c648a.jpg&#39;)...] . We have 450 images, which makes sense. Did any image get corrupted during downloading? Let us verify the images. . failed = verify_images(fns) failed . (#0) [] . Luckily, no image got corrupted. Good, now let&#39;s go on. . Let us open one and see how it looks: . im = Image.open(fns[2]) im.to_thumb(128, 128) . So far everything is looking good! . Since we have gotten the images, now we can start processing them in a format that our learner expects. We are going to use the DataBlock API from fastai. . I am going to give a brief explanation of what is going on, but I highly recommend going through their documentaion about the DataBlock API, where they explain everything in detail. . Let us first see how the code looks like: . images = DataBlock( blocks=(ImageBlock, CategoryBlock), get_items=get_image_files, get_y=parent_label, splitter=RandomSplitter(valid_pct=0.2, seed=42), item_tfms=RandomResizedCrop(224, min_scale=0.3), batch_tfms=aug_transforms() ) . Let us go step by step: . blocks=(ImageBlock, CategoryBlock) . This simply tells the dataloader the format of the data it is receiving, i.e. here, our independent variable is going to be and Image, hence the ImageBlock, and the labels or the dependent variables are going to be a category (either &#39;Centipede&#39;, &#39;Millipede&#39;, or &#39;Spider&#39;) . get_items=get_image_files . This tells our dataloader how to get the items, using the get_image_files we used before . get_y=parent_label . This instructs our dataloader on how to get the labels of the images, by getting the parent name of the directory the image is in (That&#39;s why we arranged the pictures in images in their repsective directories). . splitter=RandomSplitter(valid_pct=0.2, seed=42) . This provides a way of splitting the dataset into a training and a validation set. Here we split the validation set into 20% of the total data. The seed option is there to ensure we get the same validation set every time. . item_tfms=RandomResizedCrop(224, min_scale=0.3) . This is simply a transformation done on every image individually. Here we resize the images to 224 x 224. Images should be the same size when fed into the Neural Network. We go an extra step of randomly picking a different crop of the images every time, i.e. a minimum of 30% of the total image every time. Randomly picking a different section of the image every time helps the Network generalize well to new data. . And finally this, . batch_tfms=aug_transforms() . performs data augmentation on the images. Data Augmentation deserves a whole post by itself to explain, but for intuition on why we do this, let me give a brief explanation. When using our model in the real world, people will provide images in very different formats, taken from different angles, some from cameras with low pixel capturing capabilities which provides somewhat blurry images. But we still need the model to generalize well to all of these cases! Hence data augmentation. Data Augmentation transforms the images to different versions, flipping it, rotating it, darkening it and many other transforms, to help the model generalize well in the real world. We use a batch transform here that applies the transforms in batches in the GPU which is way faster. . Let us load the images into a dataloader, which is what the learner expects, and show one batch of the images. . dls = images.dataloaders(path) . dls.show_batch(max_n=9) . As you can see, the images are being Randomly Resized, cropping every time to 30% of the image. . Let us see what the augmentation transforms did to our data, by adding the unique parameter: . dls.train.show_batch(max_n=8, nrows=2, unique=True) . As you can see, these all are the same images but transformed differently. . Now we are ready to create the model. . Training The Model . Remember all the talk of using a pretrained model? Well, here is where we apply it. . We are using the resnet18 pretrained model from PyTorch and fine tuning it for 5 epochs for our specific dataset. The &#39;18&#39; suffix simply means it has 18 layers, which is going to be sufficient for our simple model. However, there are deeper models like resnet34, resnet50, resnet101 and resnet152 with the respective number of layers. Deeper models take more time to train, and often produce better results but not always! As a rule of thumb, start simple then upgrade if need be. . We load our dataloaders (dls) created earlier and we are going to output &#39;error_rate&#39; and &#39;accuracy&#39; as our metrics, to guide us on how well our model is performing. . We are going to use a cnn_learner which is simply a Convolutional Neural Network Learner which is the type of Neural Network widely used for Computer Visions tasks. . learn = cnn_learner(dls, resnet18, metrics=[error_rate, accuracy]) learn.fine_tune(5) . Downloading: &#34;https://download.pytorch.org/models/resnet18-5c106cde.pth&#34; to /root/.cache/torch/hub/checkpoints/resnet18-5c106cde.pth . . epoch train_loss valid_loss error_rate accuracy time . 0 | 1.545470 | 0.389558 | 0.155556 | 0.844444 | 00:03 | . epoch train_loss valid_loss error_rate accuracy time . 0 | 0.454676 | 0.267906 | 0.100000 | 0.900000 | 00:03 | . 1 | 0.342936 | 0.232648 | 0.066667 | 0.933333 | 00:03 | . 2 | 0.291200 | 0.193626 | 0.077778 | 0.922222 | 00:03 | . 3 | 0.237957 | 0.190752 | 0.066667 | 0.933333 | 00:03 | . 4 | 0.205695 | 0.206321 | 0.066667 | 0.933333 | 00:03 | . After 5 epochs, we get an error rate of 6.7% which corresponds to an accuracy of 93.3%. That is really good considering our small dataset and the time we used to train this model, approximately 20 seconds, but as you will see, we can improve this. . You may be asking yourself why we didn&#39;t clean the dataset first before training. It is good to train your model as soon as possible to provide you with a baseline which you can start improving from. And we will clean the dataset later, with the help of the training results and then retrain with a clean dataaset and see if it improves. . Let us inspect what errors our initial model is making. The Classification Confusion Matrix can aid in displaying this in a good format. . interp = ClassificationInterpretation.from_learner(learn) interp.plot_confusion_matrix() . The dark colors on that diagonal indicate that the model is perfoming well. But it is still making mistakes, for example it classified Centipedes as Millipedes 4 times and Spiders as Centipedes twice. . Let us see the specific images it is getting wrong and try to understand why it is confusing them by plotting the top losses of our model. . interp.plot_top_losses(5, nrows=5) . Straight away we can see that some of the mistakes it is making is because of unclean data. For example the 2nd and 4th images have nothing to do with our data. . This is why we need to clean the data. As you can see, training the model first helps us with the cleaning process. . We are going to use the ImageCleaner provides by the jmd_imagescrapper developer. . display_image_cleaner(root) . . I did deleted a few of the images from the datasets that didn&#39;t fit the criteria and we were left with 394 images (but useful ones!). . fns = get_image_files(path) fns . (#394) [Path(&#39;Spider/019_ffed6440.jpg&#39;),Path(&#39;Spider/100_59bd4277.jpg&#39;),Path(&#39;Spider/056_21ce5818.jpg&#39;),Path(&#39;Spider/114_33c06a31.jpg&#39;),Path(&#39;Spider/001_f7a867bc.jpg&#39;),Path(&#39;Spider/139_3d7b9ec9.jpg&#39;),Path(&#39;Spider/007_f8419240.jpg&#39;),Path(&#39;Spider/113_3082658a.jpg&#39;),Path(&#39;Spider/135_347f4e6e.jpg&#39;),Path(&#39;Spider/144_e94c648a.jpg&#39;)...] . Okay, now we create a new dataloader with the clean images. . dls = images.dataloaders(path) . Will training with only clean data help improve our model? Lets train a new model and see. We are going to use the exact details we used before, but I am fine-tuning for 10 epochs this time. . learn = cnn_learner(dls, resnet18, metrics=[error_rate, accuracy]) learn.fine_tune(10) . epoch train_loss valid_loss error_rate accuracy time . 0 | 2.070883 | 0.254761 | 0.076923 | 0.923077 | 00:02 | . epoch train_loss valid_loss error_rate accuracy time . 0 | 0.478606 | 0.169040 | 0.038462 | 0.961538 | 00:02 | . 1 | 0.413722 | 0.118356 | 0.038462 | 0.961538 | 00:02 | . 2 | 0.333819 | 0.103353 | 0.038462 | 0.961538 | 00:02 | . 3 | 0.260725 | 0.119273 | 0.025641 | 0.974359 | 00:02 | . 4 | 0.213143 | 0.118922 | 0.025641 | 0.974359 | 00:02 | . 5 | 0.185268 | 0.092165 | 0.025641 | 0.974359 | 00:02 | . 6 | 0.156762 | 0.087852 | 0.012821 | 0.987179 | 00:02 | . 7 | 0.138017 | 0.083028 | 0.025641 | 0.974359 | 00:02 | . 8 | 0.118409 | 0.083742 | 0.025641 | 0.974359 | 00:02 | . 9 | 0.111713 | 0.082776 | 0.025641 | 0.974359 | 00:02 | . We went upto an error rate of just 2.6% which means that our model is correct 97.4% of the time! . As you have seen practically, Transfer Learning is a very important technique in Deep Learning that can go a long way. We only used 394 images here and trained for approximately for 20 seconds and got a model which is pretty accurate. . Stay tuned for more. .",
            "url": "https://jimmiemunyi.github.io/blog/begginer/2020/10/02/Transfer-Learning.html",
            "relUrl": "/begginer/2020/10/02/Transfer-Learning.html",
            "date": " • Oct 2, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "Jimmie Munyi. . I am a developer, currently self teaching Machine Learning and Deep Learning. . This is my technical blog where I post stuff I’m working on and stuff I have learnt. . I am a student, graduation set for 2021. .",
          "url": "https://jimmiemunyi.github.io/blog/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page11": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://jimmiemunyi.github.io/blog/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}